{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/LICENSE","path":"LICENSE","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.png","path":"images/alipay.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechatpay.png","path":"images/wechatpay.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/affix.js","path":"js/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/exturl.js","path":"js/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/js.cookie.js","path":"js/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/post-details.js","path":"js/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scroll-cookie.js","path":"js/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/scrollspy.js","path":"js/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.jpg","path":"images/favicon.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"8f5c30517c49dfd5c988358678118fbc005a8662","modified":1565868238013},{"_id":"source/LICENSE","hash":"09f231adcc395e2d341f103fa49157306d5d2173","modified":1565868238013},{"_id":"source/robots.txt","hash":"c327d4fce06023b2693e5d65f7f678e6a162b79e","modified":1565868238013},{"_id":"themes/next/.all-contributorsrc","hash":"a5a536579490546f2275da03765738ceabe45584","modified":1565868238013},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1565868238013},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1565868238013},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1565868238013},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1565868238013},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1565868238013},{"_id":"themes/next/_config.yml","hash":"3a686f5464d053d262108b0c848517652253bb83","modified":1566410626274},{"_id":"themes/next/bower.json","hash":"e6a80b9ed2d618d1cca5781952c67167a7cfac07","modified":1565868238013},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1565868238013},{"_id":"themes/next/gulpfile.coffee","hash":"d2bf238ee4bdd6a3df9dd747396ff7a576d50c59","modified":1565868238013},{"_id":"themes/next/package.json","hash":"d25486218dae153770644059288dc6f930d5d43d","modified":1565868238017},{"_id":"source/_data/styles.styl","hash":"6a77ae92bdaa8af2a3a828d4fbf6f517fa4009a2","modified":1566233461702},{"_id":"source/_posts/2018-09-11-CrawlerTutorial1_en.md","hash":"8c85d96fbf3100bfe7bc973cf78947f71d35340e","modified":1565868238013},{"_id":"source/_posts/2018-09-11-CrawlerTutorial1_zh.md","hash":"ec3633f205d15ccebc88f88b70b42f90242a11f4","modified":1565868238013},{"_id":"source/_posts/2018-09-16-UploadedSomePics.md","hash":"cd91a43b8f5bfa81d3cad8b78d8f7fba04b52588","modified":1565868238013},{"_id":"source/_posts/2018-09-18-CrawlerTutorial2_zh.md","hash":"d0794b0529801f4f3edd567fd9adeb26006dd82f","modified":1565868238013},{"_id":"source/_posts/2019-07-26-BuildBlog_jpn.md","hash":"41fc92f61822b14d17a8c872f3716d2cb012859d","modified":1565868238013},{"_id":"source/_posts/2019-07-29-Build-live2d_jpn.md","hash":"7c3f46c195d88b66bda0a01e93fd8546dfc311cd","modified":1565868238013},{"_id":"source/about/index.md","hash":"f95e02c09c79463bfad0460cfeeb61bcc2cfc62b","modified":1565868238013},{"_id":"source/categories/index.md","hash":"ae0b8352a97de6c0d2aa6f8c5ff687af2bfc230c","modified":1565868238013},{"_id":"source/messageboard/index.md","hash":"3adf888f4e061ebb65280188d882dacfdddf8dc4","modified":1565868238013},{"_id":"source/tags/index.md","hash":"d148f4b5cae8cc2a6147792fb4e5562e0f270dbd","modified":1565868238013},{"_id":"source/trending/index.md","hash":"18f86d4257025d5cfdeb0ac4488868522bd088d5","modified":1566398965586},{"_id":"themes/next/languages/de.yml","hash":"88dcfa3e53cef1b7f858f98ca9f980179169ae4c","modified":1565868238013},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1565868238013},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1565868238013},{"_id":"themes/next/languages/es.yml","hash":"a5203c7bbae70bc40f2ee526f9e8105ca9be851e","modified":1565868238013},{"_id":"themes/next/languages/fa.yml","hash":"cc1f3a13e020e2cc666ddc57aaebc4c1ebd669d0","modified":1565868238013},{"_id":"themes/next/languages/fr.yml","hash":"c1e2e892c678920854e1f3df409118398523849e","modified":1565868238013},{"_id":"themes/next/languages/hu.yml","hash":"3b4c10c86a228da70dc4b1a1784a6f942e186032","modified":1565868238013},{"_id":"themes/next/languages/id.yml","hash":"3a9f4485e6801e0e6fae749133a52e3797760795","modified":1565868238013},{"_id":"themes/next/languages/it.yml","hash":"28ff9197a3d21e838e33bb026d8adb544320cb1a","modified":1565868238013},{"_id":"themes/next/languages/ja.yml","hash":"8f85a6500716191159f16c7f484ba61ddd16eeb6","modified":1565868238013},{"_id":"themes/next/languages/ko.yml","hash":"1df31bf037bcb6868a4bd60c49ff55eec5b8167f","modified":1565868238013},{"_id":"themes/next/languages/nl.yml","hash":"6f4a339ecc67a140f3f9c7bec369cbda6b45afd7","modified":1565868238013},{"_id":"themes/next/languages/pt-BR.yml","hash":"301a0535df5de7b585c7c9752053c41c6ef26f9b","modified":1565868238013},{"_id":"themes/next/languages/pt.yml","hash":"6d87701443e33a13574049e613f064f1eb250c95","modified":1565868238013},{"_id":"themes/next/languages/ru.yml","hash":"93872ac01074159566ee3e1738eea6e9216bab8e","modified":1565868238013},{"_id":"themes/next/languages/tr.yml","hash":"5489606e6c40c0b226a3414c8e5037aac965211d","modified":1565868238013},{"_id":"themes/next/languages/uk.yml","hash":"765ba405778f07d7ec3713606568852b04e1a862","modified":1565868238013},{"_id":"themes/next/languages/vi.yml","hash":"6a812db8606498980cd64f001e9ef2f50e124809","modified":1565868238013},{"_id":"themes/next/languages/zh-CN.yml","hash":"f311ad2cc2edba144764c36c0035b6ed0d356a53","modified":1565868238013},{"_id":"themes/next/languages/zh-HK.yml","hash":"7a5e47f561d4b6e132f7f3b09676afbf8520264e","modified":1565868238013},{"_id":"themes/next/languages/zh-TW.yml","hash":"3f3674cac8f47a9a509a7557ea1557bbfbd027e8","modified":1565868238013},{"_id":"themes/next/layout/_layout.swig","hash":"cacd1eb993458ad76741707186b7a468e3f2ce9e","modified":1565868238013},{"_id":"themes/next/layout/archive.swig","hash":"7e8f3a41a68e912f2b2aaba905d314306ccaf794","modified":1565868238017},{"_id":"themes/next/layout/category.swig","hash":"dda0e6b2139decaf5e865d22ec9d45fdb615a703","modified":1565868238017},{"_id":"themes/next/layout/index.swig","hash":"7f343a6be7f15af301f0091af10b019670e42426","modified":1565868238017},{"_id":"themes/next/layout/page.swig","hash":"29c64c7031aaf276d3d11cdf2e95025996fd6eed","modified":1565868238017},{"_id":"themes/next/layout/post.swig","hash":"4291b34b17fc6f1c06eb69852c894913e889a774","modified":1565868238017},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1565868238017},{"_id":"themes/next/layout/tag.swig","hash":"a6be69a90924c9d2f4d90fb4867234859bd2c2e9","modified":1565868238017},{"_id":"themes/next/scripts/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1565868238017},{"_id":"themes/next/scripts/injects.js","hash":"f11bf387782cc0fcc8e64a374abbcad5b9e080c8","modified":1565868238017},{"_id":"themes/next/scripts/merge-configs.js","hash":"6b073de42bb120c86d7c41571db13e289853f9cc","modified":1565868238017},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565868238021},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"89b0a0e64637bf5b0cfea0a23642df3d95eedfa4","modified":1565868238013},{"_id":"themes/next/layout/_macro/post.swig","hash":"f878d7757d56a04e8bceceee07408757d51f4918","modified":1565868238013},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"a36ee8ad73c75fbe3def76e8a3b751126a884b23","modified":1565868238013},{"_id":"themes/next/layout/_partials/comments.swig","hash":"29a154c341c81bf200ab441a9887e9bbc5ec7270","modified":1565868238013},{"_id":"themes/next/layout/_partials/footer.swig","hash":"97953309b3ab354b8b7cf011850df42bc14b595d","modified":1565868238013},{"_id":"themes/next/layout/_partials/github-banner.swig","hash":"6357537ac0bb114aed4d61bafb39e6690a413697","modified":1565868238013},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1565868238013},{"_id":"themes/next/layout/_partials/post-edit.swig","hash":"06dac109504812b63766a80ede9ddacbd42d227d","modified":1565868238013},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"5db3bf74183de45bb4d6e4632a91f1a561467f17","modified":1565868238017},{"_id":"themes/next/layout/_scripts/exturl.swig","hash":"61ae10d41f67ece004a025077fdb28724af05090","modified":1565868238017},{"_id":"themes/next/layout/_scripts/next-boot.swig","hash":"283e78eb795f52236026434dab6a0667f14d3c08","modified":1565868238017},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"edaff4766e0c05fd5c889d9dd32884d376bef9d9","modified":1565868238017},{"_id":"themes/next/layout/_scripts/scroll-cookie.swig","hash":"ccd13d73429ef91ef5e8b7d9fa43c8188facdf41","modified":1565868238017},{"_id":"themes/next/layout/_scripts/three.swig","hash":"cf1819fc0a075d2389ca491740c98eba54ba72a6","modified":1565868238017},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"332267fb78c8a6bcf8964d9cfde9e981d7e4f75c","modified":1565868238017},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"4ccf2abbfd070874265b0436a3eff21f7c998dfb","modified":1565868238017},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"10b61a8bac671e375916a4d234c120117098a78f","modified":1565868238017},{"_id":"themes/next/layout/_third-party/index.swig","hash":"5f8d77a714a59ea3d1607bf8e20eae8a1a698d4e","modified":1565868238017},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"7757bd285732e857996b99af9d917953589fac5e","modified":1565868238017},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"cbe40cb67dad15ade967b0f396c1a95b6871f76a","modified":1565868238017},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"5cf1d7d6b2b5d5ac72a0ab9416e29ef1cce7833d","modified":1565868238017},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ed8b2871c10d7d1128bda48582997a4b926290de","modified":1565868238017},{"_id":"themes/next/scripts/filters/exturl.js","hash":"79ad823ca803cb00e0bfc648aa6c9d59711e0519","modified":1565868238017},{"_id":"themes/next/scripts/filters/lazyload.js","hash":"3d424ad75b1431f57f8d1d0218b2a06ecc0a6e70","modified":1565868238017},{"_id":"themes/next/scripts/filters/minify.js","hash":"727f49b825ddd4c8727f5fc6de146beecc083b87","modified":1565868238017},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"799a042bbf497a4c7a2981aa2014ff28fa1bb382","modified":1565868238017},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1565868238017},{"_id":"themes/next/scripts/tags/button.js","hash":"f3b4f7ae7e58072bbf410d950a99a0b53cbc866d","modified":1565868238017},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"c3554972bfb081f8b23046bc3198c0bd31b4c443","modified":1565868238017},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1565868238017},{"_id":"themes/next/scripts/tags/full-image.js","hash":"149de45ff83403e97f6affa280072392dca42e4f","modified":1565868238017},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1565868238017},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"8fc05f22b88553bc1d96e0c925799cd97920fc6a","modified":1565868238017},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1565868238017},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1565868238017},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1565868238017},{"_id":"themes/next/scripts/tags/pdf.js","hash":"f780cc72bff91d2720626e7af69eed25e9c12a29","modified":1565868238017},{"_id":"themes/next/scripts/tags/tabs.js","hash":"00ca6340d4fe0ccdae7525373e4729117775bbfa","modified":1565868238017},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1565868238017},{"_id":"themes/next/source/css/main.styl","hash":"b11b2689eb36242ef088deb377946023559f5587","modified":1565868238021},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1565868238021},{"_id":"themes/next/source/images/alipay.png","hash":"5c762d2add199bc85f3368803bcee921d34f90b1","modified":1565868238021},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1565868238021},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1565868238021},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1565868238021},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1565868238021},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1565868238021},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1565868238021},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1565868238021},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1565868238021},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1565868238021},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1565868238021},{"_id":"themes/next/source/images/wechatpay.png","hash":"8d074530737111e646faf3b2d37948b8f99b49af","modified":1565868238021},{"_id":"themes/next/source/js/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1565868238021},{"_id":"themes/next/source/js/algolia-search.js","hash":"cb6c1434d06d150c299946df549b38c6eff37fae","modified":1565868238021},{"_id":"themes/next/source/js/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1565868238021},{"_id":"themes/next/source/js/js.cookie.js","hash":"e0afce539f1fb81d59e3c6f0a68d736e2fb45d93","modified":1565868238021},{"_id":"themes/next/source/js/local-search.js","hash":"7478ce64c95b66bdab137bbc08028637f95d00c1","modified":1565868238021},{"_id":"themes/next/source/js/motion.js","hash":"ca2965da47ba9fc5b0dde0a825c29e0817b965b9","modified":1565868238021},{"_id":"themes/next/source/js/next-boot.js","hash":"9e4e4f21916271e2fbaff3ebc9b2a9a9ef7c1f69","modified":1565868238021},{"_id":"themes/next/source/js/post-details.js","hash":"a614a3830f7dfcd4df303c1255d558a135b3854e","modified":1565868238021},{"_id":"themes/next/source/js/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1565868238025},{"_id":"themes/next/source/js/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1565868238025},{"_id":"themes/next/source/js/utils.js","hash":"d6686675639ff8ea1477307f9521d2e81b60b0df","modified":1565868238025},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565868238021},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565868238021},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1565868238021},{"_id":"themes/next/source/images/favicon.jpg","hash":"7b3205df6b1969ea557a6c5dde6e844d0027cf6f","modified":1565868238021},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1565868238013},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"9257da95bd032bb3bd1da670e302fd2c7d5610b6","modified":1565868238013},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"dec2d88ba95a69ce2796015eb712f24ef34ad82a","modified":1565868238013},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7e3d5b40a8e13ce3bb5f28cb23f62c10c2bf14dd","modified":1565868238013},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"04b58599ef08ad6b46642426ca2909e5fd4d6b39","modified":1565868238013},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"dbd3bbca92341bc0b9f90a6b173486ae756b5e26","modified":1565868238013},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"5adc60100e129c1d0307bdcaa0c7b8e8375a6ea4","modified":1565868238013},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"02bb5748e8540b024e7f4008a9e640890b45280f","modified":1565868238013},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"0a32f84bfc08a9bf73120e93c42264d4c16a8c54","modified":1565868238013},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"0fa4fadb39467b01cede49f21b22e86b1a2da805","modified":1565868238013},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"2940df694fff28e8bf71b6546b4162f1e38227db","modified":1565868238013},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"3615db591dd910fb9fa96542734c7ec0ef05019c","modified":1565868238013},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"eea95b785c9c36d28e1839619793f66e89773bee","modified":1565868238013},{"_id":"themes/next/layout/_partials/post/reward.swig","hash":"d44f025eb93c99ddf90202d8293ccf80689a00c7","modified":1565868238017},{"_id":"themes/next/layout/_partials/post/wechat-subscriber.swig","hash":"ef11b5be5bfb2f0affe82cf521c002b37fef9819","modified":1565868238017},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"d9fe715fee716f78c7976c4e8838da71439ee0e0","modified":1565868238017},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"5e9cb609cd5559475be8ada2f90aae1621cb5718","modified":1565868238017},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1565868238017},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"1a8cd1c9314144ec8f41dbec13c2f08d0d6caef7","modified":1565868238017},{"_id":"themes/next/layout/_partials/share/likely.swig","hash":"06cafe19f0e307ef7ad54038ae76b8db6bb5b4f9","modified":1565868238017},{"_id":"themes/next/layout/_partials/share/needsharebutton.swig","hash":"2c4a66be4677d3e4dec3f169ac8a769098dad1fe","modified":1565868238017},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"4992f1572e560a418b70c10764a95ec827a1a7b3","modified":1565868238017},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"5b05f165547391bf231e52f56f3d925efc09bc44","modified":1565868238017},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ffc8e8836714ea79abeb77b75859634615652877","modified":1565868238017},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"108b157fbd1ac3baaf19ae87234fa8728ab79556","modified":1565868238017},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0097e45e7b671f8006b8b2d3c4f95cacc76a983c","modified":1565868238017},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"e42604fbb17648484e5f12afe230d826de089388","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-jquery.swig","hash":"b485797073495e24bf2f0b85880d513257bfed72","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"a5723950c343d220270bfd27bd30050eda6c3fb3","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"798d67e4a736613ab899eabe6529091bbcda7850","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"591b2ccd9713ccb922b9fcf5e278b6de9c5ec30b","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"8eadb929c9e50e58502ccad2dc2657746f8c592a","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"08cd47ef8572121b7811342d3c9a84a338a18191","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"3d01fa6edc0ad73f81813613f2e8a610777f1852","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"9fa1ca7059243197d8fbbd35108c36629a254570","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"4a966b7ffe2d80ff1b3dd0fd14b355766dc5c70f","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"a09d2af2a8470555eeb265b0eb14dc678079e870","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"f240a50cd9b627620d9a374a29cf95f0c5e99d7c","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"92e04a2b9e0c3df594bc22235d1894e5ad458dfc","modified":1565868238017},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"0dd5b315d1da55dbfc10f51a1f8952f72eba2720","modified":1565868238017},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"c59b04402ea02e52ea3dedc34217be0f0d1ad0ac","modified":1565868238017},{"_id":"themes/next/layout/_third-party/chat/index.swig","hash":"5ab4a8b4306c837d2f8c211a9d7fdaed76fa254d","modified":1565868238017},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"912368c41de675f458b267a49a99ae3e7e420ebb","modified":1565868238017},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"3533167c4295637b91d90f3bae7c651cd128bb6e","modified":1565868238017},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1a00b1b78c429721d6477c2d8f6f68f005285cc8","modified":1565868238017},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"b2ce0f9055a0ff16ec9790d407e64bb0bb6b9def","modified":1565868238017},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"771af07f7eeebd8e7fdc68ea53020ac2933f2281","modified":1565868238017},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"507730c005dbcfeeaaabad302896a7592bf7afe3","modified":1565868238017},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"15a4d60d3ecc59db2f23629477f8e7b8324981ed","modified":1565868238017},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a7e304b05a44279d3e4f611908d7faef9dc14d7c","modified":1565868238017},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"c2cb2f384bc30d31cdccf9794a729c03e687b45c","modified":1565868238017},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"74cf124ee38c68c55228c523b64e6e51981eabe4","modified":1565868238017},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"c426d5391f443cad632ebf7020ab01a69314b4ff","modified":1565868238017},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"7d1693416a5dc098f4723a53da2e2d1fc2d6e075","modified":1565868238017},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"353da7ea00400897ae920a085aa4bee2224da50d","modified":1565868238017},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1565868238017},{"_id":"themes/next/layout/_third-party/tags/caniuse.swig","hash":"8fc1ac1a65b9e5c0a9081ec0f740d12543336575","modified":1565868238017},{"_id":"themes/next/layout/_third-party/tags/index.swig","hash":"d997d1df9c677ceaa4f719cdb6ac3ad32be020e5","modified":1565868238017},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"d6e6ddda836bd9e2e8d9767a910c7d3280080e81","modified":1565868238017},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"810a9b2a6059f46c4a2ddb178f1eaa4c5e23750b","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"e62ef36efd7a54b40a3e97a465c6cea3e9f99e3f","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"f9f1091e99bdd5524f502796f200201c58fef9e3","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"d1d2cb68ae5f88797b74ea96a05fa912dbec0d7f","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"25ab6f05564c90acba2723d74648432a4736b04d","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/facebook-comments-plugin.js","hash":"325238af1c68b8eb9cf2a2c1945a627c7d804239","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"ffe96161def97f86ec6c7dcf7371d76fa73b0d5b","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"1cfb1fa780141aed8e5360ffa530bad2784b6255","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"4f3021fbf965954e4a3a7c5d799b61f9b4b18be7","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/vkontakte.js","hash":"5ce9376efe0f63a84ac1703e19bfdb68e5119a8a","modified":1565868238017},{"_id":"themes/next/scripts/filters/comment/warn.js","hash":"33bd124bdf668f7d7ea8e3fd5ad10aa69b5625d8","modified":1565868238017},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1565868238021},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2e8fb29aa92325df39054b5450757858c6cebc41","modified":1565868238021},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"4056cf687cf435697afe569caf3954b04ae277c9","modified":1565868238021},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"74ccaccd5810ffb497b555ec1902a43af0eb1d9e","modified":1565868238021},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"fd14b9b9e31170056d2544fb050106930b8818e4","modified":1565868238021},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"73168052a1a6efb558b4b8dc9351b8a59dd0b409","modified":1565868238021},{"_id":"themes/next/source/css/_variables/base.styl","hash":"d09d2b63ffffc0e062edf3322328ec31db175d49","modified":1565868238021},{"_id":"themes/next/source/images/avatar.gif","hash":"97ffc58a30670ceec06854a1a235eab81c2957dd","modified":1565868238021},{"_id":"themes/next/source/js/schemes/muse.js","hash":"d6e4d1c937387d0d7891a41305ecdfe5597d6136","modified":1565868238021},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"9eb63cba0327d3d11b6cbfcbe40b88e97a8378a3","modified":1565868238021},{"_id":"themes/next/source/lib/canvas-nest/LICENSE","hash":"b29db4c99aa5b8d574026f68804051ff4b75466e","modified":1565868238025},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest-nomobile.min.js","hash":"956eada198babd00f028e8908767cb158926c3f3","modified":1565868238025},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1565868238025},{"_id":"themes/next/source/lib/fancybox/LICENSE","hash":"8624bcdae55baeef00cd11d5dfcfa60f68710a02","modified":1565868238025},{"_id":"themes/next/source/lib/fancybox/README.md","hash":"a40db80eb6386b085ff810fd3e302f12e76b8df7","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1565868238025},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1565868238029},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1565868238029},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1565868238029},{"_id":"themes/next/source/lib/jquery/index.js","hash":"88523924351bac0b5d560fe0c5781e2556e7693d","modified":1565868238025},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"fe5ff961b86004a306778c7d33a85b32e5e00e48","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1b80562eff14476a50caf84f32d58cf4c935fffb","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"b98c65006e2546fbf3870c16fbbcbc009dbaab15","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ce60fa5adf2d63c5e0ae453d63906d9143f36b05","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"9d71f34fa13a41b8c8cd2fbdf3fdea608385277c","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"ce826aedf42b9eca424a044452f5d193866726a6","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/rainbow.styl","hash":"4741d642f9ed2eec9be23112f7a51645e77e41f3","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/scrollbar.styl","hash":"d7b8bcf2a6031296c84bb4f4ecfb037af01d2d82","modified":1565868238017},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7e51ea64611ab5d678c112b4688d4db4fd2737e2","modified":1565868238021},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"1cb7554a6a333d0e47b38490ec7912f334cb9662","modified":1565868238021},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"d09d13488b67a918d46cc3cca14e5c420b7962dc","modified":1565868238021},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"773f6d791f938ff037783004369092991d7bcd31","modified":1565868238021},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"7ffde343bdf10add1f052f3c4308a15180eb4404","modified":1565868238021},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1565868238021},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"33456264a74d1bba38264d14713544d67d003733","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"b4381d0436e0d957a97231ae093c88df8f41e153","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"96b76bf13173273d57e8560fca1e2b97892f0fb5","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"3964c53d0f050c0ad56f9fba6a4bb2cdb79783f4","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9451567e731765c2597a2918dca020f3ff3bf08f","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"594dcaafaf9f8c7ac9b74f11670f978f829d32c0","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"1b92831aa913e8f4d6d3b2b7080a072e4087a8a2","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"80e74ceeb683fac49c165b6795829fe6209a7b7b","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4c6a3d8f73fa817b64df136677497ff197c8a736","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"3eca3ad647e9904f447c4c801c04ecc7ce09e769","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"a8aacdb768582d60e5b79a41f3c4c191a913f377","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"75737591682a2bafa71db4c03fb79e970ac0e7aa","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"49f519e61c7bc129926f446c57773c3cca2fb65e","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"f1f049b02dd0e76a1ef25a75700be4470cbdcaf0","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"6f427a43550f7b03c503106767fbcce1f18a4f78","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"232aedbd44243b3b80c4503c947060d3269c1afc","modified":1565868238021},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"e43435fb9eaa918f5b8e35c9e110124b8bd13751","modified":1565868238025},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1565868238025},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1565868238025},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1565868238029},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"583140ab9839fb8dd315c6f11842cedec80fedb2","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ca97f0b6990eef947039faede80c56d9c4381ee1","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"6c4990d375b640ee4551e62c48c1cbe4c3d62212","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"d6ff05b483090e5e5ec7557ef2307ba873aeb699","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6d6388df4fb4317989febd36f1c67efd0a0cf27e","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/highlight/copy-code.styl","hash":"ee2074b6636307aa997f7797157010a3223faaeb","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"90f0417086b822d64af78bd2b344311e1417a16e","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"4114f1aa7546bbdf8253e261061c9d9bb0ca6c39","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"78bce0cf6dbb06ff8983311ebaa5fd3115d992d9","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"ba17bf993d3e6a4aed02e740e3a4b913d9e7409d","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"a5a881e093e1214878cb5227adfe276f680fbcc8","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"2894fd8b7a5c2263ef2af42880ee1b51d7ff66d7","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"e3124da5350d6c01f32ccd04134a686baa4fb30a","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f0196d12925c60577f5c6849d004bf05006300c9","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8633ea015175b547f802d9cf6adaf38896384426","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"61ca40856e5cacd48e0fa9728fde4605c7dd4c94","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"d026942bcfe16266b89acc6401eee1265893e594","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"c961d37190d9bec58a36306c7e716c4e72c4582f","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"df3c19fd447da6d4a807683345007a41338f9a04","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0bf899fab331add63f0c8ead31ca3a3db2ad74d9","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b4f073f8bcec49fe83d5a68492e122ee0979198a","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"7594bc038ca85d361c4a5e0ab0a52d4ef0401dfa","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"3f33bb862c2aa993f54987fbb345da067b79b112","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"4bb1346515c0e23c805dea66c48b6dbcf738fc0b","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"c13cbeee926e966a08321f0fa0a48231f3a37113","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"50f650775d4e229df663f0e0a17a454ba26f1ab5","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"d5c8ffed7f2c701052b7a53abaf5ef437374ea72","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"dbd36c8461e857aa1122aa8dda16cd68aaccd6f7","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"c614bb54ba4429dc8cefeaf24e9fcc82581b48b0","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"58ec00eebe68d0eebd2eea435c710063877447df","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"c85df3ecc0b37095cac14114c308e5829c66b5a3","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"d7501ae01fc45fa15b00d1bc5233b9fffa20a3c9","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"ca7cd57bc346a3fda8097b2b49e6d943600912d2","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/pdf.styl","hash":"da8d34729fb6eb0fcb8ee81e67d2be3c02bc1bc4","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4b62818333d2463fe416fb3156ced12e7d60aafa","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"cbc0be5a3285b469858ec9ead48e2ea90bd47ae1","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2dd6374ee46e42b36ff172dda19cce765d2c7a4e","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"965a4896925f4c2bfdb492e1923288c91b854f2d","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"583ad80fc929d1f9db76520480a0b7add679d7af","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-button.styl","hash":"8963be62d5a767d8e9b2ee6efbc91b93cf89b396","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"987f1cdd57dd9f6f81c133c280c20d7168c37d7f","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"aa87f828baa7e552b908a5386c279f39cbfe91c9","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"eaafd5f9cdb0798347479945366b01df3dbb1c1d","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"452aab4718c2396f17438557fb897aaa11f834e1","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"38314eec8f4a2d1667e1061d7a3deb1c16f17da9","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"967fb3a3c6c851b34ec5df2d945dc266ed63d146","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fc58498d4f5081fcf6218e9e18c5bf2328275bef","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"1156b11ac74d2d21b1b5047767b2a9edafc9182d","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"9fac89c8146eb2675721a26f528d7d0f8be7debe","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"ef66c0a08e4243a25e41408d70ca66682b8dcea1","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"dfdbaf50e4217d538c218fe979fef9539244cab4","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"157d88ed4558d224f9703e0a7fe607ab0e9ae195","modified":1565868238017},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9738e754be24c1c9f2e60bc052f6f7b1bae0322f","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/_sidebar.styl","hash":"487dbb5b389620e7be2ce666531a7baa249d50a0","modified":1565868238021},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1565868238021},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"27f034e5db8c32e268e2959b9a7c1258d36e4510","modified":1565868238025},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1565868238025},{"_id":"source/trending/indexa.md","hash":"ff1bc39e9df80374f918bf254de6c09e88218fea","modified":1565868238013},{"_id":"source/_data/.styles.styl.swp","hash":"20f6a94ac3ce5fa52b9e92c0c525819ab86a5a34","modified":1566213144060},{"_id":"themes/next/._config.yml.swp","hash":"a82e52a2293d7a597a01b3656e0a0948d89f16dc","modified":1566410630330}],"Category":[{"name":"Crawler","_id":"cjzcljg230004jy749qm6w099"},{"name":"Photography","_id":"cjzcljg2i000gjy74m7btdjqm"},{"name":"Web","_id":"cjzcljg2j000kjy74atzbgdvw"}],"Data":[{"_id":"styles","data":"/* build time:Tue Aug 20 2019 03:29:45 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}.post-copyright a{color:#0366d6;border-bottom:none}.post-copyright a:hover{color:#01438f}.posts-expand .post-meta time{cursor:initial}.post-body .tabs ul.nav-tabs li.tab.active{border-top:3px solid #ddd;border-right:1px solid #ddd;border-bottom:1px solid transparent;border-left:1px solid #ddd}\n/* rebuild by neat */"}],"Page":[{"title":"About","comments":0,"no_toc":true,"_content":"\n<blockquote class=\"blockquote-center\"><font size=100 color='gray'><i>Stay Hungry Stay Foolish</i></font></blockquote>\n\nHi, this is Wenkai Shi. I was born in Liyang, Jiangsu, and now live in Suzhou. It was lucky for me that I  grew up healthy and sound with the cultivation of my parents and teachers. In 2011, I entered [Suzhou High School SIP](http://shssip.szedu.com/2016en_dtlpage.asp?c=231) which is one of the top high schools in Suzhou. In 2012, I got an opportunity to study at a Japanese high school with a full scholarship. So I decided to come to Japan and entered [Gyosei International School](http://www.gis.ac.jp/). After my graduation, I was addmitted to [Ibaraki University](http://www.ibaraki.ac.jp/) in 2015. I chose Intelligent System as my major. Then I became Interested in DeepLearnig and started to research Textual Analysis of Stock Market Behavior Using Financial News Headlines as a member of [Suzuki Lab](http://tsuzuki.ise.ibaraki.ac.jp/TS_lab/index-e.html). I have a wide range of interests, such as building WebCrawlers, listening to music, watching movies and photographing, etc. I would like to be friends with everyone. Please feel free to contact me.\n\nHere are my projects👉[Github](https://github.com/S-W-K)  \n\n#### Research\n\n- DeepLearning \n- Natural Language Processing\n- News Text Analysis and Stock Market Analysis\n\n---\n\nHi，我是史文恺，一只现役大学生, 坐标岛国。喜欢码代码，写爬虫，爱好摄影。修炼各种技术，绝招尚在开发中。\n\n我的项目👉[Github](https://github.com/S-W-K)  \n\n#### 研究\n\n- 深度学习\n- 自然语言处理\n- 新闻的文本处理与股市分析\n\n---\n\nこんにちは，シ ブンガイです．現役M1，趣味はプログラミング，音楽，オンラインゲーム，撮影...\n\n開発したプロジェクトはこちら👉[Github](https://github.com/S-W-K)  \n\n#### 研究\n\n- ディープラーニング \n- 自然言語処理\n- ニューステキスト分析と株式市場分析\n","source":"about/index.md","raw":"---\ntitle: About\ncomments: false\nno_toc: true\n---\n\n<blockquote class=\"blockquote-center\"><font size=100 color='gray'><i>Stay Hungry Stay Foolish</i></font></blockquote>\n\nHi, this is Wenkai Shi. I was born in Liyang, Jiangsu, and now live in Suzhou. It was lucky for me that I  grew up healthy and sound with the cultivation of my parents and teachers. In 2011, I entered [Suzhou High School SIP](http://shssip.szedu.com/2016en_dtlpage.asp?c=231) which is one of the top high schools in Suzhou. In 2012, I got an opportunity to study at a Japanese high school with a full scholarship. So I decided to come to Japan and entered [Gyosei International School](http://www.gis.ac.jp/). After my graduation, I was addmitted to [Ibaraki University](http://www.ibaraki.ac.jp/) in 2015. I chose Intelligent System as my major. Then I became Interested in DeepLearnig and started to research Textual Analysis of Stock Market Behavior Using Financial News Headlines as a member of [Suzuki Lab](http://tsuzuki.ise.ibaraki.ac.jp/TS_lab/index-e.html). I have a wide range of interests, such as building WebCrawlers, listening to music, watching movies and photographing, etc. I would like to be friends with everyone. Please feel free to contact me.\n\nHere are my projects👉[Github](https://github.com/S-W-K)  \n\n#### Research\n\n- DeepLearning \n- Natural Language Processing\n- News Text Analysis and Stock Market Analysis\n\n---\n\nHi，我是史文恺，一只现役大学生, 坐标岛国。喜欢码代码，写爬虫，爱好摄影。修炼各种技术，绝招尚在开发中。\n\n我的项目👉[Github](https://github.com/S-W-K)  \n\n#### 研究\n\n- 深度学习\n- 自然语言处理\n- 新闻的文本处理与股市分析\n\n---\n\nこんにちは，シ ブンガイです．現役M1，趣味はプログラミング，音楽，オンラインゲーム，撮影...\n\n開発したプロジェクトはこちら👉[Github](https://github.com/S-W-K)  \n\n#### 研究\n\n- ディープラーニング \n- 自然言語処理\n- ニューステキスト分析と株式市場分析\n","date":"2019-08-15T11:23:58.013Z","updated":"2019-08-15T11:23:58.013Z","path":"about/index.html","layout":"page","_id":"cjzcljg1x0001jy74asuk6brq","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><blockquote class=\"blockquote-center\"><font size=\"100\" color=\"gray\"><i>Stay Hungry Stay Foolish</i></font></blockquote><p>Hi, this is Wenkai Shi. I was born in Liyang, Jiangsu, and now live in Suzhou. It was lucky for me that I grew up healthy and sound with the cultivation of my parents and teachers. In 2011, I entered <a href=\"http://shssip.szedu.com/2016en_dtlpage.asp?c=231\" target=\"_blank\" rel=\"noopener\">Suzhou High School SIP</a> which is one of the top high schools in Suzhou. In 2012, I got an opportunity to study at a Japanese high school with a full scholarship. So I decided to come to Japan and entered <a href=\"http://www.gis.ac.jp/\" target=\"_blank\" rel=\"noopener\">Gyosei International School</a>. After my graduation, I was addmitted to <a href=\"http://www.ibaraki.ac.jp/\" target=\"_blank\" rel=\"noopener\">Ibaraki University</a> in 2015. I chose Intelligent System as my major. Then I became Interested in DeepLearnig and started to research Textual Analysis of Stock Market Behavior Using Financial News Headlines as a member of <a href=\"http://tsuzuki.ise.ibaraki.ac.jp/TS_lab/index-e.html\" target=\"_blank\" rel=\"noopener\">Suzuki Lab</a>. I have a wide range of interests, such as building WebCrawlers, listening to music, watching movies and photographing, etc. I would like to be friends with everyone. Please feel free to contact me.</p><p>Here are my projects👉<a href=\"https://github.com/S-W-K\" target=\"_blank\" rel=\"noopener\">Github</a></p><h4 id=\"Research\"><a href=\"#Research\" class=\"headerlink\" title=\"Research\"></a>Research</h4><ul><li>DeepLearning</li><li>Natural Language Processing</li><li>News Text Analysis and Stock Market Analysis</li></ul><hr><p>Hi，我是史文恺，一只现役大学生, 坐标岛国。喜欢码代码，写爬虫，爱好摄影。修炼各种技术，绝招尚在开发中。</p><p>我的项目👉<a href=\"https://github.com/S-W-K\" target=\"_blank\" rel=\"noopener\">Github</a></p><h4 id=\"研究\"><a href=\"#研究\" class=\"headerlink\" title=\"研究\"></a>研究</h4><ul><li>深度学习</li><li>自然语言处理</li><li>新闻的文本处理与股市分析</li></ul><hr><p>こんにちは，シ ブンガイです．現役M1，趣味はプログラミング，音楽，オンラインゲーム，撮影…</p><p>開発したプロジェクトはこちら👉<a href=\"https://github.com/S-W-K\" target=\"_blank\" rel=\"noopener\">Github</a></p><h4 id=\"研究-1\"><a href=\"#研究-1\" class=\"headerlink\" title=\"研究\"></a>研究</h4><ul><li>ディープラーニング</li><li>自然言語処理</li><li>ニューステキスト分析と株式市場分析</li></ul><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"","more":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><blockquote class=\"blockquote-center\"><font size=\"100\" color=\"gray\"><i>Stay Hungry Stay Foolish</i></font></blockquote><p>Hi, this is Wenkai Shi. I was born in Liyang, Jiangsu, and now live in Suzhou. It was lucky for me that I grew up healthy and sound with the cultivation of my parents and teachers. In 2011, I entered <a href=\"http://shssip.szedu.com/2016en_dtlpage.asp?c=231\" target=\"_blank\" rel=\"noopener\">Suzhou High School SIP</a> which is one of the top high schools in Suzhou. In 2012, I got an opportunity to study at a Japanese high school with a full scholarship. So I decided to come to Japan and entered <a href=\"http://www.gis.ac.jp/\" target=\"_blank\" rel=\"noopener\">Gyosei International School</a>. After my graduation, I was addmitted to <a href=\"http://www.ibaraki.ac.jp/\" target=\"_blank\" rel=\"noopener\">Ibaraki University</a> in 2015. I chose Intelligent System as my major. Then I became Interested in DeepLearnig and started to research Textual Analysis of Stock Market Behavior Using Financial News Headlines as a member of <a href=\"http://tsuzuki.ise.ibaraki.ac.jp/TS_lab/index-e.html\" target=\"_blank\" rel=\"noopener\">Suzuki Lab</a>. I have a wide range of interests, such as building WebCrawlers, listening to music, watching movies and photographing, etc. I would like to be friends with everyone. Please feel free to contact me.</p><p>Here are my projects👉<a href=\"https://github.com/S-W-K\" target=\"_blank\" rel=\"noopener\">Github</a></p><h4 id=\"Research\"><a href=\"#Research\" class=\"headerlink\" title=\"Research\"></a>Research</h4><ul><li>DeepLearning</li><li>Natural Language Processing</li><li>News Text Analysis and Stock Market Analysis</li></ul><hr><p>Hi，我是史文恺，一只现役大学生, 坐标岛国。喜欢码代码，写爬虫，爱好摄影。修炼各种技术，绝招尚在开发中。</p><p>我的项目👉<a href=\"https://github.com/S-W-K\" target=\"_blank\" rel=\"noopener\">Github</a></p><h4 id=\"研究\"><a href=\"#研究\" class=\"headerlink\" title=\"研究\"></a>研究</h4><ul><li>深度学习</li><li>自然语言处理</li><li>新闻的文本处理与股市分析</li></ul><hr><p>こんにちは，シ ブンガイです．現役M1，趣味はプログラミング，音楽，オンラインゲーム，撮影…</p><p>開発したプロジェクトはこちら👉<a href=\"https://github.com/S-W-K\" target=\"_blank\" rel=\"noopener\">Github</a></p><h4 id=\"研究-1\"><a href=\"#研究-1\" class=\"headerlink\" title=\"研究\"></a>研究</h4><ul><li>ディープラーニング</li><li>自然言語処理</li><li>ニューステキスト分析と株式市場分析</li></ul><!-- rebuild by neat -->"},{"title":"Categories","type":"categories","comments":0,"date":"2019-07-27T08:11:36.000Z","_content":"","source":"categories/index.md","raw":"---\ntitle: Categories\ntype: \"categories\"\ncomments: false\ndate: 2019-07-27 17:11:36\n---\n","updated":"2019-08-15T11:23:58.013Z","path":"categories/index.html","layout":"page","_id":"cjzcljg210003jy741xxwe4wd","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"","more":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><!-- rebuild by neat -->"},{"title":"Message Board","no_toc":true,"_content":"\n**Please leave a message if you have any questions…**\n\n{% meting \"38592976\" \"netease\" \"song\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n","source":"messageboard/index.md","raw":"---\ntitle: Message Board\nno_toc: true\n---\n\n**Please leave a message if you have any questions…**\n\n{% meting \"38592976\" \"netease\" \"song\" \"autoplay\" \"mutex:false\" \"listmaxheight:340px\" \"preload:none\" \"theme:#ad7a86\"%}\n\n","date":"2019-08-15T11:23:58.013Z","updated":"2019-08-15T11:23:58.013Z","path":"messageboard/index.html","comments":1,"layout":"page","_id":"cjzcljg260007jy74sszg3d1z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p><strong>Please leave a message if you have any questions…</strong></p><div id=\"aplayer-nLALMGzr\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"38592976\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"","more":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p><strong>Please leave a message if you have any questions…</strong></p><div id=\"aplayer-nLALMGzr\" class=\"aplayer aplayer-tag-marker meting-tag-marker\" data-id=\"38592976\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"true\" data-mutex=\"false\" data-listmaxheight=\"340px\" data-preload=\"none\" data-theme=\"#ad7a86\"></div><!-- rebuild by neat -->"},{"title":"Tags","type":"tags","comments":0,"date":"2019-07-27T08:09:58.000Z","_content":"","source":"tags/index.md","raw":"---\ntitle: Tags\ntype: \"tags\"\ncomments: false\ndate: 2019-07-27 17:09:58\n---\n","updated":"2019-08-15T11:23:58.013Z","path":"tags/index.html","layout":"page","_id":"cjzcljg280009jy74xgra30hb","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"","more":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><!-- rebuild by neat -->"},{"title":"Trending","comments":0,"no_toc":true,"_content":"\n> Scraped from [GitHub](https://github.com/trending), [Medium](https://medium.com/topic/popular)\nauto-deployed with [Travis Ci](https://travis-ci.org/)\n\n{% tabs TAB %}\n<!-- tab GitHub -->\n{% subtabs GitHub Tab%}\n<!-- tab Daily -->\n1. [**yangshun / tech-interview-handbook**](https://github.com/yangshun/tech-interview-handbook)\n💯 Materials to help you rock your next coding interview\n2. [**quii / learn-go-with-tests**](https://github.com/quii/learn-go-with-tests)\nLearn Go with test-driven development\n3. [**xkcoding / spring-boot-demo**](https://github.com/xkcoding/spring-boot-demo)\nspring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…\n4. [**b3log / baidu-netdisk-downloaderx**](https://github.com/b3log/baidu-netdisk-downloaderx)\n⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。\n5. [**ccxt / ccxt**](https://github.com/ccxt/ccxt)\nA JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges\n6. [**mixandjam / MGR-BladeMode**](https://github.com/mixandjam/MGR-BladeMode)\nRecreating the Blade Mode mechanic from Metal Gear Rising\n7. [**nodegui / react-nodegui**](https://github.com/nodegui/react-nodegui)\nBuild performant, native and cross-platform desktop applications with native React + powerful CSS like styling.🚀\n8. [**google / live-transcribe-speech-engine**](https://github.com/google/live-transcribe-speech-engine)\nLive Transcribe is an Android application that provides real-time captioning for people who are deaf or hard of hearing. This repository contains the Android client libraries for communicating with Google's Cloud Speech API that are used in Live Transcribe.\n9. [**Pierian-Data / Complete-Python-3-Bootcamp**](https://github.com/Pierian-Data/Complete-Python-3-Bootcamp)\nCourse Files for Complete Python 3 Bootcamp Course on Udemy\n10. [**nondanee / UnblockNeteaseMusic**](https://github.com/nondanee/UnblockNeteaseMusic)\nRevive unavailable songs for Netease Cloud Music\n11. [**firmai / machine-learning-asset-management**](https://github.com/firmai/machine-learning-asset-management)\nMachine Learning in Asset Management\n12. [**Cocos-BCX / ERC-1808**](https://github.com/Cocos-BCX/ERC-1808)\nNo repo_description\n13. [**P1xt / p1xt-guides**](https://github.com/P1xt/p1xt-guides)\nProgramming curricula\n14. [**async-rs / async-std**](https://github.com/async-rs/async-std)\nAsync version of the Rust standard library\n15. [**wifiphisher / wifiphisher**](https://github.com/wifiphisher/wifiphisher)\nThe Rogue Access Point Framework\n16. [**cmackenzie1 / new-grads-2020**](https://github.com/cmackenzie1/new-grads-2020)\nA collection of new grad roles for 2020\n17. [**lohanidamodar / flutter_ui_challenges**](https://github.com/lohanidamodar/flutter_ui_challenges)\nTrying to replicate various app UIs in flutter\n18. [**kmario23 / deep-learning-drizzle**](https://github.com/kmario23/deep-learning-drizzle)\nDrench yourself in Deep Learning, Reinforcement Learning, Machine Learning, Computer Vision, and NLP by learning from these exciting lectures!!\n19. [**haizlin / fe-interview**](https://github.com/haizlin/fe-interview)\n前端面试每日 3+1，以面试题来驱动学习，提倡每日学习与思考，每天进步一点！每天早上5点纯手工发布面试题（死磕自己，愉悦大家）\n20. [**alexellis / k3sup**](https://github.com/alexellis/k3sup)\nk3sup: from Zero to KUBECONFIG in < 1 min\n21. [**syhyz1990 / baiduyun**](https://github.com/syhyz1990/baiduyun)\n🖖油猴脚本 一个脚本搞定百度网盘下载\n22. [**nodegui / nodegui**](https://github.com/nodegui/nodegui)\nA library for building cross-platform native desktop applications with JavaScript and CSS like styling.\n23. [**b3log / 30-seconds-zh_CN**](https://github.com/b3log/30-seconds-zh_CN)\n📙 前端知识精选集，包含 HTML、CSS、JavaScript、React、Node、安全等方面，每天仅需 30 秒。\n24. [**getify / You-Dont-Know-JS**](https://github.com/getify/You-Dont-Know-JS)\nA book series on JavaScript. @YDKJS on twitter.\n25. [**danielmiessler / SecLists**](https://github.com/danielmiessler/SecLists)\nSecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.\n<!-- endtab -->\n<!-- tab Weekly -->\n1. [**Awesome-HarmonyOS / HarmonyOS**](https://github.com/Awesome-HarmonyOS/HarmonyOS)\nA curated list of awesome things related to HarmonyOS. 华为鸿蒙操作系统。\n2. [**xkcoding / spring-boot-demo**](https://github.com/xkcoding/spring-boot-demo)\nspring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…\n3. [**ian13456 / mc.js**](https://github.com/ian13456/mc.js)\nOpen source Minecraft clone built with ThreeJS, ReactJS, GraphQL, and NodeJS.\n4. [**google / iosched**](https://github.com/google/iosched)\nThe Google I/O 2019 Android App\n5. [**quii / learn-go-with-tests**](https://github.com/quii/learn-go-with-tests)\nLearn Go with test-driven development\n6. [**LiteOS / LiteOS**](https://github.com/LiteOS/LiteOS)\ncode and manual\n7. [**hope-for / hope-boot**](https://github.com/hope-for/hope-boot)\n🌱🚀一款现代化的脚手架项目。企业开发？接外包？赚外快？还是学习？这都能满足你，居家必备，值得拥有🍻整合Springboot2，单点登陆+tk.mybatis+shiro+redis+thymeleaf+maven+swagger前后端分离接口管理+代码生成+定时任务+数据库版本管理flyway+hutool工具包，等实用技术。\n8. [**ctripcorp / C-OCR**](https://github.com/ctripcorp/C-OCR)\nC-OCR是携程自研的OCR项目，主要包括身份证、护照、火车票、签证等旅游相关证件、材料的识别。 项目包含4个部分，拒识、检测、识别、后处理。\n9. [**2227324689 / gpmall**](https://github.com/2227324689/gpmall)\n【咕泡学院实战项目】-基于SpringBoot+Dubbo构建的电商平台-微服务架构、商城、电商、微服务、高并发、kafka\n10. [**yangshun / tech-interview-handbook**](https://github.com/yangshun/tech-interview-handbook)\n💯 Materials to help you rock your next coding interview\n11. [**abhat222 / Data-Science--Cheat-Sheet**](https://github.com/abhat222/Data-Science--Cheat-Sheet)\nCheat Sheets\n12. [**tootsuite / mastodon**](https://github.com/tootsuite/mastodon)\nYour self-hosted, globally interconnected microblogging community\n13. [**vmware / octant**](https://github.com/vmware/octant)\nA web-based, highly extensible platform for developers to better understand the complexity of Kubernetes clusters.\n14. [**projectstorm / react-diagrams**](https://github.com/projectstorm/react-diagrams)\na super simple, no-nonsense diagramming library written in react that just works\n15. [**hollischuang / toBeTopJavaer**](https://github.com/hollischuang/toBeTopJavaer)\nTo Be Top Javaer - Java工程师成神之路\n16. [**qiurunze123 / miaosha**](https://github.com/qiurunze123/miaosha)\n⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓\n17. [**shengqiangzhang / examples-of-web-crawlers**](https://github.com/shengqiangzhang/examples-of-web-crawlers)\n一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )\n18. [**jantic / DeOldify**](https://github.com/jantic/DeOldify)\nA Deep Learning based project for colorizing and restoring old images (and video!)\n19. [**instagrambot / instabot**](https://github.com/instagrambot/instabot)\n🐙 Free Instagram scripts, bots and Python API wrapper. Get free instagram followers with our auto like, auto follow and other scripts!\n20. [**parcel-bundler / parcel**](https://github.com/parcel-bundler/parcel)\n📦🚀 Blazing fast, zero configuration web application bundler\n21. [**microsoft / calculator**](https://github.com/microsoft/calculator)\nWindows Calculator: A simple yet powerful calculator that ships with Windows\n22. [**apache / skywalking**](https://github.com/apache/skywalking)\nAPM, Application Performance Monitoring System\n23. [**RustPython / RustPython**](https://github.com/RustPython/RustPython)\nA Python Interpreter written in Rust\n24. [**dylanaraps / pure-bash-bible**](https://github.com/dylanaraps/pure-bash-bible)\n📖 A collection of pure bash alternatives to external processes.\n25. [**nvbn / thefuck**](https://github.com/nvbn/thefuck)\nMagnificent app which corrects your previous console command.\n<!-- endtab -->\n<!-- tab Monthly -->\n1. [**xkcoding / spring-boot-demo**](https://github.com/xkcoding/spring-boot-demo)\nspring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…\n2. [**chinese-poetry / chinese-poetry**](https://github.com/chinese-poetry/chinese-poetry)\n最全中华古诗词数据库, 唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词。\n3. [**xiaolai / regular-investing-in-box**](https://github.com/xiaolai/regular-investing-in-box)\n定投改变命运 —— 让时间陪你慢慢变富\n4. [**jwasham / coding-interview-university**](https://github.com/jwasham/coding-interview-university)\nA complete computer science study plan to become a software engineer.\n5. [**qiurunze123 / miaosha**](https://github.com/qiurunze123/miaosha)\n⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓\n6. [**amejiarosario / dsa.js-data-structures-algorithms-javascript**](https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript)\nData Structures and Algorithms explained and implemented in JavaScript\n7. [**0voice / interview_internal_reference**](https://github.com/0voice/interview_internal_reference)\n2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。\n8. [**haotian-wang / google-access-helper**](https://github.com/haotian-wang/google-access-helper)\n谷歌访问助手破解版\n9. [**cube-js / cube.js**](https://github.com/cube-js/cube.js)\n📊 Cube.js - Open Source Analytics Framework\n10. [**cnlh / nps**](https://github.com/cnlh/nps)\n一款轻量级、功能强大的内网穿透代理服务器。支持tcp、udp流量转发，支持内网http代理、内网socks5代理，同时支持snappy压缩、站点保护、加密传输、多路复用、header修改等。支持web图形化管理，集成多用户模式。\n11. [**hollischuang / toBeTopJavaer**](https://github.com/hollischuang/toBeTopJavaer)\nTo Be Top Javaer - Java工程师成神之路\n12. [**Binaryify / NeteaseCloudMusicApi**](https://github.com/Binaryify/NeteaseCloudMusicApi)\n网易云音乐 Node.js API service\n13. [**alibaba / spring-cloud-alibaba**](https://github.com/alibaba/spring-cloud-alibaba)\nSpring Cloud Alibaba provides a one-stop solution for application development for the distributed solutions of Alibaba middleware.\n14. [**ardanlabs / gotraining**](https://github.com/ardanlabs/gotraining)\nGo Training Class Material :\n15. [**taosdata / TDengine**](https://github.com/taosdata/TDengine)\nAn open-source big data platform designed and optimized for the Internet of Things (IoT).\n16. [**LiteOS / LiteOS**](https://github.com/LiteOS/LiteOS)\ncode and manual\n17. [**quii / learn-go-with-tests**](https://github.com/quii/learn-go-with-tests)\nLearn Go with test-driven development\n18. [**PaddlePaddle / ERNIE**](https://github.com/PaddlePaddle/ERNIE)\nAn Implementation of ERNIE For Language Understanding (including Pre-training models and Fine-tuning tools)\n19. [**aosabook / 500lines**](https://github.com/aosabook/500lines)\n500 Lines or Less\n20. [**b3log / baidu-netdisk-downloaderx**](https://github.com/b3log/baidu-netdisk-downloaderx)\n⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。\n21. [**google-research / google-research**](https://github.com/google-research/google-research)\nGoogle AI Research\n22. [**shengqiangzhang / examples-of-web-crawlers**](https://github.com/shengqiangzhang/examples-of-web-crawlers)\n一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )\n23. [**HelloZeroNet / ZeroNet**](https://github.com/HelloZeroNet/ZeroNet)\nZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network\n24. [**abhat222 / Data-Science--Cheat-Sheet**](https://github.com/abhat222/Data-Science--Cheat-Sheet)\nCheat Sheets\n25. [**vuetifyjs / vuetify**](https://github.com/vuetifyjs/vuetify)\n🐉 Material Component Framework for Vue.js 2\n<!-- endtab -->\n{% endsubtabs %}\n<!-- endtab --><!-- tab Medium -->\n1. [**Desperate Spammers Are Targeting Calendars With ‘Meeting’ Invites**](https://medium.comhttps://onezero.medium.com/desperate-spammers-are-targeting-calendars-with-meeting-invites-b4e24f8e8a?source=topic_page---------------------------20)\nFaced with powerful automated filters on Gmail, criminals have found a new, annoying way to catch your attention\n2. [**An FBI Behaviour Expert Explains How to Quickly Build Trust With Anyone**](/personal-growth/an-fbi-behaviour-expert-explains-how-to-quickly-build-trust-with-anyone-94a05be01cea?source=topic_page---------0------------------1)\nIt’s not always about you!\n3. [**10 best Chrome extensions for designers**](https://uxdesign.cc/10-best-chrome-extensions-for-designers-a76540b93836?source=topic_page---------1------------------1)\nAfter months of testing, here are the 10 best Chrome Extensions for Product Designers.\n4. [**5 Ways to Reframe Your Identity and Create Success**](/better-marketing/5-ways-to-reframe-your-identity-and-create-success-7d4634321c4d?source=topic_page---------2------------------1)\nIf you look at your present and future selves as two different people, then your likelihood of making better decisions here and now will…\n5. [**Embrace the Suck: How to Develop the Skills You Need to Succeed (Even If You’re Not Very Good)**](/publishous/embrace-the-suck-how-to-develop-the-skills-you-need-to-succeed-even-if-youre-not-very-good-b4506f669820?source=topic_page---------4------------------1)\nHere’s the sad truth that applies to 95% of you.\n6. [**A Legacy of Abuse**](https://humanparts.medium.com/a-legacy-of-abuse-57dab89dde83?source=topic_page---------5------------------1)\nReporting my brother to Child Protective Services was the first step toward ending a decades-long cycle\n7. [**This is Why We Can’t Have Nice Things**](https://psiloveyou.xyz/this-is-why-we-cant-have-nice-things-812b66617233?source=topic_page---------6------------------1)\nThe greatest love story I’d ever written, until it wasn’t.\n8. [**Could Climate Change Really End the World?**](https://onezero.medium.com/could-climate-change-really-end-the-world-d0e7eb7f5b09?source=topic_page---------7------------------1)\nSpecies are going extinct and the climate is warming rapidly — yet at least materially, humans are doing better than ever. Welcome to the…\n9. [**What Nobody Told Me About Having Sex for the First Time**](https://humanparts.medium.com/what-nobody-told-me-about-having-sex-for-the-first-time-3972942a2fb2?source=topic_page---------8------------------1)\nI thought my wedding night would be amazing, but it brought more pain than pleasure\n10. [**5 Defining Traits Of The Truly Cool**](https://psiloveyou.xyz/5-defining-traits-of-the-truly-cool-458f332a3bd7?source=topic_page---------9------------------1)\nThey start by embracing small talk\n<!-- endtab -->\n{% endtabs %}\n","source":"trending/index.md","raw":"---\ntitle: Trending\ncomments: false\nno_toc: true\n---\n\n> Scraped from [GitHub](https://github.com/trending), [Medium](https://medium.com/topic/popular)\nauto-deployed with [Travis Ci](https://travis-ci.org/)\n\n{% tabs TAB %}\n<!-- tab GitHub -->\n{% subtabs GitHub Tab%}\n<!-- tab Daily -->\n1. [**yangshun / tech-interview-handbook**](https://github.com/yangshun/tech-interview-handbook)\n💯 Materials to help you rock your next coding interview\n2. [**quii / learn-go-with-tests**](https://github.com/quii/learn-go-with-tests)\nLearn Go with test-driven development\n3. [**xkcoding / spring-boot-demo**](https://github.com/xkcoding/spring-boot-demo)\nspring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…\n4. [**b3log / baidu-netdisk-downloaderx**](https://github.com/b3log/baidu-netdisk-downloaderx)\n⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。\n5. [**ccxt / ccxt**](https://github.com/ccxt/ccxt)\nA JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges\n6. [**mixandjam / MGR-BladeMode**](https://github.com/mixandjam/MGR-BladeMode)\nRecreating the Blade Mode mechanic from Metal Gear Rising\n7. [**nodegui / react-nodegui**](https://github.com/nodegui/react-nodegui)\nBuild performant, native and cross-platform desktop applications with native React + powerful CSS like styling.🚀\n8. [**google / live-transcribe-speech-engine**](https://github.com/google/live-transcribe-speech-engine)\nLive Transcribe is an Android application that provides real-time captioning for people who are deaf or hard of hearing. This repository contains the Android client libraries for communicating with Google's Cloud Speech API that are used in Live Transcribe.\n9. [**Pierian-Data / Complete-Python-3-Bootcamp**](https://github.com/Pierian-Data/Complete-Python-3-Bootcamp)\nCourse Files for Complete Python 3 Bootcamp Course on Udemy\n10. [**nondanee / UnblockNeteaseMusic**](https://github.com/nondanee/UnblockNeteaseMusic)\nRevive unavailable songs for Netease Cloud Music\n11. [**firmai / machine-learning-asset-management**](https://github.com/firmai/machine-learning-asset-management)\nMachine Learning in Asset Management\n12. [**Cocos-BCX / ERC-1808**](https://github.com/Cocos-BCX/ERC-1808)\nNo repo_description\n13. [**P1xt / p1xt-guides**](https://github.com/P1xt/p1xt-guides)\nProgramming curricula\n14. [**async-rs / async-std**](https://github.com/async-rs/async-std)\nAsync version of the Rust standard library\n15. [**wifiphisher / wifiphisher**](https://github.com/wifiphisher/wifiphisher)\nThe Rogue Access Point Framework\n16. [**cmackenzie1 / new-grads-2020**](https://github.com/cmackenzie1/new-grads-2020)\nA collection of new grad roles for 2020\n17. [**lohanidamodar / flutter_ui_challenges**](https://github.com/lohanidamodar/flutter_ui_challenges)\nTrying to replicate various app UIs in flutter\n18. [**kmario23 / deep-learning-drizzle**](https://github.com/kmario23/deep-learning-drizzle)\nDrench yourself in Deep Learning, Reinforcement Learning, Machine Learning, Computer Vision, and NLP by learning from these exciting lectures!!\n19. [**haizlin / fe-interview**](https://github.com/haizlin/fe-interview)\n前端面试每日 3+1，以面试题来驱动学习，提倡每日学习与思考，每天进步一点！每天早上5点纯手工发布面试题（死磕自己，愉悦大家）\n20. [**alexellis / k3sup**](https://github.com/alexellis/k3sup)\nk3sup: from Zero to KUBECONFIG in < 1 min\n21. [**syhyz1990 / baiduyun**](https://github.com/syhyz1990/baiduyun)\n🖖油猴脚本 一个脚本搞定百度网盘下载\n22. [**nodegui / nodegui**](https://github.com/nodegui/nodegui)\nA library for building cross-platform native desktop applications with JavaScript and CSS like styling.\n23. [**b3log / 30-seconds-zh_CN**](https://github.com/b3log/30-seconds-zh_CN)\n📙 前端知识精选集，包含 HTML、CSS、JavaScript、React、Node、安全等方面，每天仅需 30 秒。\n24. [**getify / You-Dont-Know-JS**](https://github.com/getify/You-Dont-Know-JS)\nA book series on JavaScript. @YDKJS on twitter.\n25. [**danielmiessler / SecLists**](https://github.com/danielmiessler/SecLists)\nSecLists is the security tester's companion. It's a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.\n<!-- endtab -->\n<!-- tab Weekly -->\n1. [**Awesome-HarmonyOS / HarmonyOS**](https://github.com/Awesome-HarmonyOS/HarmonyOS)\nA curated list of awesome things related to HarmonyOS. 华为鸿蒙操作系统。\n2. [**xkcoding / spring-boot-demo**](https://github.com/xkcoding/spring-boot-demo)\nspring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…\n3. [**ian13456 / mc.js**](https://github.com/ian13456/mc.js)\nOpen source Minecraft clone built with ThreeJS, ReactJS, GraphQL, and NodeJS.\n4. [**google / iosched**](https://github.com/google/iosched)\nThe Google I/O 2019 Android App\n5. [**quii / learn-go-with-tests**](https://github.com/quii/learn-go-with-tests)\nLearn Go with test-driven development\n6. [**LiteOS / LiteOS**](https://github.com/LiteOS/LiteOS)\ncode and manual\n7. [**hope-for / hope-boot**](https://github.com/hope-for/hope-boot)\n🌱🚀一款现代化的脚手架项目。企业开发？接外包？赚外快？还是学习？这都能满足你，居家必备，值得拥有🍻整合Springboot2，单点登陆+tk.mybatis+shiro+redis+thymeleaf+maven+swagger前后端分离接口管理+代码生成+定时任务+数据库版本管理flyway+hutool工具包，等实用技术。\n8. [**ctripcorp / C-OCR**](https://github.com/ctripcorp/C-OCR)\nC-OCR是携程自研的OCR项目，主要包括身份证、护照、火车票、签证等旅游相关证件、材料的识别。 项目包含4个部分，拒识、检测、识别、后处理。\n9. [**2227324689 / gpmall**](https://github.com/2227324689/gpmall)\n【咕泡学院实战项目】-基于SpringBoot+Dubbo构建的电商平台-微服务架构、商城、电商、微服务、高并发、kafka\n10. [**yangshun / tech-interview-handbook**](https://github.com/yangshun/tech-interview-handbook)\n💯 Materials to help you rock your next coding interview\n11. [**abhat222 / Data-Science--Cheat-Sheet**](https://github.com/abhat222/Data-Science--Cheat-Sheet)\nCheat Sheets\n12. [**tootsuite / mastodon**](https://github.com/tootsuite/mastodon)\nYour self-hosted, globally interconnected microblogging community\n13. [**vmware / octant**](https://github.com/vmware/octant)\nA web-based, highly extensible platform for developers to better understand the complexity of Kubernetes clusters.\n14. [**projectstorm / react-diagrams**](https://github.com/projectstorm/react-diagrams)\na super simple, no-nonsense diagramming library written in react that just works\n15. [**hollischuang / toBeTopJavaer**](https://github.com/hollischuang/toBeTopJavaer)\nTo Be Top Javaer - Java工程师成神之路\n16. [**qiurunze123 / miaosha**](https://github.com/qiurunze123/miaosha)\n⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓\n17. [**shengqiangzhang / examples-of-web-crawlers**](https://github.com/shengqiangzhang/examples-of-web-crawlers)\n一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )\n18. [**jantic / DeOldify**](https://github.com/jantic/DeOldify)\nA Deep Learning based project for colorizing and restoring old images (and video!)\n19. [**instagrambot / instabot**](https://github.com/instagrambot/instabot)\n🐙 Free Instagram scripts, bots and Python API wrapper. Get free instagram followers with our auto like, auto follow and other scripts!\n20. [**parcel-bundler / parcel**](https://github.com/parcel-bundler/parcel)\n📦🚀 Blazing fast, zero configuration web application bundler\n21. [**microsoft / calculator**](https://github.com/microsoft/calculator)\nWindows Calculator: A simple yet powerful calculator that ships with Windows\n22. [**apache / skywalking**](https://github.com/apache/skywalking)\nAPM, Application Performance Monitoring System\n23. [**RustPython / RustPython**](https://github.com/RustPython/RustPython)\nA Python Interpreter written in Rust\n24. [**dylanaraps / pure-bash-bible**](https://github.com/dylanaraps/pure-bash-bible)\n📖 A collection of pure bash alternatives to external processes.\n25. [**nvbn / thefuck**](https://github.com/nvbn/thefuck)\nMagnificent app which corrects your previous console command.\n<!-- endtab -->\n<!-- tab Monthly -->\n1. [**xkcoding / spring-boot-demo**](https://github.com/xkcoding/spring-boot-demo)\nspring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…\n2. [**chinese-poetry / chinese-poetry**](https://github.com/chinese-poetry/chinese-poetry)\n最全中华古诗词数据库, 唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词。\n3. [**xiaolai / regular-investing-in-box**](https://github.com/xiaolai/regular-investing-in-box)\n定投改变命运 —— 让时间陪你慢慢变富\n4. [**jwasham / coding-interview-university**](https://github.com/jwasham/coding-interview-university)\nA complete computer science study plan to become a software engineer.\n5. [**qiurunze123 / miaosha**](https://github.com/qiurunze123/miaosha)\n⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓\n6. [**amejiarosario / dsa.js-data-structures-algorithms-javascript**](https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript)\nData Structures and Algorithms explained and implemented in JavaScript\n7. [**0voice / interview_internal_reference**](https://github.com/0voice/interview_internal_reference)\n2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。\n8. [**haotian-wang / google-access-helper**](https://github.com/haotian-wang/google-access-helper)\n谷歌访问助手破解版\n9. [**cube-js / cube.js**](https://github.com/cube-js/cube.js)\n📊 Cube.js - Open Source Analytics Framework\n10. [**cnlh / nps**](https://github.com/cnlh/nps)\n一款轻量级、功能强大的内网穿透代理服务器。支持tcp、udp流量转发，支持内网http代理、内网socks5代理，同时支持snappy压缩、站点保护、加密传输、多路复用、header修改等。支持web图形化管理，集成多用户模式。\n11. [**hollischuang / toBeTopJavaer**](https://github.com/hollischuang/toBeTopJavaer)\nTo Be Top Javaer - Java工程师成神之路\n12. [**Binaryify / NeteaseCloudMusicApi**](https://github.com/Binaryify/NeteaseCloudMusicApi)\n网易云音乐 Node.js API service\n13. [**alibaba / spring-cloud-alibaba**](https://github.com/alibaba/spring-cloud-alibaba)\nSpring Cloud Alibaba provides a one-stop solution for application development for the distributed solutions of Alibaba middleware.\n14. [**ardanlabs / gotraining**](https://github.com/ardanlabs/gotraining)\nGo Training Class Material :\n15. [**taosdata / TDengine**](https://github.com/taosdata/TDengine)\nAn open-source big data platform designed and optimized for the Internet of Things (IoT).\n16. [**LiteOS / LiteOS**](https://github.com/LiteOS/LiteOS)\ncode and manual\n17. [**quii / learn-go-with-tests**](https://github.com/quii/learn-go-with-tests)\nLearn Go with test-driven development\n18. [**PaddlePaddle / ERNIE**](https://github.com/PaddlePaddle/ERNIE)\nAn Implementation of ERNIE For Language Understanding (including Pre-training models and Fine-tuning tools)\n19. [**aosabook / 500lines**](https://github.com/aosabook/500lines)\n500 Lines or Less\n20. [**b3log / baidu-netdisk-downloaderx**](https://github.com/b3log/baidu-netdisk-downloaderx)\n⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。\n21. [**google-research / google-research**](https://github.com/google-research/google-research)\nGoogle AI Research\n22. [**shengqiangzhang / examples-of-web-crawlers**](https://github.com/shengqiangzhang/examples-of-web-crawlers)\n一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )\n23. [**HelloZeroNet / ZeroNet**](https://github.com/HelloZeroNet/ZeroNet)\nZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network\n24. [**abhat222 / Data-Science--Cheat-Sheet**](https://github.com/abhat222/Data-Science--Cheat-Sheet)\nCheat Sheets\n25. [**vuetifyjs / vuetify**](https://github.com/vuetifyjs/vuetify)\n🐉 Material Component Framework for Vue.js 2\n<!-- endtab -->\n{% endsubtabs %}\n<!-- endtab --><!-- tab Medium -->\n1. [**Desperate Spammers Are Targeting Calendars With ‘Meeting’ Invites**](https://medium.comhttps://onezero.medium.com/desperate-spammers-are-targeting-calendars-with-meeting-invites-b4e24f8e8a?source=topic_page---------------------------20)\nFaced with powerful automated filters on Gmail, criminals have found a new, annoying way to catch your attention\n2. [**An FBI Behaviour Expert Explains How to Quickly Build Trust With Anyone**](/personal-growth/an-fbi-behaviour-expert-explains-how-to-quickly-build-trust-with-anyone-94a05be01cea?source=topic_page---------0------------------1)\nIt’s not always about you!\n3. [**10 best Chrome extensions for designers**](https://uxdesign.cc/10-best-chrome-extensions-for-designers-a76540b93836?source=topic_page---------1------------------1)\nAfter months of testing, here are the 10 best Chrome Extensions for Product Designers.\n4. [**5 Ways to Reframe Your Identity and Create Success**](/better-marketing/5-ways-to-reframe-your-identity-and-create-success-7d4634321c4d?source=topic_page---------2------------------1)\nIf you look at your present and future selves as two different people, then your likelihood of making better decisions here and now will…\n5. [**Embrace the Suck: How to Develop the Skills You Need to Succeed (Even If You’re Not Very Good)**](/publishous/embrace-the-suck-how-to-develop-the-skills-you-need-to-succeed-even-if-youre-not-very-good-b4506f669820?source=topic_page---------4------------------1)\nHere’s the sad truth that applies to 95% of you.\n6. [**A Legacy of Abuse**](https://humanparts.medium.com/a-legacy-of-abuse-57dab89dde83?source=topic_page---------5------------------1)\nReporting my brother to Child Protective Services was the first step toward ending a decades-long cycle\n7. [**This is Why We Can’t Have Nice Things**](https://psiloveyou.xyz/this-is-why-we-cant-have-nice-things-812b66617233?source=topic_page---------6------------------1)\nThe greatest love story I’d ever written, until it wasn’t.\n8. [**Could Climate Change Really End the World?**](https://onezero.medium.com/could-climate-change-really-end-the-world-d0e7eb7f5b09?source=topic_page---------7------------------1)\nSpecies are going extinct and the climate is warming rapidly — yet at least materially, humans are doing better than ever. Welcome to the…\n9. [**What Nobody Told Me About Having Sex for the First Time**](https://humanparts.medium.com/what-nobody-told-me-about-having-sex-for-the-first-time-3972942a2fb2?source=topic_page---------8------------------1)\nI thought my wedding night would be amazing, but it brought more pain than pleasure\n10. [**5 Defining Traits Of The Truly Cool**](https://psiloveyou.xyz/5-defining-traits-of-the-truly-cool-458f332a3bd7?source=topic_page---------9------------------1)\nThey start by embracing small talk\n<!-- endtab -->\n{% endtabs %}\n","date":"2019-08-21T14:49:25.586Z","updated":"2019-08-21T14:49:25.586Z","path":"trending/index.html","_id":"cjzcljg2e000djy74up2gtgyi","layout":"page","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 22 2019 00:00:20 GMT+0900 (JST) --><blockquote><p>Scraped from <a href=\"https://github.com/trending\" target=\"_blank\" rel=\"noopener\">GitHub</a>, <a href=\"https://medium.com/topic/popular\" target=\"_blank\" rel=\"noopener\">Medium</a><br>auto-deployed with <a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">Travis Ci</a></p></blockquote><div class=\"tabs\" id=\"tab\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tab-1\">GitHub</a></li><li class=\"tab\"><a href=\"#tab-2\">Medium</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-1\"><div class=\"tabs\" id=\"github-tab\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#github-tab-1\">Daily</a></li><li class=\"tab\"><a href=\"#github-tab-2\">Weekly</a></li><li class=\"tab\"><a href=\"#github-tab-3\">Monthly</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"github-tab-1\"><ol><li><a href=\"https://github.com/yangshun/tech-interview-handbook\" target=\"_blank\" rel=\"noopener\"><strong>yangshun / tech-interview-handbook</strong></a><br>💯 Materials to help you rock your next coding interview</li><li><a href=\"https://github.com/quii/learn-go-with-tests\" target=\"_blank\" rel=\"noopener\"><strong>quii / learn-go-with-tests</strong></a><br>Learn Go with test-driven development</li><li><a href=\"https://github.com/xkcoding/spring-boot-demo\" target=\"_blank\" rel=\"noopener\"><strong>xkcoding / spring-boot-demo</strong></a><br>spring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…</li><li><a href=\"https://github.com/b3log/baidu-netdisk-downloaderx\" target=\"_blank\" rel=\"noopener\"><strong>b3log / baidu-netdisk-downloaderx</strong></a><br>⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。</li><li><a href=\"https://github.com/ccxt/ccxt\" target=\"_blank\" rel=\"noopener\"><strong>ccxt / ccxt</strong></a><br>A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges</li><li><a href=\"https://github.com/mixandjam/MGR-BladeMode\" target=\"_blank\" rel=\"noopener\"><strong>mixandjam / MGR-BladeMode</strong></a><br>Recreating the Blade Mode mechanic from Metal Gear Rising</li><li><a href=\"https://github.com/nodegui/react-nodegui\" target=\"_blank\" rel=\"noopener\"><strong>nodegui / react-nodegui</strong></a><br>Build performant, native and cross-platform desktop applications with native React + powerful CSS like styling.🚀</li><li><a href=\"https://github.com/google/live-transcribe-speech-engine\" target=\"_blank\" rel=\"noopener\"><strong>google / live-transcribe-speech-engine</strong></a><br>Live Transcribe is an Android application that provides real-time captioning for people who are deaf or hard of hearing. This repository contains the Android client libraries for communicating with Google’s Cloud Speech API that are used in Live Transcribe.</li><li><a href=\"https://github.com/Pierian-Data/Complete-Python-3-Bootcamp\" target=\"_blank\" rel=\"noopener\"><strong>Pierian-Data / Complete-Python-3-Bootcamp</strong></a><br>Course Files for Complete Python 3 Bootcamp Course on Udemy</li><li><a href=\"https://github.com/nondanee/UnblockNeteaseMusic\" target=\"_blank\" rel=\"noopener\"><strong>nondanee / UnblockNeteaseMusic</strong></a><br>Revive unavailable songs for Netease Cloud Music</li><li><a href=\"https://github.com/firmai/machine-learning-asset-management\" target=\"_blank\" rel=\"noopener\"><strong>firmai / machine-learning-asset-management</strong></a><br>Machine Learning in Asset Management</li><li><a href=\"https://github.com/Cocos-BCX/ERC-1808\" target=\"_blank\" rel=\"noopener\"><strong>Cocos-BCX / ERC-1808</strong></a><br>No repo_description</li><li><a href=\"https://github.com/P1xt/p1xt-guides\" target=\"_blank\" rel=\"noopener\"><strong>P1xt / p1xt-guides</strong></a><br>Programming curricula</li><li><a href=\"https://github.com/async-rs/async-std\" target=\"_blank\" rel=\"noopener\"><strong>async-rs / async-std</strong></a><br>Async version of the Rust standard library</li><li><a href=\"https://github.com/wifiphisher/wifiphisher\" target=\"_blank\" rel=\"noopener\"><strong>wifiphisher / wifiphisher</strong></a><br>The Rogue Access Point Framework</li><li><a href=\"https://github.com/cmackenzie1/new-grads-2020\" target=\"_blank\" rel=\"noopener\"><strong>cmackenzie1 / new-grads-2020</strong></a><br>A collection of new grad roles for 2020</li><li><a href=\"https://github.com/lohanidamodar/flutter_ui_challenges\" target=\"_blank\" rel=\"noopener\"><strong>lohanidamodar / flutter_ui_challenges</strong></a><br>Trying to replicate various app UIs in flutter</li><li><a href=\"https://github.com/kmario23/deep-learning-drizzle\" target=\"_blank\" rel=\"noopener\"><strong>kmario23 / deep-learning-drizzle</strong></a><br>Drench yourself in Deep Learning, Reinforcement Learning, Machine Learning, Computer Vision, and NLP by learning from these exciting lectures!!</li><li><a href=\"https://github.com/haizlin/fe-interview\" target=\"_blank\" rel=\"noopener\"><strong>haizlin / fe-interview</strong></a><br>前端面试每日 3+1，以面试题来驱动学习，提倡每日学习与思考，每天进步一点！每天早上5点纯手工发布面试题（死磕自己，愉悦大家）</li><li><a href=\"https://github.com/alexellis/k3sup\" target=\"_blank\" rel=\"noopener\"><strong>alexellis / k3sup</strong></a><br>k3sup: from Zero to KUBECONFIG in &lt; 1 min</li><li><a href=\"https://github.com/syhyz1990/baiduyun\" target=\"_blank\" rel=\"noopener\"><strong>syhyz1990 / baiduyun</strong></a><br>🖖油猴脚本 一个脚本搞定百度网盘下载</li><li><a href=\"https://github.com/nodegui/nodegui\" target=\"_blank\" rel=\"noopener\"><strong>nodegui / nodegui</strong></a><br>A library for building cross-platform native desktop applications with JavaScript and CSS like styling.</li><li><a href=\"https://github.com/b3log/30-seconds-zh_CN\" target=\"_blank\" rel=\"noopener\"><strong>b3log / 30-seconds-zh_CN</strong></a><br>📙 前端知识精选集，包含 HTML、CSS、JavaScript、React、Node、安全等方面，每天仅需 30 秒。</li><li><a href=\"https://github.com/getify/You-Dont-Know-JS\" target=\"_blank\" rel=\"noopener\"><strong>getify / You-Dont-Know-JS</strong></a><br>A book series on JavaScript. @YDKJS on twitter.</li><li><a href=\"https://github.com/danielmiessler/SecLists\" target=\"_blank\" rel=\"noopener\"><strong>danielmiessler / SecLists</strong></a><br>SecLists is the security tester’s companion. It’s a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.</li></ol></div><div class=\"tab-pane\" id=\"github-tab-2\"><ol><li><a href=\"https://github.com/Awesome-HarmonyOS/HarmonyOS\" target=\"_blank\" rel=\"noopener\"><strong>Awesome-HarmonyOS / HarmonyOS</strong></a><br>A curated list of awesome things related to HarmonyOS. 华为鸿蒙操作系统。</li><li><a href=\"https://github.com/xkcoding/spring-boot-demo\" target=\"_blank\" rel=\"noopener\"><strong>xkcoding / spring-boot-demo</strong></a><br>spring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…</li><li><a href=\"https://github.com/ian13456/mc.js\" target=\"_blank\" rel=\"noopener\"><strong>ian13456 / mc.js</strong></a><br>Open source Minecraft clone built with ThreeJS, ReactJS, GraphQL, and NodeJS.</li><li><a href=\"https://github.com/google/iosched\" target=\"_blank\" rel=\"noopener\"><strong>google / iosched</strong></a><br>The Google I/O 2019 Android App</li><li><a href=\"https://github.com/quii/learn-go-with-tests\" target=\"_blank\" rel=\"noopener\"><strong>quii / learn-go-with-tests</strong></a><br>Learn Go with test-driven development</li><li><a href=\"https://github.com/LiteOS/LiteOS\" target=\"_blank\" rel=\"noopener\"><strong>LiteOS / LiteOS</strong></a><br>code and manual</li><li><a href=\"https://github.com/hope-for/hope-boot\" target=\"_blank\" rel=\"noopener\"><strong>hope-for / hope-boot</strong></a><br>🌱🚀一款现代化的脚手架项目。企业开发？接外包？赚外快？还是学习？这都能满足你，居家必备，值得拥有🍻整合Springboot2，单点登陆+tk.mybatis+shiro+redis+thymeleaf+maven+swagger前后端分离接口管理+代码生成+定时任务+数据库版本管理flyway+hutool工具包，等实用技术。</li><li><a href=\"https://github.com/ctripcorp/C-OCR\" target=\"_blank\" rel=\"noopener\"><strong>ctripcorp / C-OCR</strong></a><br>C-OCR是携程自研的OCR项目，主要包括身份证、护照、火车票、签证等旅游相关证件、材料的识别。 项目包含4个部分，拒识、检测、识别、后处理。</li><li><a href=\"https://github.com/2227324689/gpmall\" target=\"_blank\" rel=\"noopener\"><strong>2227324689 / gpmall</strong></a><br>【咕泡学院实战项目】-基于SpringBoot+Dubbo构建的电商平台-微服务架构、商城、电商、微服务、高并发、kafka</li><li><a href=\"https://github.com/yangshun/tech-interview-handbook\" target=\"_blank\" rel=\"noopener\"><strong>yangshun / tech-interview-handbook</strong></a><br>💯 Materials to help you rock your next coding interview</li><li><a href=\"https://github.com/abhat222/Data-Science--Cheat-Sheet\" target=\"_blank\" rel=\"noopener\"><strong>abhat222 / Data-Science–Cheat-Sheet</strong></a><br>Cheat Sheets</li><li><a href=\"https://github.com/tootsuite/mastodon\" target=\"_blank\" rel=\"noopener\"><strong>tootsuite / mastodon</strong></a><br>Your self-hosted, globally interconnected microblogging community</li><li><a href=\"https://github.com/vmware/octant\" target=\"_blank\" rel=\"noopener\"><strong>vmware / octant</strong></a><br>A web-based, highly extensible platform for developers to better understand the complexity of Kubernetes clusters.</li><li><a href=\"https://github.com/projectstorm/react-diagrams\" target=\"_blank\" rel=\"noopener\"><strong>projectstorm / react-diagrams</strong></a><br>a super simple, no-nonsense diagramming library written in react that just works</li><li><a href=\"https://github.com/hollischuang/toBeTopJavaer\" target=\"_blank\" rel=\"noopener\"><strong>hollischuang / toBeTopJavaer</strong></a><br>To Be Top Javaer - Java工程师成神之路</li><li><a href=\"https://github.com/qiurunze123/miaosha\" target=\"_blank\" rel=\"noopener\"><strong>qiurunze123 / miaosha</strong></a><br>⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓</li><li><a href=\"https://github.com/shengqiangzhang/examples-of-web-crawlers\" target=\"_blank\" rel=\"noopener\"><strong>shengqiangzhang / examples-of-web-crawlers</strong></a><br>一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )</li><li><a href=\"https://github.com/jantic/DeOldify\" target=\"_blank\" rel=\"noopener\"><strong>jantic / DeOldify</strong></a><br>A Deep Learning based project for colorizing and restoring old images (and video!)</li><li><a href=\"https://github.com/instagrambot/instabot\" target=\"_blank\" rel=\"noopener\"><strong>instagrambot / instabot</strong></a><br>🐙 Free Instagram scripts, bots and Python API wrapper. Get free instagram followers with our auto like, auto follow and other scripts!</li><li><a href=\"https://github.com/parcel-bundler/parcel\" target=\"_blank\" rel=\"noopener\"><strong>parcel-bundler / parcel</strong></a><br>📦🚀 Blazing fast, zero configuration web application bundler</li><li><a href=\"https://github.com/microsoft/calculator\" target=\"_blank\" rel=\"noopener\"><strong>microsoft / calculator</strong></a><br>Windows Calculator: A simple yet powerful calculator that ships with Windows</li><li><a href=\"https://github.com/apache/skywalking\" target=\"_blank\" rel=\"noopener\"><strong>apache / skywalking</strong></a><br>APM, Application Performance Monitoring System</li><li><a href=\"https://github.com/RustPython/RustPython\" target=\"_blank\" rel=\"noopener\"><strong>RustPython / RustPython</strong></a><br>A Python Interpreter written in Rust</li><li><a href=\"https://github.com/dylanaraps/pure-bash-bible\" target=\"_blank\" rel=\"noopener\"><strong>dylanaraps / pure-bash-bible</strong></a><br>📖 A collection of pure bash alternatives to external processes.</li><li><a href=\"https://github.com/nvbn/thefuck\" target=\"_blank\" rel=\"noopener\"><strong>nvbn / thefuck</strong></a><br>Magnificent app which corrects your previous console command.</li></ol></div><div class=\"tab-pane\" id=\"github-tab-3\"><ol><li><a href=\"https://github.com/xkcoding/spring-boot-demo\" target=\"_blank\" rel=\"noopener\"><strong>xkcoding / spring-boot-demo</strong></a><br>spring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…</li><li><a href=\"https://github.com/chinese-poetry/chinese-poetry\" target=\"_blank\" rel=\"noopener\"><strong>chinese-poetry / chinese-poetry</strong></a><br>最全中华古诗词数据库, 唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词。</li><li><a href=\"https://github.com/xiaolai/regular-investing-in-box\" target=\"_blank\" rel=\"noopener\"><strong>xiaolai / regular-investing-in-box</strong></a><br>定投改变命运 —— 让时间陪你慢慢变富</li><li><a href=\"https://github.com/jwasham/coding-interview-university\" target=\"_blank\" rel=\"noopener\"><strong>jwasham / coding-interview-university</strong></a><br>A complete computer science study plan to become a software engineer.</li><li><a href=\"https://github.com/qiurunze123/miaosha\" target=\"_blank\" rel=\"noopener\"><strong>qiurunze123 / miaosha</strong></a><br>⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓</li><li><a href=\"https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript\" target=\"_blank\" rel=\"noopener\"><strong>amejiarosario / dsa.js-data-structures-algorithms-javascript</strong></a><br>Data Structures and Algorithms explained and implemented in JavaScript</li><li><a href=\"https://github.com/0voice/interview_internal_reference\" target=\"_blank\" rel=\"noopener\"><strong>0voice / interview_internal_reference</strong></a><br>2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。</li><li><a href=\"https://github.com/haotian-wang/google-access-helper\" target=\"_blank\" rel=\"noopener\"><strong>haotian-wang / google-access-helper</strong></a><br>谷歌访问助手破解版</li><li><a href=\"https://github.com/cube-js/cube.js\" target=\"_blank\" rel=\"noopener\"><strong>cube-js / cube.js</strong></a><br>📊 Cube.js - Open Source Analytics Framework</li><li><a href=\"https://github.com/cnlh/nps\" target=\"_blank\" rel=\"noopener\"><strong>cnlh / nps</strong></a><br>一款轻量级、功能强大的内网穿透代理服务器。支持tcp、udp流量转发，支持内网http代理、内网socks5代理，同时支持snappy压缩、站点保护、加密传输、多路复用、header修改等。支持web图形化管理，集成多用户模式。</li><li><a href=\"https://github.com/hollischuang/toBeTopJavaer\" target=\"_blank\" rel=\"noopener\"><strong>hollischuang / toBeTopJavaer</strong></a><br>To Be Top Javaer - Java工程师成神之路</li><li><a href=\"https://github.com/Binaryify/NeteaseCloudMusicApi\" target=\"_blank\" rel=\"noopener\"><strong>Binaryify / NeteaseCloudMusicApi</strong></a><br>网易云音乐 Node.js API service</li><li><a href=\"https://github.com/alibaba/spring-cloud-alibaba\" target=\"_blank\" rel=\"noopener\"><strong>alibaba / spring-cloud-alibaba</strong></a><br>Spring Cloud Alibaba provides a one-stop solution for application development for the distributed solutions of Alibaba middleware.</li><li><a href=\"https://github.com/ardanlabs/gotraining\" target=\"_blank\" rel=\"noopener\"><strong>ardanlabs / gotraining</strong></a><br>Go Training Class Material :</li><li><a href=\"https://github.com/taosdata/TDengine\" target=\"_blank\" rel=\"noopener\"><strong>taosdata / TDengine</strong></a><br>An open-source big data platform designed and optimized for the Internet of Things (IoT).</li><li><a href=\"https://github.com/LiteOS/LiteOS\" target=\"_blank\" rel=\"noopener\"><strong>LiteOS / LiteOS</strong></a><br>code and manual</li><li><a href=\"https://github.com/quii/learn-go-with-tests\" target=\"_blank\" rel=\"noopener\"><strong>quii / learn-go-with-tests</strong></a><br>Learn Go with test-driven development</li><li><a href=\"https://github.com/PaddlePaddle/ERNIE\" target=\"_blank\" rel=\"noopener\"><strong>PaddlePaddle / ERNIE</strong></a><br>An Implementation of ERNIE For Language Understanding (including Pre-training models and Fine-tuning tools)</li><li><a href=\"https://github.com/aosabook/500lines\" target=\"_blank\" rel=\"noopener\"><strong>aosabook / 500lines</strong></a><br>500 Lines or Less</li><li><a href=\"https://github.com/b3log/baidu-netdisk-downloaderx\" target=\"_blank\" rel=\"noopener\"><strong>b3log / baidu-netdisk-downloaderx</strong></a><br>⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。</li><li><a href=\"https://github.com/google-research/google-research\" target=\"_blank\" rel=\"noopener\"><strong>google-research / google-research</strong></a><br>Google AI Research</li><li><a href=\"https://github.com/shengqiangzhang/examples-of-web-crawlers\" target=\"_blank\" rel=\"noopener\"><strong>shengqiangzhang / examples-of-web-crawlers</strong></a><br>一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )</li><li><a href=\"https://github.com/HelloZeroNet/ZeroNet\" target=\"_blank\" rel=\"noopener\"><strong>HelloZeroNet / ZeroNet</strong></a><br>ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network</li><li><a href=\"https://github.com/abhat222/Data-Science--Cheat-Sheet\" target=\"_blank\" rel=\"noopener\"><strong>abhat222 / Data-Science–Cheat-Sheet</strong></a><br>Cheat Sheets</li><li><a href=\"https://github.com/vuetifyjs/vuetify\" target=\"_blank\" rel=\"noopener\"><strong>vuetifyjs / vuetify</strong></a><br>🐉 Material Component Framework for Vue.js 2</li></ol></div></div></div></div><div class=\"tab-pane\" id=\"tab-2\"><ol><li><a href=\"https://medium.comhttps://onezero.medium.com/desperate-spammers-are-targeting-calendars-with-meeting-invites-b4e24f8e8a?source=topic_page---------------------------20\" target=\"_blank\" rel=\"noopener\"><strong>Desperate Spammers Are Targeting Calendars With ‘Meeting’ Invites</strong></a><br>Faced with powerful automated filters on Gmail, criminals have found a new, annoying way to catch your attention</li><li><a href=\"/personal-growth/an-fbi-behaviour-expert-explains-how-to-quickly-build-trust-with-anyone-94a05be01cea?source=topic_page---------0------------------1\"><strong>An FBI Behaviour Expert Explains How to Quickly Build Trust With Anyone</strong></a><br>It’s not always about you!</li><li><a href=\"https://uxdesign.cc/10-best-chrome-extensions-for-designers-a76540b93836?source=topic_page---------1------------------1\" target=\"_blank\" rel=\"noopener\"><strong>10 best Chrome extensions for designers</strong></a><br>After months of testing, here are the 10 best Chrome Extensions for Product Designers.</li><li><a href=\"/better-marketing/5-ways-to-reframe-your-identity-and-create-success-7d4634321c4d?source=topic_page---------2------------------1\"><strong>5 Ways to Reframe Your Identity and Create Success</strong></a><br>If you look at your present and future selves as two different people, then your likelihood of making better decisions here and now will…</li><li><a href=\"/publishous/embrace-the-suck-how-to-develop-the-skills-you-need-to-succeed-even-if-youre-not-very-good-b4506f669820?source=topic_page---------4------------------1\"><strong>Embrace the Suck: How to Develop the Skills You Need to Succeed (Even If You’re Not Very Good)</strong></a><br>Here’s the sad truth that applies to 95% of you.</li><li><a href=\"https://humanparts.medium.com/a-legacy-of-abuse-57dab89dde83?source=topic_page---------5------------------1\" target=\"_blank\" rel=\"noopener\"><strong>A Legacy of Abuse</strong></a><br>Reporting my brother to Child Protective Services was the first step toward ending a decades-long cycle</li><li><a href=\"https://psiloveyou.xyz/this-is-why-we-cant-have-nice-things-812b66617233?source=topic_page---------6------------------1\" target=\"_blank\" rel=\"noopener\"><strong>This is Why We Can’t Have Nice Things</strong></a><br>The greatest love story I’d ever written, until it wasn’t.</li><li><a href=\"https://onezero.medium.com/could-climate-change-really-end-the-world-d0e7eb7f5b09?source=topic_page---------7------------------1\" target=\"_blank\" rel=\"noopener\"><strong>Could Climate Change Really End the World?</strong></a><br>Species are going extinct and the climate is warming rapidly — yet at least materially, humans are doing better than ever. Welcome to the…</li><li><a href=\"https://humanparts.medium.com/what-nobody-told-me-about-having-sex-for-the-first-time-3972942a2fb2?source=topic_page---------8------------------1\" target=\"_blank\" rel=\"noopener\"><strong>What Nobody Told Me About Having Sex for the First Time</strong></a><br>I thought my wedding night would be amazing, but it brought more pain than pleasure</li><li><a href=\"https://psiloveyou.xyz/5-defining-traits-of-the-truly-cool-458f332a3bd7?source=topic_page---------9------------------1\" target=\"_blank\" rel=\"noopener\"><strong>5 Defining Traits Of The Truly Cool</strong></a><br>They start by embracing small talk</li></ol></div></div></div><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Tue Aug 20 2019 03:29:45 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}.post-copyright a{color:#0366d6;border-bottom:none}.post-copyright a:hover{color:#01438f}.posts-expand .post-meta time{cursor:initial}.post-body .tabs ul.nav-tabs li.tab.active{border-top:3px solid #ddd;border-right:1px solid #ddd;border-bottom:1px solid transparent;border-left:1px solid #ddd}\n/* rebuild by neat */"}},"excerpt":"","more":"<!-- build time:Thu Aug 22 2019 00:00:20 GMT+0900 (JST) --><blockquote><p>Scraped from <a href=\"https://github.com/trending\" target=\"_blank\" rel=\"noopener\">GitHub</a>, <a href=\"https://medium.com/topic/popular\" target=\"_blank\" rel=\"noopener\">Medium</a><br>auto-deployed with <a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">Travis Ci</a></p></blockquote><div class=\"tabs\" id=\"tab\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#tab-1\">GitHub</a></li><li class=\"tab\"><a href=\"#tab-2\">Medium</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"tab-1\"><div class=\"tabs\" id=\"github-tab\"><ul class=\"nav-tabs\"><li class=\"tab active\"><a href=\"#github-tab-1\">Daily</a></li><li class=\"tab\"><a href=\"#github-tab-2\">Weekly</a></li><li class=\"tab\"><a href=\"#github-tab-3\">Monthly</a></li></ul><div class=\"tab-content\"><div class=\"tab-pane active\" id=\"github-tab-1\"><ol><li><a href=\"https://github.com/yangshun/tech-interview-handbook\" target=\"_blank\" rel=\"noopener\"><strong>yangshun / tech-interview-handbook</strong></a><br>💯 Materials to help you rock your next coding interview</li><li><a href=\"https://github.com/quii/learn-go-with-tests\" target=\"_blank\" rel=\"noopener\"><strong>quii / learn-go-with-tests</strong></a><br>Learn Go with test-driven development</li><li><a href=\"https://github.com/xkcoding/spring-boot-demo\" target=\"_blank\" rel=\"noopener\"><strong>xkcoding / spring-boot-demo</strong></a><br>spring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…</li><li><a href=\"https://github.com/b3log/baidu-netdisk-downloaderx\" target=\"_blank\" rel=\"noopener\"><strong>b3log / baidu-netdisk-downloaderx</strong></a><br>⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。</li><li><a href=\"https://github.com/ccxt/ccxt\" target=\"_blank\" rel=\"noopener\"><strong>ccxt / ccxt</strong></a><br>A JavaScript / Python / PHP cryptocurrency trading API with support for more than 120 bitcoin/altcoin exchanges</li><li><a href=\"https://github.com/mixandjam/MGR-BladeMode\" target=\"_blank\" rel=\"noopener\"><strong>mixandjam / MGR-BladeMode</strong></a><br>Recreating the Blade Mode mechanic from Metal Gear Rising</li><li><a href=\"https://github.com/nodegui/react-nodegui\" target=\"_blank\" rel=\"noopener\"><strong>nodegui / react-nodegui</strong></a><br>Build performant, native and cross-platform desktop applications with native React + powerful CSS like styling.🚀</li><li><a href=\"https://github.com/google/live-transcribe-speech-engine\" target=\"_blank\" rel=\"noopener\"><strong>google / live-transcribe-speech-engine</strong></a><br>Live Transcribe is an Android application that provides real-time captioning for people who are deaf or hard of hearing. This repository contains the Android client libraries for communicating with Google’s Cloud Speech API that are used in Live Transcribe.</li><li><a href=\"https://github.com/Pierian-Data/Complete-Python-3-Bootcamp\" target=\"_blank\" rel=\"noopener\"><strong>Pierian-Data / Complete-Python-3-Bootcamp</strong></a><br>Course Files for Complete Python 3 Bootcamp Course on Udemy</li><li><a href=\"https://github.com/nondanee/UnblockNeteaseMusic\" target=\"_blank\" rel=\"noopener\"><strong>nondanee / UnblockNeteaseMusic</strong></a><br>Revive unavailable songs for Netease Cloud Music</li><li><a href=\"https://github.com/firmai/machine-learning-asset-management\" target=\"_blank\" rel=\"noopener\"><strong>firmai / machine-learning-asset-management</strong></a><br>Machine Learning in Asset Management</li><li><a href=\"https://github.com/Cocos-BCX/ERC-1808\" target=\"_blank\" rel=\"noopener\"><strong>Cocos-BCX / ERC-1808</strong></a><br>No repo_description</li><li><a href=\"https://github.com/P1xt/p1xt-guides\" target=\"_blank\" rel=\"noopener\"><strong>P1xt / p1xt-guides</strong></a><br>Programming curricula</li><li><a href=\"https://github.com/async-rs/async-std\" target=\"_blank\" rel=\"noopener\"><strong>async-rs / async-std</strong></a><br>Async version of the Rust standard library</li><li><a href=\"https://github.com/wifiphisher/wifiphisher\" target=\"_blank\" rel=\"noopener\"><strong>wifiphisher / wifiphisher</strong></a><br>The Rogue Access Point Framework</li><li><a href=\"https://github.com/cmackenzie1/new-grads-2020\" target=\"_blank\" rel=\"noopener\"><strong>cmackenzie1 / new-grads-2020</strong></a><br>A collection of new grad roles for 2020</li><li><a href=\"https://github.com/lohanidamodar/flutter_ui_challenges\" target=\"_blank\" rel=\"noopener\"><strong>lohanidamodar / flutter_ui_challenges</strong></a><br>Trying to replicate various app UIs in flutter</li><li><a href=\"https://github.com/kmario23/deep-learning-drizzle\" target=\"_blank\" rel=\"noopener\"><strong>kmario23 / deep-learning-drizzle</strong></a><br>Drench yourself in Deep Learning, Reinforcement Learning, Machine Learning, Computer Vision, and NLP by learning from these exciting lectures!!</li><li><a href=\"https://github.com/haizlin/fe-interview\" target=\"_blank\" rel=\"noopener\"><strong>haizlin / fe-interview</strong></a><br>前端面试每日 3+1，以面试题来驱动学习，提倡每日学习与思考，每天进步一点！每天早上5点纯手工发布面试题（死磕自己，愉悦大家）</li><li><a href=\"https://github.com/alexellis/k3sup\" target=\"_blank\" rel=\"noopener\"><strong>alexellis / k3sup</strong></a><br>k3sup: from Zero to KUBECONFIG in &lt; 1 min</li><li><a href=\"https://github.com/syhyz1990/baiduyun\" target=\"_blank\" rel=\"noopener\"><strong>syhyz1990 / baiduyun</strong></a><br>🖖油猴脚本 一个脚本搞定百度网盘下载</li><li><a href=\"https://github.com/nodegui/nodegui\" target=\"_blank\" rel=\"noopener\"><strong>nodegui / nodegui</strong></a><br>A library for building cross-platform native desktop applications with JavaScript and CSS like styling.</li><li><a href=\"https://github.com/b3log/30-seconds-zh_CN\" target=\"_blank\" rel=\"noopener\"><strong>b3log / 30-seconds-zh_CN</strong></a><br>📙 前端知识精选集，包含 HTML、CSS、JavaScript、React、Node、安全等方面，每天仅需 30 秒。</li><li><a href=\"https://github.com/getify/You-Dont-Know-JS\" target=\"_blank\" rel=\"noopener\"><strong>getify / You-Dont-Know-JS</strong></a><br>A book series on JavaScript. @YDKJS on twitter.</li><li><a href=\"https://github.com/danielmiessler/SecLists\" target=\"_blank\" rel=\"noopener\"><strong>danielmiessler / SecLists</strong></a><br>SecLists is the security tester’s companion. It’s a collection of multiple types of lists used during security assessments, collected in one place. List types include usernames, passwords, URLs, sensitive data patterns, fuzzing payloads, web shells, and many more.</li></ol></div><div class=\"tab-pane\" id=\"github-tab-2\"><ol><li><a href=\"https://github.com/Awesome-HarmonyOS/HarmonyOS\" target=\"_blank\" rel=\"noopener\"><strong>Awesome-HarmonyOS / HarmonyOS</strong></a><br>A curated list of awesome things related to HarmonyOS. 华为鸿蒙操作系统。</li><li><a href=\"https://github.com/xkcoding/spring-boot-demo\" target=\"_blank\" rel=\"noopener\"><strong>xkcoding / spring-boot-demo</strong></a><br>spring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…</li><li><a href=\"https://github.com/ian13456/mc.js\" target=\"_blank\" rel=\"noopener\"><strong>ian13456 / mc.js</strong></a><br>Open source Minecraft clone built with ThreeJS, ReactJS, GraphQL, and NodeJS.</li><li><a href=\"https://github.com/google/iosched\" target=\"_blank\" rel=\"noopener\"><strong>google / iosched</strong></a><br>The Google I/O 2019 Android App</li><li><a href=\"https://github.com/quii/learn-go-with-tests\" target=\"_blank\" rel=\"noopener\"><strong>quii / learn-go-with-tests</strong></a><br>Learn Go with test-driven development</li><li><a href=\"https://github.com/LiteOS/LiteOS\" target=\"_blank\" rel=\"noopener\"><strong>LiteOS / LiteOS</strong></a><br>code and manual</li><li><a href=\"https://github.com/hope-for/hope-boot\" target=\"_blank\" rel=\"noopener\"><strong>hope-for / hope-boot</strong></a><br>🌱🚀一款现代化的脚手架项目。企业开发？接外包？赚外快？还是学习？这都能满足你，居家必备，值得拥有🍻整合Springboot2，单点登陆+tk.mybatis+shiro+redis+thymeleaf+maven+swagger前后端分离接口管理+代码生成+定时任务+数据库版本管理flyway+hutool工具包，等实用技术。</li><li><a href=\"https://github.com/ctripcorp/C-OCR\" target=\"_blank\" rel=\"noopener\"><strong>ctripcorp / C-OCR</strong></a><br>C-OCR是携程自研的OCR项目，主要包括身份证、护照、火车票、签证等旅游相关证件、材料的识别。 项目包含4个部分，拒识、检测、识别、后处理。</li><li><a href=\"https://github.com/2227324689/gpmall\" target=\"_blank\" rel=\"noopener\"><strong>2227324689 / gpmall</strong></a><br>【咕泡学院实战项目】-基于SpringBoot+Dubbo构建的电商平台-微服务架构、商城、电商、微服务、高并发、kafka</li><li><a href=\"https://github.com/yangshun/tech-interview-handbook\" target=\"_blank\" rel=\"noopener\"><strong>yangshun / tech-interview-handbook</strong></a><br>💯 Materials to help you rock your next coding interview</li><li><a href=\"https://github.com/abhat222/Data-Science--Cheat-Sheet\" target=\"_blank\" rel=\"noopener\"><strong>abhat222 / Data-Science–Cheat-Sheet</strong></a><br>Cheat Sheets</li><li><a href=\"https://github.com/tootsuite/mastodon\" target=\"_blank\" rel=\"noopener\"><strong>tootsuite / mastodon</strong></a><br>Your self-hosted, globally interconnected microblogging community</li><li><a href=\"https://github.com/vmware/octant\" target=\"_blank\" rel=\"noopener\"><strong>vmware / octant</strong></a><br>A web-based, highly extensible platform for developers to better understand the complexity of Kubernetes clusters.</li><li><a href=\"https://github.com/projectstorm/react-diagrams\" target=\"_blank\" rel=\"noopener\"><strong>projectstorm / react-diagrams</strong></a><br>a super simple, no-nonsense diagramming library written in react that just works</li><li><a href=\"https://github.com/hollischuang/toBeTopJavaer\" target=\"_blank\" rel=\"noopener\"><strong>hollischuang / toBeTopJavaer</strong></a><br>To Be Top Javaer - Java工程师成神之路</li><li><a href=\"https://github.com/qiurunze123/miaosha\" target=\"_blank\" rel=\"noopener\"><strong>qiurunze123 / miaosha</strong></a><br>⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓</li><li><a href=\"https://github.com/shengqiangzhang/examples-of-web-crawlers\" target=\"_blank\" rel=\"noopener\"><strong>shengqiangzhang / examples-of-web-crawlers</strong></a><br>一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )</li><li><a href=\"https://github.com/jantic/DeOldify\" target=\"_blank\" rel=\"noopener\"><strong>jantic / DeOldify</strong></a><br>A Deep Learning based project for colorizing and restoring old images (and video!)</li><li><a href=\"https://github.com/instagrambot/instabot\" target=\"_blank\" rel=\"noopener\"><strong>instagrambot / instabot</strong></a><br>🐙 Free Instagram scripts, bots and Python API wrapper. Get free instagram followers with our auto like, auto follow and other scripts!</li><li><a href=\"https://github.com/parcel-bundler/parcel\" target=\"_blank\" rel=\"noopener\"><strong>parcel-bundler / parcel</strong></a><br>📦🚀 Blazing fast, zero configuration web application bundler</li><li><a href=\"https://github.com/microsoft/calculator\" target=\"_blank\" rel=\"noopener\"><strong>microsoft / calculator</strong></a><br>Windows Calculator: A simple yet powerful calculator that ships with Windows</li><li><a href=\"https://github.com/apache/skywalking\" target=\"_blank\" rel=\"noopener\"><strong>apache / skywalking</strong></a><br>APM, Application Performance Monitoring System</li><li><a href=\"https://github.com/RustPython/RustPython\" target=\"_blank\" rel=\"noopener\"><strong>RustPython / RustPython</strong></a><br>A Python Interpreter written in Rust</li><li><a href=\"https://github.com/dylanaraps/pure-bash-bible\" target=\"_blank\" rel=\"noopener\"><strong>dylanaraps / pure-bash-bible</strong></a><br>📖 A collection of pure bash alternatives to external processes.</li><li><a href=\"https://github.com/nvbn/thefuck\" target=\"_blank\" rel=\"noopener\"><strong>nvbn / thefuck</strong></a><br>Magnificent app which corrects your previous console command.</li></ol></div><div class=\"tab-pane\" id=\"github-tab-3\"><ol><li><a href=\"https://github.com/xkcoding/spring-boot-demo\" target=\"_blank\" rel=\"noopener\"><strong>xkcoding / spring-boot-demo</strong></a><br>spring boot demo 是一个用来学习 spring boot 的项目，总共包含 57 个集成demo，已经完成 47 个。包含集成 actuator(监控)、admin(可视化监控)、logback(日志)、aopLog(通过AOP记录web请求日志)、统一异常处理(json级别和页面级别)、freemarker(模板引擎)、thymeleaf(模板引擎)、Beetl(模板引擎)、Enjoy(模板引擎)、JdbcTemplate、JPA(ORM框架)、mybatis(ORM框架)、通用Mapper、PageHelper、mybatis-plus、BeetlSQL、upload(本地文件上传和七牛云文件上传)、redis(缓存)、ehcache(缓存)、email(发送各种类…</li><li><a href=\"https://github.com/chinese-poetry/chinese-poetry\" target=\"_blank\" rel=\"noopener\"><strong>chinese-poetry / chinese-poetry</strong></a><br>最全中华古诗词数据库, 唐宋两朝近一万四千古诗人, 接近5.5万首唐诗加26万宋诗. 两宋时期1564位词人，21050首词。</li><li><a href=\"https://github.com/xiaolai/regular-investing-in-box\" target=\"_blank\" rel=\"noopener\"><strong>xiaolai / regular-investing-in-box</strong></a><br>定投改变命运 —— 让时间陪你慢慢变富</li><li><a href=\"https://github.com/jwasham/coding-interview-university\" target=\"_blank\" rel=\"noopener\"><strong>jwasham / coding-interview-university</strong></a><br>A complete computer science study plan to become a software engineer.</li><li><a href=\"https://github.com/qiurunze123/miaosha\" target=\"_blank\" rel=\"noopener\"><strong>qiurunze123 / miaosha</strong></a><br>⭐⭐⭐⭐秒杀系统设计与实现.互联网工程师进阶与分析🙋🐓</li><li><a href=\"https://github.com/amejiarosario/dsa.js-data-structures-algorithms-javascript\" target=\"_blank\" rel=\"noopener\"><strong>amejiarosario / dsa.js-data-structures-algorithms-javascript</strong></a><br>Data Structures and Algorithms explained and implemented in JavaScript</li><li><a href=\"https://github.com/0voice/interview_internal_reference\" target=\"_blank\" rel=\"noopener\"><strong>0voice / interview_internal_reference</strong></a><br>2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总。</li><li><a href=\"https://github.com/haotian-wang/google-access-helper\" target=\"_blank\" rel=\"noopener\"><strong>haotian-wang / google-access-helper</strong></a><br>谷歌访问助手破解版</li><li><a href=\"https://github.com/cube-js/cube.js\" target=\"_blank\" rel=\"noopener\"><strong>cube-js / cube.js</strong></a><br>📊 Cube.js - Open Source Analytics Framework</li><li><a href=\"https://github.com/cnlh/nps\" target=\"_blank\" rel=\"noopener\"><strong>cnlh / nps</strong></a><br>一款轻量级、功能强大的内网穿透代理服务器。支持tcp、udp流量转发，支持内网http代理、内网socks5代理，同时支持snappy压缩、站点保护、加密传输、多路复用、header修改等。支持web图形化管理，集成多用户模式。</li><li><a href=\"https://github.com/hollischuang/toBeTopJavaer\" target=\"_blank\" rel=\"noopener\"><strong>hollischuang / toBeTopJavaer</strong></a><br>To Be Top Javaer - Java工程师成神之路</li><li><a href=\"https://github.com/Binaryify/NeteaseCloudMusicApi\" target=\"_blank\" rel=\"noopener\"><strong>Binaryify / NeteaseCloudMusicApi</strong></a><br>网易云音乐 Node.js API service</li><li><a href=\"https://github.com/alibaba/spring-cloud-alibaba\" target=\"_blank\" rel=\"noopener\"><strong>alibaba / spring-cloud-alibaba</strong></a><br>Spring Cloud Alibaba provides a one-stop solution for application development for the distributed solutions of Alibaba middleware.</li><li><a href=\"https://github.com/ardanlabs/gotraining\" target=\"_blank\" rel=\"noopener\"><strong>ardanlabs / gotraining</strong></a><br>Go Training Class Material :</li><li><a href=\"https://github.com/taosdata/TDengine\" target=\"_blank\" rel=\"noopener\"><strong>taosdata / TDengine</strong></a><br>An open-source big data platform designed and optimized for the Internet of Things (IoT).</li><li><a href=\"https://github.com/LiteOS/LiteOS\" target=\"_blank\" rel=\"noopener\"><strong>LiteOS / LiteOS</strong></a><br>code and manual</li><li><a href=\"https://github.com/quii/learn-go-with-tests\" target=\"_blank\" rel=\"noopener\"><strong>quii / learn-go-with-tests</strong></a><br>Learn Go with test-driven development</li><li><a href=\"https://github.com/PaddlePaddle/ERNIE\" target=\"_blank\" rel=\"noopener\"><strong>PaddlePaddle / ERNIE</strong></a><br>An Implementation of ERNIE For Language Understanding (including Pre-training models and Fine-tuning tools)</li><li><a href=\"https://github.com/aosabook/500lines\" target=\"_blank\" rel=\"noopener\"><strong>aosabook / 500lines</strong></a><br>500 Lines or Less</li><li><a href=\"https://github.com/b3log/baidu-netdisk-downloaderx\" target=\"_blank\" rel=\"noopener\"><strong>b3log / baidu-netdisk-downloaderx</strong></a><br>⚡️ 一款图形界面的百度网盘不限速下载器，支持 Windows、Linux 和 Mac。</li><li><a href=\"https://github.com/google-research/google-research\" target=\"_blank\" rel=\"noopener\"><strong>google-research / google-research</strong></a><br>Google AI Research</li><li><a href=\"https://github.com/shengqiangzhang/examples-of-web-crawlers\" target=\"_blank\" rel=\"noopener\"><strong>shengqiangzhang / examples-of-web-crawlers</strong></a><br>一些有趣的python爬虫例子,对新手比较友好,主要爬取淘宝、天猫、微信、豆瓣、QQ等网站。(Some interesting examples of python crawlers that are friendly to beginners. )</li><li><a href=\"https://github.com/HelloZeroNet/ZeroNet\" target=\"_blank\" rel=\"noopener\"><strong>HelloZeroNet / ZeroNet</strong></a><br>ZeroNet - Decentralized websites using Bitcoin crypto and BitTorrent network</li><li><a href=\"https://github.com/abhat222/Data-Science--Cheat-Sheet\" target=\"_blank\" rel=\"noopener\"><strong>abhat222 / Data-Science–Cheat-Sheet</strong></a><br>Cheat Sheets</li><li><a href=\"https://github.com/vuetifyjs/vuetify\" target=\"_blank\" rel=\"noopener\"><strong>vuetifyjs / vuetify</strong></a><br>🐉 Material Component Framework for Vue.js 2</li></ol></div></div></div></div><div class=\"tab-pane\" id=\"tab-2\"><ol><li><a href=\"https://medium.comhttps://onezero.medium.com/desperate-spammers-are-targeting-calendars-with-meeting-invites-b4e24f8e8a?source=topic_page---------------------------20\" target=\"_blank\" rel=\"noopener\"><strong>Desperate Spammers Are Targeting Calendars With ‘Meeting’ Invites</strong></a><br>Faced with powerful automated filters on Gmail, criminals have found a new, annoying way to catch your attention</li><li><a href=\"/personal-growth/an-fbi-behaviour-expert-explains-how-to-quickly-build-trust-with-anyone-94a05be01cea?source=topic_page---------0------------------1\"><strong>An FBI Behaviour Expert Explains How to Quickly Build Trust With Anyone</strong></a><br>It’s not always about you!</li><li><a href=\"https://uxdesign.cc/10-best-chrome-extensions-for-designers-a76540b93836?source=topic_page---------1------------------1\" target=\"_blank\" rel=\"noopener\"><strong>10 best Chrome extensions for designers</strong></a><br>After months of testing, here are the 10 best Chrome Extensions for Product Designers.</li><li><a href=\"/better-marketing/5-ways-to-reframe-your-identity-and-create-success-7d4634321c4d?source=topic_page---------2------------------1\"><strong>5 Ways to Reframe Your Identity and Create Success</strong></a><br>If you look at your present and future selves as two different people, then your likelihood of making better decisions here and now will…</li><li><a href=\"/publishous/embrace-the-suck-how-to-develop-the-skills-you-need-to-succeed-even-if-youre-not-very-good-b4506f669820?source=topic_page---------4------------------1\"><strong>Embrace the Suck: How to Develop the Skills You Need to Succeed (Even If You’re Not Very Good)</strong></a><br>Here’s the sad truth that applies to 95% of you.</li><li><a href=\"https://humanparts.medium.com/a-legacy-of-abuse-57dab89dde83?source=topic_page---------5------------------1\" target=\"_blank\" rel=\"noopener\"><strong>A Legacy of Abuse</strong></a><br>Reporting my brother to Child Protective Services was the first step toward ending a decades-long cycle</li><li><a href=\"https://psiloveyou.xyz/this-is-why-we-cant-have-nice-things-812b66617233?source=topic_page---------6------------------1\" target=\"_blank\" rel=\"noopener\"><strong>This is Why We Can’t Have Nice Things</strong></a><br>The greatest love story I’d ever written, until it wasn’t.</li><li><a href=\"https://onezero.medium.com/could-climate-change-really-end-the-world-d0e7eb7f5b09?source=topic_page---------7------------------1\" target=\"_blank\" rel=\"noopener\"><strong>Could Climate Change Really End the World?</strong></a><br>Species are going extinct and the climate is warming rapidly — yet at least materially, humans are doing better than ever. Welcome to the…</li><li><a href=\"https://humanparts.medium.com/what-nobody-told-me-about-having-sex-for-the-first-time-3972942a2fb2?source=topic_page---------8------------------1\" target=\"_blank\" rel=\"noopener\"><strong>What Nobody Told Me About Having Sex for the First Time</strong></a><br>I thought my wedding night would be amazing, but it brought more pain than pleasure</li><li><a href=\"https://psiloveyou.xyz/5-defining-traits-of-the-truly-cool-458f332a3bd7?source=topic_page---------9------------------1\" target=\"_blank\" rel=\"noopener\"><strong>5 Defining Traits Of The Truly Cool</strong></a><br>They start by embracing small talk</li></ol></div></div></div><!-- rebuild by neat -->"}],"Post":[{"title":"Crawler Tutorial-1：Basic Structure of a Web Page","date":"2018-09-10T15:00:00.000Z","_content":"\nIn this era of information, everyone should notice the value of information. Wherever there is information, there is also treasure and success! If you can build your own web crawler, it will be easier for you to acquire the huge treasure in the world of Internet.  \n\nI'm a beginner in the field of web crawler. The purpose of this blog is to record my learning and hope these articles could also help you to learn web crawler. My English is not very good, so it would be appreciated if you could point out my grammar mistakes.\n\n# The truth of a web page\n\nLet us open a website to have a look. It may look like this:\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png)\nWith an elegant format design and some pictures.\n\n<!-- more -->\n\nActually, when you right-click the web page and choose `View Page Source`(or something like this), you'll get these stuff:\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png)\n\nIt looks like some kind of programming language, doesn't it? We call it HTML(HyperText Markup Language), as you see, it's a kind of markup language. Except HTML, a web page also contains CSS and JavaScript. They work together to build the web page what we usually see. We won't go deep into the connections among them. \n\nAnyway, when we right-click the web page we can get its source code, and we'll obtain the data we want from the source code. Basically, every useful content is included in labels like `<div>...</div>，<li>...</li>`, and labels contains attributes like `href=\"http://www.gakki.cute.com\", class=\"Gakki\"`, or texts like `>Gakki is my wife<`. These links or texts contained in the labels are usually what we want to download from websites.\n\n# Tools\n\nFor the sake of acquiring those data from the Internet. We need a handy tool.  \n> Life is short, you need Python.\n\nPython is really a powerful and easy-learning programming language. Everyone can handle it in a short time. It has simple syntax which is very readable, and there is an active community to support its development. Many geniuses have wrote their libraries for specifical problems. All we need to do is to `import` their libraries, use the functions they built for us. In a word, you need python and you will not regret to learn it.\n\nPython is just like designed to bulid web crawlers, coding in python is a relaxing thing.  Lots of libraries are bulit for crawlers, such as BeautifulSoup, lxml, requests, selenium, PyQuery, Urlib, regular expression, etc. I've used most of them. As far as I'm concerned, the following three libraries are most helpful:\n\n- requests\n- lxml\n- regular expression\n\n**requests** is used to send a request to a server and get a webpage source, **lxml** and **regular expression** are used to parse the page source. If you choose Chrome as your browser like me, it will be very easy to get the xpath of an element or a lable for **lxml** to locate. \n\nLastly, **requests** and **lxml** are third-party libraries, you need to install them first:\n\n```python\npip install requests\npip install lxml\n```\n\n> P.S. The series of tutorials is based on python3, and multiprocessing(A tech can help accelerate your crawler which I'll talk about in another tutorial) is much easier to accomplish in python3 than python2.\n> So, download python3 and start your coding.","source":"_posts/2018-09-11-CrawlerTutorial1_en.md","raw":"---\ntitle: 'Crawler Tutorial-1：Basic Structure of a Web Page'\ndate: 2018-09-11\ncategories: Crawler\ntags: [Crawler, Python, English]\n---\n\nIn this era of information, everyone should notice the value of information. Wherever there is information, there is also treasure and success! If you can build your own web crawler, it will be easier for you to acquire the huge treasure in the world of Internet.  \n\nI'm a beginner in the field of web crawler. The purpose of this blog is to record my learning and hope these articles could also help you to learn web crawler. My English is not very good, so it would be appreciated if you could point out my grammar mistakes.\n\n# The truth of a web page\n\nLet us open a website to have a look. It may look like this:\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png)\nWith an elegant format design and some pictures.\n\n<!-- more -->\n\nActually, when you right-click the web page and choose `View Page Source`(or something like this), you'll get these stuff:\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png)\n\nIt looks like some kind of programming language, doesn't it? We call it HTML(HyperText Markup Language), as you see, it's a kind of markup language. Except HTML, a web page also contains CSS and JavaScript. They work together to build the web page what we usually see. We won't go deep into the connections among them. \n\nAnyway, when we right-click the web page we can get its source code, and we'll obtain the data we want from the source code. Basically, every useful content is included in labels like `<div>...</div>，<li>...</li>`, and labels contains attributes like `href=\"http://www.gakki.cute.com\", class=\"Gakki\"`, or texts like `>Gakki is my wife<`. These links or texts contained in the labels are usually what we want to download from websites.\n\n# Tools\n\nFor the sake of acquiring those data from the Internet. We need a handy tool.  \n> Life is short, you need Python.\n\nPython is really a powerful and easy-learning programming language. Everyone can handle it in a short time. It has simple syntax which is very readable, and there is an active community to support its development. Many geniuses have wrote their libraries for specifical problems. All we need to do is to `import` their libraries, use the functions they built for us. In a word, you need python and you will not regret to learn it.\n\nPython is just like designed to bulid web crawlers, coding in python is a relaxing thing.  Lots of libraries are bulit for crawlers, such as BeautifulSoup, lxml, requests, selenium, PyQuery, Urlib, regular expression, etc. I've used most of them. As far as I'm concerned, the following three libraries are most helpful:\n\n- requests\n- lxml\n- regular expression\n\n**requests** is used to send a request to a server and get a webpage source, **lxml** and **regular expression** are used to parse the page source. If you choose Chrome as your browser like me, it will be very easy to get the xpath of an element or a lable for **lxml** to locate. \n\nLastly, **requests** and **lxml** are third-party libraries, you need to install them first:\n\n```python\npip install requests\npip install lxml\n```\n\n> P.S. The series of tutorials is based on python3, and multiprocessing(A tech can help accelerate your crawler which I'll talk about in another tutorial) is much easier to accomplish in python3 than python2.\n> So, download python3 and start your coding.","slug":"2018-09-11-CrawlerTutorial1_en","published":1,"updated":"2019-08-15T11:23:58.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzcljg1t0000jy74xsekhigl","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p>In this era of information, everyone should notice the value of information. Wherever there is information, there is also treasure and success! If you can build your own web crawler, it will be easier for you to acquire the huge treasure in the world of Internet.</p><p>I’m a beginner in the field of web crawler. The purpose of this blog is to record my learning and hope these articles could also help you to learn web crawler. My English is not very good, so it would be appreciated if you could point out my grammar mistakes.</p><h1 id=\"The-truth-of-a-web-page\"><a href=\"#The-truth-of-a-web-page\" class=\"headerlink\" title=\"The truth of a web page\"></a>The truth of a web page</h1><p>Let us open a website to have a look. It may look like this:<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png\" alt><br>With an elegant format design and some pictures.</p><a id=\"more\"></a><p>Actually, when you right-click the web page and choose <code>View Page Source</code>(or something like this), you’ll get these stuff:<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png\" alt></p><p>It looks like some kind of programming language, doesn’t it? We call it HTML(HyperText Markup Language), as you see, it’s a kind of markup language. Except HTML, a web page also contains CSS and JavaScript. They work together to build the web page what we usually see. We won’t go deep into the connections among them.</p><p>Anyway, when we right-click the web page we can get its source code, and we’ll obtain the data we want from the source code. Basically, every useful content is included in labels like <code>&lt;div&gt;...&lt;/div&gt;，&lt;li&gt;...&lt;/li&gt;</code>, and labels contains attributes like <code>href=&quot;http://www.gakki.cute.com&quot;, class=&quot;Gakki&quot;</code>, or texts like <code>&gt;Gakki is my wife&lt;</code>. These links or texts contained in the labels are usually what we want to download from websites.</p><h1 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h1><p>For the sake of acquiring those data from the Internet. We need a handy tool.</p><blockquote><p>Life is short, you need Python.</p></blockquote><p>Python is really a powerful and easy-learning programming language. Everyone can handle it in a short time. It has simple syntax which is very readable, and there is an active community to support its development. Many geniuses have wrote their libraries for specifical problems. All we need to do is to <code>import</code> their libraries, use the functions they built for us. In a word, you need python and you will not regret to learn it.</p><p>Python is just like designed to bulid web crawlers, coding in python is a relaxing thing. Lots of libraries are bulit for crawlers, such as BeautifulSoup, lxml, requests, selenium, PyQuery, Urlib, regular expression, etc. I’ve used most of them. As far as I’m concerned, the following three libraries are most helpful:</p><ul><li>requests</li><li>lxml</li><li>regular expression</li></ul><p><strong>requests</strong> is used to send a request to a server and get a webpage source, <strong>lxml</strong> and <strong>regular expression</strong> are used to parse the page source. If you choose Chrome as your browser like me, it will be very easy to get the xpath of an element or a lable for <strong>lxml</strong> to locate.</p><p>Lastly, <strong>requests</strong> and <strong>lxml</strong> are third-party libraries, you need to install them first:</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install lxml</span><br></pre></td></tr></table></figure><blockquote><p>P.S. The series of tutorials is based on python3, and multiprocessing(A tech can help accelerate your crawler which I’ll talk about in another tutorial) is much easier to accomplish in python3 than python2.<br>So, download python3 and start your coding.</p></blockquote><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p>In this era of information, everyone should notice the value of information. Wherever there is information, there is also treasure and success! If you can build your own web crawler, it will be easier for you to acquire the huge treasure in the world of Internet.</p><p>I’m a beginner in the field of web crawler. The purpose of this blog is to record my learning and hope these articles could also help you to learn web crawler. My English is not very good, so it would be appreciated if you could point out my grammar mistakes.</p><h1 id=\"The-truth-of-a-web-page\"><a href=\"#The-truth-of-a-web-page\" class=\"headerlink\" title=\"The truth of a web page\"></a>The truth of a web page</h1><p>Let us open a website to have a look. It may look like this:<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png\" alt><br>With an elegant format design and some pictures.</p>","more":"<p>Actually, when you right-click the web page and choose <code>View Page Source</code>(or something like this), you’ll get these stuff:<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png\" alt></p><p>It looks like some kind of programming language, doesn’t it? We call it HTML(HyperText Markup Language), as you see, it’s a kind of markup language. Except HTML, a web page also contains CSS and JavaScript. They work together to build the web page what we usually see. We won’t go deep into the connections among them.</p><p>Anyway, when we right-click the web page we can get its source code, and we’ll obtain the data we want from the source code. Basically, every useful content is included in labels like <code>&lt;div&gt;...&lt;/div&gt;，&lt;li&gt;...&lt;/li&gt;</code>, and labels contains attributes like <code>href=&quot;http://www.gakki.cute.com&quot;, class=&quot;Gakki&quot;</code>, or texts like <code>&gt;Gakki is my wife&lt;</code>. These links or texts contained in the labels are usually what we want to download from websites.</p><h1 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h1><p>For the sake of acquiring those data from the Internet. We need a handy tool.</p><blockquote><p>Life is short, you need Python.</p></blockquote><p>Python is really a powerful and easy-learning programming language. Everyone can handle it in a short time. It has simple syntax which is very readable, and there is an active community to support its development. Many geniuses have wrote their libraries for specifical problems. All we need to do is to <code>import</code> their libraries, use the functions they built for us. In a word, you need python and you will not regret to learn it.</p><p>Python is just like designed to bulid web crawlers, coding in python is a relaxing thing. Lots of libraries are bulit for crawlers, such as BeautifulSoup, lxml, requests, selenium, PyQuery, Urlib, regular expression, etc. I’ve used most of them. As far as I’m concerned, the following three libraries are most helpful:</p><ul><li>requests</li><li>lxml</li><li>regular expression</li></ul><p><strong>requests</strong> is used to send a request to a server and get a webpage source, <strong>lxml</strong> and <strong>regular expression</strong> are used to parse the page source. If you choose Chrome as your browser like me, it will be very easy to get the xpath of an element or a lable for <strong>lxml</strong> to locate.</p><p>Lastly, <strong>requests</strong> and <strong>lxml</strong> are third-party libraries, you need to install them first:</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install lxml</span><br></pre></td></tr></table></figure><blockquote><p>P.S. The series of tutorials is based on python3, and multiprocessing(A tech can help accelerate your crawler which I’ll talk about in another tutorial) is much easier to accomplish in python3 than python2.<br>So, download python3 and start your coding.</p></blockquote><!-- rebuild by neat -->"},{"title":"爬虫教程一：网页的基本结构","date":"2018-09-10T15:00:00.000Z","_content":"\n网上全是想要的数据，亦或是美图，甚至是教育片，想要收藏进硬盘，中饱私囊。奈何没有适合的手段，那么爬虫就是为你量身定做的利器了。自己也是走了一些弯路，学会了点皮毛。觉得爬虫确实是个好东西，于是就把一些心得写在这里，希望能帮助到有需要的人。\n\n# 网页的真实面目\n\n鼠标随手点开一个网页，恩～？！它是这样的：\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png)\n整齐的文字排版，精美的图片，让我们眼花缭乱。  \n\n<!-- more -->\n\n实际上鼠标右击，检查源代码会发现，真是情况是这样的：\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png)\n看起来像不像一串代码？这就是书写网页的语言HTML了。当然除了HTML, 一同渲染网页的还有CSS和JavaScript。在这里先不深入了，总之浏览器里右击检查源代码就能褪去网页的外衣，一窥其本貌。我们后期就靠着分析这源码页面来爬取想要的内容。\n\n在HTML中基本上实质内容都被`<div>...</div>，<li>...</li>`这样的标签包围着，标签里面又有着`href=\"http://www.gakki.cute.com\"，class=\"Gakki\"`之类的属性，或者包含着`>Gakki is my wife<`这样的文本。我们要爬取的也基本就是这些隐藏在标签中的链接和文本了。\n\n# 工具\n\n有米之炊无巧妇难为，要把资源装进包，趁手利器不可少。  \n>人生苦短,我用 Python。 \n\n作为如今最火的语言之一，不得不说，python确实牛逼。首先语法非常简洁明了，其次社区火爆，各种第三方库的支持，好多实现大神们早已写好，你只要`import`一下就足够了。网上关于python的教程很多，大家可以自行查阅，学完就知道了，真的非常方便。  \n\n在爬虫领域，python就像是被设计用来干这差事的，用起来十分顺手。爬虫相关的库有BeautifulSoup，lxml，requests，selenium，PyQuery，Urlib，正则...各种各种。我基本上都多多少少都接触过，用来用去，觉得还是这三件套效率最高:\n\n- requests\n- lxml\n- 正则 \n\nrequests用来模拟浏览器向服务器发出请求获取网页，lxml和正则用来解析网页。如果你用的浏览器是chrome，那么与lxml的xpath语法配合起来就是开挂。哦，忘了说前两个是python的第三方库，需pip安装：\n\n```python\npip install requests\npip install lxml\n```\n\n> P.S. 整个教程是基于python3的，后面的多进程用python3来写方便很多:)，所以一起用python3吧！\n\n","source":"_posts/2018-09-11-CrawlerTutorial1_zh.md","raw":"---\ntitle: '爬虫教程一：网页的基本结构'\ncategories: Crawler\ndate: 2018-09-11\ntags: [Crawler, Python, Chinese]\n---\n\n网上全是想要的数据，亦或是美图，甚至是教育片，想要收藏进硬盘，中饱私囊。奈何没有适合的手段，那么爬虫就是为你量身定做的利器了。自己也是走了一些弯路，学会了点皮毛。觉得爬虫确实是个好东西，于是就把一些心得写在这里，希望能帮助到有需要的人。\n\n# 网页的真实面目\n\n鼠标随手点开一个网页，恩～？！它是这样的：\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png)\n整齐的文字排版，精美的图片，让我们眼花缭乱。  \n\n<!-- more -->\n\n实际上鼠标右击，检查源代码会发现，真是情况是这样的：\n![](https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png)\n看起来像不像一串代码？这就是书写网页的语言HTML了。当然除了HTML, 一同渲染网页的还有CSS和JavaScript。在这里先不深入了，总之浏览器里右击检查源代码就能褪去网页的外衣，一窥其本貌。我们后期就靠着分析这源码页面来爬取想要的内容。\n\n在HTML中基本上实质内容都被`<div>...</div>，<li>...</li>`这样的标签包围着，标签里面又有着`href=\"http://www.gakki.cute.com\"，class=\"Gakki\"`之类的属性，或者包含着`>Gakki is my wife<`这样的文本。我们要爬取的也基本就是这些隐藏在标签中的链接和文本了。\n\n# 工具\n\n有米之炊无巧妇难为，要把资源装进包，趁手利器不可少。  \n>人生苦短,我用 Python。 \n\n作为如今最火的语言之一，不得不说，python确实牛逼。首先语法非常简洁明了，其次社区火爆，各种第三方库的支持，好多实现大神们早已写好，你只要`import`一下就足够了。网上关于python的教程很多，大家可以自行查阅，学完就知道了，真的非常方便。  \n\n在爬虫领域，python就像是被设计用来干这差事的，用起来十分顺手。爬虫相关的库有BeautifulSoup，lxml，requests，selenium，PyQuery，Urlib，正则...各种各种。我基本上都多多少少都接触过，用来用去，觉得还是这三件套效率最高:\n\n- requests\n- lxml\n- 正则 \n\nrequests用来模拟浏览器向服务器发出请求获取网页，lxml和正则用来解析网页。如果你用的浏览器是chrome，那么与lxml的xpath语法配合起来就是开挂。哦，忘了说前两个是python的第三方库，需pip安装：\n\n```python\npip install requests\npip install lxml\n```\n\n> P.S. 整个教程是基于python3的，后面的多进程用python3来写方便很多:)，所以一起用python3吧！\n\n","slug":"2018-09-11-CrawlerTutorial1_zh","published":1,"updated":"2019-08-15T11:23:58.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzcljg200002jy74ngqr4wsw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p>网上全是想要的数据，亦或是美图，甚至是教育片，想要收藏进硬盘，中饱私囊。奈何没有适合的手段，那么爬虫就是为你量身定做的利器了。自己也是走了一些弯路，学会了点皮毛。觉得爬虫确实是个好东西，于是就把一些心得写在这里，希望能帮助到有需要的人。</p><h1 id=\"网页的真实面目\"><a href=\"#网页的真实面目\" class=\"headerlink\" title=\"网页的真实面目\"></a>网页的真实面目</h1><p>鼠标随手点开一个网页，恩～？！它是这样的：<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png\" alt><br>整齐的文字排版，精美的图片，让我们眼花缭乱。</p><a id=\"more\"></a><p>实际上鼠标右击，检查源代码会发现，真是情况是这样的：<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png\" alt><br>看起来像不像一串代码？这就是书写网页的语言HTML了。当然除了HTML, 一同渲染网页的还有CSS和JavaScript。在这里先不深入了，总之浏览器里右击检查源代码就能褪去网页的外衣，一窥其本貌。我们后期就靠着分析这源码页面来爬取想要的内容。</p><p>在HTML中基本上实质内容都被<code>&lt;div&gt;...&lt;/div&gt;，&lt;li&gt;...&lt;/li&gt;</code>这样的标签包围着，标签里面又有着<code>href=&quot;http://www.gakki.cute.com&quot;，class=&quot;Gakki&quot;</code>之类的属性，或者包含着<code>&gt;Gakki is my wife&lt;</code>这样的文本。我们要爬取的也基本就是这些隐藏在标签中的链接和文本了。</p><h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><p>有米之炊无巧妇难为，要把资源装进包，趁手利器不可少。</p><blockquote><p>人生苦短,我用 Python。</p></blockquote><p>作为如今最火的语言之一，不得不说，python确实牛逼。首先语法非常简洁明了，其次社区火爆，各种第三方库的支持，好多实现大神们早已写好，你只要<code>import</code>一下就足够了。网上关于python的教程很多，大家可以自行查阅，学完就知道了，真的非常方便。</p><p>在爬虫领域，python就像是被设计用来干这差事的，用起来十分顺手。爬虫相关的库有BeautifulSoup，lxml，requests，selenium，PyQuery，Urlib，正则…各种各种。我基本上都多多少少都接触过，用来用去，觉得还是这三件套效率最高:</p><ul><li>requests</li><li>lxml</li><li>正则</li></ul><p>requests用来模拟浏览器向服务器发出请求获取网页，lxml和正则用来解析网页。如果你用的浏览器是chrome，那么与lxml的xpath语法配合起来就是开挂。哦，忘了说前两个是python的第三方库，需pip安装：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install lxml</span><br></pre></td></tr></table></figure><blockquote><p>P.S. 整个教程是基于python3的，后面的多进程用python3来写方便很多:)，所以一起用python3吧！</p></blockquote><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p>网上全是想要的数据，亦或是美图，甚至是教育片，想要收藏进硬盘，中饱私囊。奈何没有适合的手段，那么爬虫就是为你量身定做的利器了。自己也是走了一些弯路，学会了点皮毛。觉得爬虫确实是个好东西，于是就把一些心得写在这里，希望能帮助到有需要的人。</p><h1 id=\"网页的真实面目\"><a href=\"#网页的真实面目\" class=\"headerlink\" title=\"网页的真实面目\"></a>网页的真实面目</h1><p>鼠标随手点开一个网页，恩～？！它是这样的：<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_1.png\" alt><br>整齐的文字排版，精美的图片，让我们眼花缭乱。</p>","more":"<p>实际上鼠标右击，检查源代码会发现，真是情况是这样的：<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/crawler_tutorial1_2.png\" alt><br>看起来像不像一串代码？这就是书写网页的语言HTML了。当然除了HTML, 一同渲染网页的还有CSS和JavaScript。在这里先不深入了，总之浏览器里右击检查源代码就能褪去网页的外衣，一窥其本貌。我们后期就靠着分析这源码页面来爬取想要的内容。</p><p>在HTML中基本上实质内容都被<code>&lt;div&gt;...&lt;/div&gt;，&lt;li&gt;...&lt;/li&gt;</code>这样的标签包围着，标签里面又有着<code>href=&quot;http://www.gakki.cute.com&quot;，class=&quot;Gakki&quot;</code>之类的属性，或者包含着<code>&gt;Gakki is my wife&lt;</code>这样的文本。我们要爬取的也基本就是这些隐藏在标签中的链接和文本了。</p><h1 id=\"工具\"><a href=\"#工具\" class=\"headerlink\" title=\"工具\"></a>工具</h1><p>有米之炊无巧妇难为，要把资源装进包，趁手利器不可少。</p><blockquote><p>人生苦短,我用 Python。</p></blockquote><p>作为如今最火的语言之一，不得不说，python确实牛逼。首先语法非常简洁明了，其次社区火爆，各种第三方库的支持，好多实现大神们早已写好，你只要<code>import</code>一下就足够了。网上关于python的教程很多，大家可以自行查阅，学完就知道了，真的非常方便。</p><p>在爬虫领域，python就像是被设计用来干这差事的，用起来十分顺手。爬虫相关的库有BeautifulSoup，lxml，requests，selenium，PyQuery，Urlib，正则…各种各种。我基本上都多多少少都接触过，用来用去，觉得还是这三件套效率最高:</p><ul><li>requests</li><li>lxml</li><li>正则</li></ul><p>requests用来模拟浏览器向服务器发出请求获取网页，lxml和正则用来解析网页。如果你用的浏览器是chrome，那么与lxml的xpath语法配合起来就是开挂。哦，忘了说前两个是python的第三方库，需pip安装：</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install requests</span><br><span class=\"line\">pip install lxml</span><br></pre></td></tr></table></figure><blockquote><p>P.S. 整个教程是基于python3的，后面的多进程用python3来写方便很多:)，所以一起用python3吧！</p></blockquote><!-- rebuild by neat -->"},{"title":"Uploaded Some Pics I Took","date":"2018-09-15T15:00:00.000Z","photos":["https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.08.14-UploadedSomePic%EF%BC%91.jpg","https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.08.27-UploadedSomePic%EF%BC%92.jpg","https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.08.37-UploadedSomePic%EF%BC%93.jpg","https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.10.37-UploadedSomePic%EF%BC%94.jpg","https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.11.11-UploadedSomePic%EF%BC%95.jpg"],"_content":"\nPhoto by @S-W-K","source":"_posts/2018-09-16-UploadedSomePics.md","raw":"---\ntitle: 'Uploaded Some Pics I Took'\ncategories: Photography\ndate: 2018-09-16\ntags: [Photography]\nphotos:\n- https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.08.14-UploadedSomePic%EF%BC%91.jpg\n- https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.08.27-UploadedSomePic%EF%BC%92.jpg\n- https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.08.37-UploadedSomePic%EF%BC%93.jpg\n- https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.10.37-UploadedSomePic%EF%BC%94.jpg\n- https://raw.githubusercontent.com/S-W-K/Images/master/img/2018-09-16.11.11.11-UploadedSomePic%EF%BC%95.jpg\n---\n\nPhoto by @S-W-K","slug":"2018-09-16-UploadedSomePics","published":1,"updated":"2019-08-15T11:23:58.013Z","comments":1,"layout":"post","link":"","_id":"cjzcljg250006jy7476zcnu90","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p>Photo by @S-W-K</p><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"","more":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><p>Photo by @S-W-K</p><!-- rebuild by neat -->"},{"title":"爬虫教程二：正则表达式","date":"2018-09-17T15:00:00.000Z","_content":"\n# 了解正则表达式　\n\n> 正则表达式，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。　(百度百科)  \n\n正则表达式，说白了就是一种匹配规则，它规定的特定的字符可以匹配特定的东西。就像给事物分类一样，给了一个类名，就能归纳出同一类的东西。只不过正则的语法系统非常复杂，所以精通正则的人基本上可以在网页中大海捞针了。对于初学者来说，没必要硬记它的表达，先过一遍它里面什么就行，日后对照着正则表达式的表，边看边写，慢慢就记住了。  \nPython自带的re模块，就提供了对正则表达式的支持，下面就让我们实践出真理，边做边学。\n\n<!-- more -->\n\n# 正则表达式的语法\n\n## 正则总结表\n\n此表出自CSDN，详细地总结了python支持的正则的语法规则，大家先大概看一遍，后面我们再来慢慢熟悉。\n![RegularExpression.png](https://raw.githubusercontent.com/S-W-K/Images/master/img/RegularExpression.png)\n\n## Python的re模块\n\n1. re.match(pattern, string, flags=0)  \n\n   match()方法从字符串string的开头开始匹配pattern，匹配成功返回一个Match对象，否则便返回None。至于flags参数之后再说。\n\n   ```python\n   import re\n   string = 'Who is more attractive, Gakki or Satomi?'\n   r = re.match('(\\S+) (\\S+)',string)\n   print(r)\n   # <_sre.SRE_Match object; span=(0, 6), match='Who is'>\n   print(r.group())\n   # Who is\n   print(r.group(1))\n   # Who\n   print(r.group(2))\n   # is\n   ```\n\n   `\\S`匹配非空字符,`+`表示匹配前一个字符一次或一次以上。match()是从字符串开头开始匹配的，所以第一个非空字符为‘W’，因为有`+`，所以继续往后匹配，匹配到' '(空字符)的时候，第一个`\\S+`不再匹配了，匹配完空格之后，第二个`\\S+`继续匹配非空字符，直到遇见' '为止，匹配结束，返回Match对象。  \n   接下来如何从Match对象中取出匹配结果呢？答案就是group()方法。group()或者group(0)获取整个表达式的匹配结果，group(1)获取表达式中第一个括号的结果，group(2)获得表达式中第二个括号的结果，group(n)就是获取第n个括号的结果了。如果group()方法访问的结果不存在，就会报错`IndexError: no such group`。\n\n2. re.search(pattern, string, flags=0)\n\n   search()的用法和match()基本一致，唯一的不同就是search会扫描整个string，从符合pattern的位置开始匹配，而match()只从string的开头开始匹配，如果开头不符合pattern的表达式的话直接返回None。  \n\n   ```python\n   import re\n   string = 'Who is more attractive, Gakki or Satomi?'\n   r = re.match('(\\S+) or (\\S+)',string)\n   print(r)\n   # <_sre.SRE_Match object; span=(24, 40), match='Gakki or Satomi?'>\n   print(r.group())\n   # Gakki or Satomi?\n   print(r.group(1))\n   # Gakki\n   print(r.group(2))\n   # Satomi?\n   r = re.match('(\\S+) or (\\S+)',string)\n   print(r)\n   # None\n   ```\n\n3. re.findall(pattern, string, flags=0)\n\n   前面的match(),search()都只会找到第一个符合pattern的结果，只返回一个结果。而findall()则会找出所有符合pattern的结果，以列表的形式返回。\n\n   ```python\n   import re\n   string = '1,2,3,a,b,c'\n   r = re.findall('\\d',string)\n   print(r)\n   # ['1', '2', '3']\n   ```\n\n4. re.finditer(pattern, string, flags=0)\n\n   用法与findall()一样，只不过返回的是所有结果(Match对象)的迭代器(generator)。\n\n   ```python\n   import re\n   string = '1,2,3,a,b,c'\n   r = re.finditer('\\d',string)\n   print(r)\n   # <callable_iterator object at 0x7f586660ad68>\n   for i in r:\n   \tprint(i.group())\n   # 1\n   # 2\n   # 3\n   ```\n\n5. re.sub(pattern, repl, string, count=0, flags=0)\n\n   pattern在string中匹配到的结果，以repl来替换，count指定替换的次数,默认为替换全部。\n\n   ```python\n   import re\n   string = 'xxx is so cute!'\n   r = re.sub('\\S+','Gakki',string,1)\n   print(r)\n   # Gakki is so cute!\n   ```\n\n6. re.split(pattern, string, maxsplit=0, flags=0)\n\n   以匹配到pattern的字符切割字符串，返回列表。maxsplit指定分割次数，默认为分割全部。\n\n   ```python\n   import re\n   string = 'IsiharaxSatomixgaxkawaii!'\n   r = re.split('x',string)\n   print(r)\n   # ['Isihara', 'Satomi', 'ga', 'kawaii!']\n   ```\n\n7. re.compile(pattern, flags=0)\n\n   compile()方法用于编译正则表达式，生成一个正则表达式对象，供上述方法调用。当一个pattern被反复利用时，用compile()编译好更方便。  \n   然后说一下flags这个参数，前面的方法中也出现了，一般默认不写就行，但是有特殊要求的话，可以指定,具体选项如下：\n\n   - re.S(DOTALL): 匹配任意字符，包括换行符'\\n'\n   - re.I(IGNORECASE): 忽略大小写\n   - re.M(MULTILINE): 多行模式，改变'^'和'$'的行为（参见总结表）\n   - re.L(LOCALE): 使预定字符类 \\w \\W \\b \\B \\s \\S 取决于当前区域设定\n   - re.U(UNICODE): 使预定字符类 \\w \\W \\b \\B \\s \\S \\d \\D 取决于unicode定义的字符属性\n   - re.X(VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。   \n\n    ```python\n    import re\n    string = '''\n    Gakki is always selected into MOST IDEAL GIRLFRIEND RANKING.\n    Satomi is always selected into MOST IDEAL GIRLFRIEND RANKING.\n    '''\n    pattern = re.compile('(\\S+) is')\n    r = pattern.findall(string)\n    print(r)\n    # ['Gakki', 'Satomi']\n    ```\n\n    除了上面这种调用方法，pattern还可以作为search(),find()...的参数被调用。\n\n    ```python\n    import re\n    string = \"In according to unofficial reports, many programmers claims that they are Gakki's husbands.\"\n    pattern = re.compile('gakki',re.I)\n    r = re.search(pattern,string)\n    print(r.group())\n    # Gakki\n    ```\n\n","source":"_posts/2018-09-18-CrawlerTutorial2_zh.md","raw":"---\ntitle: '爬虫教程二：正则表达式'\ncategories: Crawler\ndate: 2018-09-18\ntags: [Crawler, Python, Chinese]\n---\n\n# 了解正则表达式　\n\n> 正则表达式，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。　(百度百科)  \n\n正则表达式，说白了就是一种匹配规则，它规定的特定的字符可以匹配特定的东西。就像给事物分类一样，给了一个类名，就能归纳出同一类的东西。只不过正则的语法系统非常复杂，所以精通正则的人基本上可以在网页中大海捞针了。对于初学者来说，没必要硬记它的表达，先过一遍它里面什么就行，日后对照着正则表达式的表，边看边写，慢慢就记住了。  \nPython自带的re模块，就提供了对正则表达式的支持，下面就让我们实践出真理，边做边学。\n\n<!-- more -->\n\n# 正则表达式的语法\n\n## 正则总结表\n\n此表出自CSDN，详细地总结了python支持的正则的语法规则，大家先大概看一遍，后面我们再来慢慢熟悉。\n![RegularExpression.png](https://raw.githubusercontent.com/S-W-K/Images/master/img/RegularExpression.png)\n\n## Python的re模块\n\n1. re.match(pattern, string, flags=0)  \n\n   match()方法从字符串string的开头开始匹配pattern，匹配成功返回一个Match对象，否则便返回None。至于flags参数之后再说。\n\n   ```python\n   import re\n   string = 'Who is more attractive, Gakki or Satomi?'\n   r = re.match('(\\S+) (\\S+)',string)\n   print(r)\n   # <_sre.SRE_Match object; span=(0, 6), match='Who is'>\n   print(r.group())\n   # Who is\n   print(r.group(1))\n   # Who\n   print(r.group(2))\n   # is\n   ```\n\n   `\\S`匹配非空字符,`+`表示匹配前一个字符一次或一次以上。match()是从字符串开头开始匹配的，所以第一个非空字符为‘W’，因为有`+`，所以继续往后匹配，匹配到' '(空字符)的时候，第一个`\\S+`不再匹配了，匹配完空格之后，第二个`\\S+`继续匹配非空字符，直到遇见' '为止，匹配结束，返回Match对象。  \n   接下来如何从Match对象中取出匹配结果呢？答案就是group()方法。group()或者group(0)获取整个表达式的匹配结果，group(1)获取表达式中第一个括号的结果，group(2)获得表达式中第二个括号的结果，group(n)就是获取第n个括号的结果了。如果group()方法访问的结果不存在，就会报错`IndexError: no such group`。\n\n2. re.search(pattern, string, flags=0)\n\n   search()的用法和match()基本一致，唯一的不同就是search会扫描整个string，从符合pattern的位置开始匹配，而match()只从string的开头开始匹配，如果开头不符合pattern的表达式的话直接返回None。  \n\n   ```python\n   import re\n   string = 'Who is more attractive, Gakki or Satomi?'\n   r = re.match('(\\S+) or (\\S+)',string)\n   print(r)\n   # <_sre.SRE_Match object; span=(24, 40), match='Gakki or Satomi?'>\n   print(r.group())\n   # Gakki or Satomi?\n   print(r.group(1))\n   # Gakki\n   print(r.group(2))\n   # Satomi?\n   r = re.match('(\\S+) or (\\S+)',string)\n   print(r)\n   # None\n   ```\n\n3. re.findall(pattern, string, flags=0)\n\n   前面的match(),search()都只会找到第一个符合pattern的结果，只返回一个结果。而findall()则会找出所有符合pattern的结果，以列表的形式返回。\n\n   ```python\n   import re\n   string = '1,2,3,a,b,c'\n   r = re.findall('\\d',string)\n   print(r)\n   # ['1', '2', '3']\n   ```\n\n4. re.finditer(pattern, string, flags=0)\n\n   用法与findall()一样，只不过返回的是所有结果(Match对象)的迭代器(generator)。\n\n   ```python\n   import re\n   string = '1,2,3,a,b,c'\n   r = re.finditer('\\d',string)\n   print(r)\n   # <callable_iterator object at 0x7f586660ad68>\n   for i in r:\n   \tprint(i.group())\n   # 1\n   # 2\n   # 3\n   ```\n\n5. re.sub(pattern, repl, string, count=0, flags=0)\n\n   pattern在string中匹配到的结果，以repl来替换，count指定替换的次数,默认为替换全部。\n\n   ```python\n   import re\n   string = 'xxx is so cute!'\n   r = re.sub('\\S+','Gakki',string,1)\n   print(r)\n   # Gakki is so cute!\n   ```\n\n6. re.split(pattern, string, maxsplit=0, flags=0)\n\n   以匹配到pattern的字符切割字符串，返回列表。maxsplit指定分割次数，默认为分割全部。\n\n   ```python\n   import re\n   string = 'IsiharaxSatomixgaxkawaii!'\n   r = re.split('x',string)\n   print(r)\n   # ['Isihara', 'Satomi', 'ga', 'kawaii!']\n   ```\n\n7. re.compile(pattern, flags=0)\n\n   compile()方法用于编译正则表达式，生成一个正则表达式对象，供上述方法调用。当一个pattern被反复利用时，用compile()编译好更方便。  \n   然后说一下flags这个参数，前面的方法中也出现了，一般默认不写就行，但是有特殊要求的话，可以指定,具体选项如下：\n\n   - re.S(DOTALL): 匹配任意字符，包括换行符'\\n'\n   - re.I(IGNORECASE): 忽略大小写\n   - re.M(MULTILINE): 多行模式，改变'^'和'$'的行为（参见总结表）\n   - re.L(LOCALE): 使预定字符类 \\w \\W \\b \\B \\s \\S 取决于当前区域设定\n   - re.U(UNICODE): 使预定字符类 \\w \\W \\b \\B \\s \\S \\d \\D 取决于unicode定义的字符属性\n   - re.X(VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。   \n\n    ```python\n    import re\n    string = '''\n    Gakki is always selected into MOST IDEAL GIRLFRIEND RANKING.\n    Satomi is always selected into MOST IDEAL GIRLFRIEND RANKING.\n    '''\n    pattern = re.compile('(\\S+) is')\n    r = pattern.findall(string)\n    print(r)\n    # ['Gakki', 'Satomi']\n    ```\n\n    除了上面这种调用方法，pattern还可以作为search(),find()...的参数被调用。\n\n    ```python\n    import re\n    string = \"In according to unofficial reports, many programmers claims that they are Gakki's husbands.\"\n    pattern = re.compile('gakki',re.I)\n    r = re.search(pattern,string)\n    print(r.group())\n    # Gakki\n    ```\n\n","slug":"2018-09-18-CrawlerTutorial2_zh","published":1,"updated":"2019-08-15T11:23:58.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzcljg270008jy74rnzdnxaw","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><h1 id=\"了解正则表达式\"><a href=\"#了解正则表达式\" class=\"headerlink\" title=\"了解正则表达式　\"></a>了解正则表达式</h1><blockquote><p>正则表达式，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。　(百度百科)</p></blockquote><p>正则表达式，说白了就是一种匹配规则，它规定的特定的字符可以匹配特定的东西。就像给事物分类一样，给了一个类名，就能归纳出同一类的东西。只不过正则的语法系统非常复杂，所以精通正则的人基本上可以在网页中大海捞针了。对于初学者来说，没必要硬记它的表达，先过一遍它里面什么就行，日后对照着正则表达式的表，边看边写，慢慢就记住了。<br>Python自带的re模块，就提供了对正则表达式的支持，下面就让我们实践出真理，边做边学。</p><a id=\"more\"></a><h1 id=\"正则表达式的语法\"><a href=\"#正则表达式的语法\" class=\"headerlink\" title=\"正则表达式的语法\"></a>正则表达式的语法</h1><h2 id=\"正则总结表\"><a href=\"#正则总结表\" class=\"headerlink\" title=\"正则总结表\"></a>正则总结表</h2><p>此表出自CSDN，详细地总结了python支持的正则的语法规则，大家先大概看一遍，后面我们再来慢慢熟悉。<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/RegularExpression.png\" alt=\"RegularExpression.png\"></p><h2 id=\"Python的re模块\"><a href=\"#Python的re模块\" class=\"headerlink\" title=\"Python的re模块\"></a>Python的re模块</h2><ol><li><p>re.match(pattern, string, flags=0)</p><p>match()方法从字符串string的开头开始匹配pattern，匹配成功返回一个Match对象，否则便返回None。至于flags参数之后再说。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'Who is more attractive, Gakki or Satomi?'</span></span><br><span class=\"line\">r = re.match(<span class=\"string\">'(\\S+) (\\S+)'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># &lt;_sre.SRE_Match object; span=(0, 6), match='Who is'&gt;</span></span><br><span class=\"line\">print(r.group())</span><br><span class=\"line\"><span class=\"comment\"># Who is</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"comment\"># Who</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># is</span></span><br></pre></td></tr></table></figure><p><code>\\S</code>匹配非空字符,<code>+</code>表示匹配前一个字符一次或一次以上。match()是从字符串开头开始匹配的，所以第一个非空字符为‘W’，因为有<code>+</code>，所以继续往后匹配，匹配到’ ‘(空字符)的时候，第一个<code>\\S+</code>不再匹配了，匹配完空格之后，第二个<code>\\S+</code>继续匹配非空字符，直到遇见’ ‘为止，匹配结束，返回Match对象。<br>接下来如何从Match对象中取出匹配结果呢？答案就是group()方法。group()或者group(0)获取整个表达式的匹配结果，group(1)获取表达式中第一个括号的结果，group(2)获得表达式中第二个括号的结果，group(n)就是获取第n个括号的结果了。如果group()方法访问的结果不存在，就会报错<code>IndexError: no such group</code>。</p></li><li><p>re.search(pattern, string, flags=0)</p><p>search()的用法和match()基本一致，唯一的不同就是search会扫描整个string，从符合pattern的位置开始匹配，而match()只从string的开头开始匹配，如果开头不符合pattern的表达式的话直接返回None。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'Who is more attractive, Gakki or Satomi?'</span></span><br><span class=\"line\">r = re.match(<span class=\"string\">'(\\S+) or (\\S+)'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># &lt;_sre.SRE_Match object; span=(24, 40), match='Gakki or Satomi?'&gt;</span></span><br><span class=\"line\">print(r.group())</span><br><span class=\"line\"><span class=\"comment\"># Gakki or Satomi?</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"comment\"># Gakki</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># Satomi?</span></span><br><span class=\"line\">r = re.match(<span class=\"string\">'(\\S+) or (\\S+)'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># None</span></span><br></pre></td></tr></table></figure></li><li><p>re.findall(pattern, string, flags=0)</p><p>前面的match(),search()都只会找到第一个符合pattern的结果，只返回一个结果。而findall()则会找出所有符合pattern的结果，以列表的形式返回。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'1,2,3,a,b,c'</span></span><br><span class=\"line\">r = re.findall(<span class=\"string\">'\\d'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># ['1', '2', '3']</span></span><br></pre></td></tr></table></figure></li><li><p>re.finditer(pattern, string, flags=0)</p><p>用法与findall()一样，只不过返回的是所有结果(Match对象)的迭代器(generator)。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'1,2,3,a,b,c'</span></span><br><span class=\"line\">r = re.finditer(<span class=\"string\">'\\d'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># &lt;callable_iterator object at 0x7f586660ad68&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> r:</span><br><span class=\"line\">\tprint(i.group())</span><br><span class=\"line\"><span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"comment\"># 2</span></span><br><span class=\"line\"><span class=\"comment\"># 3</span></span><br></pre></td></tr></table></figure></li><li><p>re.sub(pattern, repl, string, count=0, flags=0)</p><p>pattern在string中匹配到的结果，以repl来替换，count指定替换的次数,默认为替换全部。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'xxx is so cute!'</span></span><br><span class=\"line\">r = re.sub(<span class=\"string\">'\\S+'</span>,<span class=\"string\">'Gakki'</span>,string,<span class=\"number\">1</span>)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># Gakki is so cute!</span></span><br></pre></td></tr></table></figure></li><li><p>re.split(pattern, string, maxsplit=0, flags=0)</p><p>以匹配到pattern的字符切割字符串，返回列表。maxsplit指定分割次数，默认为分割全部。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'IsiharaxSatomixgaxkawaii!'</span></span><br><span class=\"line\">r = re.split(<span class=\"string\">'x'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># ['Isihara', 'Satomi', 'ga', 'kawaii!']</span></span><br></pre></td></tr></table></figure></li><li><p>re.compile(pattern, flags=0)</p><p>compile()方法用于编译正则表达式，生成一个正则表达式对象，供上述方法调用。当一个pattern被反复利用时，用compile()编译好更方便。<br>然后说一下flags这个参数，前面的方法中也出现了，一般默认不写就行，但是有特殊要求的话，可以指定,具体选项如下：</p><ul><li><p>re.S(DOTALL): 匹配任意字符，包括换行符’\\n’</p></li><li><p>re.I(IGNORECASE): 忽略大小写</p></li><li><p>re.M(MULTILINE): 多行模式，改变’^’和’$’的行为（参见总结表）</p></li><li><p>re.L(LOCALE): 使预定字符类 \\w \\W \\b \\B \\s \\S 取决于当前区域设定</p></li><li><p>re.U(UNICODE): 使预定字符类 \\w \\W \\b \\B \\s \\S \\d \\D 取决于unicode定义的字符属性</p></li><li><p>re.X(VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Gakki is always selected into MOST IDEAL GIRLFRIEND RANKING.</span></span><br><span class=\"line\"><span class=\"string\">Satomi is always selected into MOST IDEAL GIRLFRIEND RANKING.</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">pattern = re.compile(<span class=\"string\">'(\\S+) is'</span>)</span><br><span class=\"line\">r = pattern.findall(string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># ['Gakki', 'Satomi']</span></span><br></pre></td></tr></table></figure><p>除了上面这种调用方法，pattern还可以作为search(),find()…的参数被调用。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">\"In according to unofficial reports, many programmers claims that they are Gakki's husbands.\"</span></span><br><span class=\"line\">pattern = re.compile(<span class=\"string\">'gakki'</span>,re.I)</span><br><span class=\"line\">r = re.search(pattern,string)</span><br><span class=\"line\">print(r.group())</span><br><span class=\"line\"><span class=\"comment\"># Gakki</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><h1 id=\"了解正则表达式\"><a href=\"#了解正则表达式\" class=\"headerlink\" title=\"了解正则表达式　\"></a>了解正则表达式</h1><blockquote><p>正则表达式，又称规则表达式。（英语：Regular Expression，在代码中常简写为regex、regexp或RE），计算机科学的一个概念。正则表达式通常被用来检索、替换那些符合某个模式(规则)的文本。　(百度百科)</p></blockquote><p>正则表达式，说白了就是一种匹配规则，它规定的特定的字符可以匹配特定的东西。就像给事物分类一样，给了一个类名，就能归纳出同一类的东西。只不过正则的语法系统非常复杂，所以精通正则的人基本上可以在网页中大海捞针了。对于初学者来说，没必要硬记它的表达，先过一遍它里面什么就行，日后对照着正则表达式的表，边看边写，慢慢就记住了。<br>Python自带的re模块，就提供了对正则表达式的支持，下面就让我们实践出真理，边做边学。</p>","more":"<h1 id=\"正则表达式的语法\"><a href=\"#正则表达式的语法\" class=\"headerlink\" title=\"正则表达式的语法\"></a>正则表达式的语法</h1><h2 id=\"正则总结表\"><a href=\"#正则总结表\" class=\"headerlink\" title=\"正则总结表\"></a>正则总结表</h2><p>此表出自CSDN，详细地总结了python支持的正则的语法规则，大家先大概看一遍，后面我们再来慢慢熟悉。<br><img src=\"https://raw.githubusercontent.com/S-W-K/Images/master/img/RegularExpression.png\" alt=\"RegularExpression.png\"></p><h2 id=\"Python的re模块\"><a href=\"#Python的re模块\" class=\"headerlink\" title=\"Python的re模块\"></a>Python的re模块</h2><ol><li><p>re.match(pattern, string, flags=0)</p><p>match()方法从字符串string的开头开始匹配pattern，匹配成功返回一个Match对象，否则便返回None。至于flags参数之后再说。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'Who is more attractive, Gakki or Satomi?'</span></span><br><span class=\"line\">r = re.match(<span class=\"string\">'(\\S+) (\\S+)'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># &lt;_sre.SRE_Match object; span=(0, 6), match='Who is'&gt;</span></span><br><span class=\"line\">print(r.group())</span><br><span class=\"line\"><span class=\"comment\"># Who is</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"comment\"># Who</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># is</span></span><br></pre></td></tr></table></figure><p><code>\\S</code>匹配非空字符,<code>+</code>表示匹配前一个字符一次或一次以上。match()是从字符串开头开始匹配的，所以第一个非空字符为‘W’，因为有<code>+</code>，所以继续往后匹配，匹配到’ ‘(空字符)的时候，第一个<code>\\S+</code>不再匹配了，匹配完空格之后，第二个<code>\\S+</code>继续匹配非空字符，直到遇见’ ‘为止，匹配结束，返回Match对象。<br>接下来如何从Match对象中取出匹配结果呢？答案就是group()方法。group()或者group(0)获取整个表达式的匹配结果，group(1)获取表达式中第一个括号的结果，group(2)获得表达式中第二个括号的结果，group(n)就是获取第n个括号的结果了。如果group()方法访问的结果不存在，就会报错<code>IndexError: no such group</code>。</p></li><li><p>re.search(pattern, string, flags=0)</p><p>search()的用法和match()基本一致，唯一的不同就是search会扫描整个string，从符合pattern的位置开始匹配，而match()只从string的开头开始匹配，如果开头不符合pattern的表达式的话直接返回None。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'Who is more attractive, Gakki or Satomi?'</span></span><br><span class=\"line\">r = re.match(<span class=\"string\">'(\\S+) or (\\S+)'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># &lt;_sre.SRE_Match object; span=(24, 40), match='Gakki or Satomi?'&gt;</span></span><br><span class=\"line\">print(r.group())</span><br><span class=\"line\"><span class=\"comment\"># Gakki or Satomi?</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">1</span>))</span><br><span class=\"line\"><span class=\"comment\"># Gakki</span></span><br><span class=\"line\">print(r.group(<span class=\"number\">2</span>))</span><br><span class=\"line\"><span class=\"comment\"># Satomi?</span></span><br><span class=\"line\">r = re.match(<span class=\"string\">'(\\S+) or (\\S+)'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># None</span></span><br></pre></td></tr></table></figure></li><li><p>re.findall(pattern, string, flags=0)</p><p>前面的match(),search()都只会找到第一个符合pattern的结果，只返回一个结果。而findall()则会找出所有符合pattern的结果，以列表的形式返回。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'1,2,3,a,b,c'</span></span><br><span class=\"line\">r = re.findall(<span class=\"string\">'\\d'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># ['1', '2', '3']</span></span><br></pre></td></tr></table></figure></li><li><p>re.finditer(pattern, string, flags=0)</p><p>用法与findall()一样，只不过返回的是所有结果(Match对象)的迭代器(generator)。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'1,2,3,a,b,c'</span></span><br><span class=\"line\">r = re.finditer(<span class=\"string\">'\\d'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># &lt;callable_iterator object at 0x7f586660ad68&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> r:</span><br><span class=\"line\">\tprint(i.group())</span><br><span class=\"line\"><span class=\"comment\"># 1</span></span><br><span class=\"line\"><span class=\"comment\"># 2</span></span><br><span class=\"line\"><span class=\"comment\"># 3</span></span><br></pre></td></tr></table></figure></li><li><p>re.sub(pattern, repl, string, count=0, flags=0)</p><p>pattern在string中匹配到的结果，以repl来替换，count指定替换的次数,默认为替换全部。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'xxx is so cute!'</span></span><br><span class=\"line\">r = re.sub(<span class=\"string\">'\\S+'</span>,<span class=\"string\">'Gakki'</span>,string,<span class=\"number\">1</span>)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># Gakki is so cute!</span></span><br></pre></td></tr></table></figure></li><li><p>re.split(pattern, string, maxsplit=0, flags=0)</p><p>以匹配到pattern的字符切割字符串，返回列表。maxsplit指定分割次数，默认为分割全部。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'IsiharaxSatomixgaxkawaii!'</span></span><br><span class=\"line\">r = re.split(<span class=\"string\">'x'</span>,string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># ['Isihara', 'Satomi', 'ga', 'kawaii!']</span></span><br></pre></td></tr></table></figure></li><li><p>re.compile(pattern, flags=0)</p><p>compile()方法用于编译正则表达式，生成一个正则表达式对象，供上述方法调用。当一个pattern被反复利用时，用compile()编译好更方便。<br>然后说一下flags这个参数，前面的方法中也出现了，一般默认不写就行，但是有特殊要求的话，可以指定,具体选项如下：</p><ul><li><p>re.S(DOTALL): 匹配任意字符，包括换行符’\\n’</p></li><li><p>re.I(IGNORECASE): 忽略大小写</p></li><li><p>re.M(MULTILINE): 多行模式，改变’^’和’$’的行为（参见总结表）</p></li><li><p>re.L(LOCALE): 使预定字符类 \\w \\W \\b \\B \\s \\S 取决于当前区域设定</p></li><li><p>re.U(UNICODE): 使预定字符类 \\w \\W \\b \\B \\s \\S \\d \\D 取决于unicode定义的字符属性</p></li><li><p>re.X(VERBOSE): 详细模式。这个模式下正则表达式可以是多行，忽略空白字符，并可以加入注释。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">'''</span></span><br><span class=\"line\"><span class=\"string\">Gakki is always selected into MOST IDEAL GIRLFRIEND RANKING.</span></span><br><span class=\"line\"><span class=\"string\">Satomi is always selected into MOST IDEAL GIRLFRIEND RANKING.</span></span><br><span class=\"line\"><span class=\"string\">'''</span></span><br><span class=\"line\">pattern = re.compile(<span class=\"string\">'(\\S+) is'</span>)</span><br><span class=\"line\">r = pattern.findall(string)</span><br><span class=\"line\">print(r)</span><br><span class=\"line\"><span class=\"comment\"># ['Gakki', 'Satomi']</span></span><br></pre></td></tr></table></figure><p>除了上面这种调用方法，pattern还可以作为search(),find()…的参数被调用。</p><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">string = <span class=\"string\">\"In according to unofficial reports, many programmers claims that they are Gakki's husbands.\"</span></span><br><span class=\"line\">pattern = re.compile(<span class=\"string\">'gakki'</span>,re.I)</span><br><span class=\"line\">r = re.search(pattern,string)</span><br><span class=\"line\">print(r.group())</span><br><span class=\"line\"><span class=\"comment\"># Gakki</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><!-- rebuild by neat -->"},{"title":"JekyllでLive2Dを実装","date":"2019-07-28T15:00:00.000Z","_content":"\n# Live2D\n\n左下のこの子をどうやって生成したか？この記事で説明する．\n\n![](https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png)\n\n2次元のキャラクターに命を吹き込むこの偉大なるプロジェクトは[Live2D](https://github.com/EYHN/hexo-helper-live2d)．しかし，プロジェクトはHexo向けで，作者はJekyllでの実装方法を提供していない，どうしよう？！\n\n<!-- more -->\n\n# Jekyllで実装\n\n私はlazyな人なので，原理を究明してJekyllにコンパイルすることは〜，さすがにしない！ここで「バカ」な方法で解決する．\n\n作者がHexoでの実装方法を提供しているから，いっそうHexoでキャラクターをコンパイルして，キャラクターのコードを直接Jekyllに移植すればいいじゃん？JekyllでもHexoでも**静的**サイトジェネレータでしょう．最終的に，コンパイルの結果が出る．その結果から，キャラクターのコードを探し出すのは今回の要務．\n\n## Hexoをインストール\n\n```shell\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo s\n```\n\nはい！Hexoのウェブページが出たでしょう．オーケー，問題なし，いったんserverを閉じて，次に行こう．\n\n## Live2Dをインストール\n\n```shell\nnpm install --save hexo-helper-live2d\n```\n\n次に，以下のコードをHexoで生成したブログの`_config.xml`に追加する：\n\n```yaml\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: shizuku\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: true\n```\n\nひとまず，フレームワークは構築できた．Live2Dのファイルを[ダンロード](https://github.com/xiazeyu/live2d-widget-models)する必要がある．\n\n`git clone`した後，`live2d-widget-model-shizuku`下の`assets`にある内容（`assets`自体を含まない）を，すべてHexoの`blog`フォルダ下の`live2d_models/shizuku`フォルダ（新規に作って）にコピーする．ファイルのツリーはこうなる：\n\n- blog\n  - live2d_models\n    - shizuku\n      - moc, mtn, shizuku.model.json...\n\n## コードを抽出\n\nもう一回`hexo s`を実行して，shizukuちゃんでたでしょう．\n\n![](https://i.loli.net/2019/07/29/5d3dc78ede71a42521.png)\n\n問題なければ，`hexo g`でブログをコンパイルする．生成された`public`の中に，`live2dw`フォルダがあるはず．その後，`public`下の`index.html`を開いて，一番したのこの行を見つける：\n\n```html\n<script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/shizuku.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false});</script>\n```\n\nおめでとう！！！shizukuちゃんの本体をつかめた．最後に，`live2dw`フォルダをJekyllで生成したブログのフォルダに移動，shizukuちゃんの本体を`/_includes/_partials/footer.html`にコピーする．\n\n\n\n*終わり〜〜〜！*\n\n","source":"_posts/2019-07-29-Build-live2d_jpn.md","raw":"---\ntitle: JekyllでLive2Dを実装\ncategories: Web\ndate: 2019-07-29\ntags: [Web, Jekyll, Blog, Japanese,Live2D]\n---\n\n# Live2D\n\n左下のこの子をどうやって生成したか？この記事で説明する．\n\n![](https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png)\n\n2次元のキャラクターに命を吹き込むこの偉大なるプロジェクトは[Live2D](https://github.com/EYHN/hexo-helper-live2d)．しかし，プロジェクトはHexo向けで，作者はJekyllでの実装方法を提供していない，どうしよう？！\n\n<!-- more -->\n\n# Jekyllで実装\n\n私はlazyな人なので，原理を究明してJekyllにコンパイルすることは〜，さすがにしない！ここで「バカ」な方法で解決する．\n\n作者がHexoでの実装方法を提供しているから，いっそうHexoでキャラクターをコンパイルして，キャラクターのコードを直接Jekyllに移植すればいいじゃん？JekyllでもHexoでも**静的**サイトジェネレータでしょう．最終的に，コンパイルの結果が出る．その結果から，キャラクターのコードを探し出すのは今回の要務．\n\n## Hexoをインストール\n\n```shell\nnpm install hexo-cli -g\nhexo init blog\ncd blog\nnpm install\nhexo s\n```\n\nはい！Hexoのウェブページが出たでしょう．オーケー，問題なし，いったんserverを閉じて，次に行こう．\n\n## Live2Dをインストール\n\n```shell\nnpm install --save hexo-helper-live2d\n```\n\n次に，以下のコードをHexoで生成したブログの`_config.xml`に追加する：\n\n```yaml\nlive2d:\n  enable: true\n  scriptFrom: local\n  pluginRootPath: live2dw/\n  pluginJsPath: lib/\n  pluginModelPath: assets/\n  tagMode: false\n  debug: false\n  model:\n    use: shizuku\n  display:\n    position: right\n    width: 150\n    height: 300\n  mobile:\n    show: true\n```\n\nひとまず，フレームワークは構築できた．Live2Dのファイルを[ダンロード](https://github.com/xiazeyu/live2d-widget-models)する必要がある．\n\n`git clone`した後，`live2d-widget-model-shizuku`下の`assets`にある内容（`assets`自体を含まない）を，すべてHexoの`blog`フォルダ下の`live2d_models/shizuku`フォルダ（新規に作って）にコピーする．ファイルのツリーはこうなる：\n\n- blog\n  - live2d_models\n    - shizuku\n      - moc, mtn, shizuku.model.json...\n\n## コードを抽出\n\nもう一回`hexo s`を実行して，shizukuちゃんでたでしょう．\n\n![](https://i.loli.net/2019/07/29/5d3dc78ede71a42521.png)\n\n問題なければ，`hexo g`でブログをコンパイルする．生成された`public`の中に，`live2dw`フォルダがあるはず．その後，`public`下の`index.html`を開いて，一番したのこの行を見つける：\n\n```html\n<script src=\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"></script><script>L2Dwidget.init({\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":{\"jsonPath\":\"/live2dw/assets/shizuku.model.json\"},\"display\":{\"position\":\"right\",\"width\":150,\"height\":300},\"mobile\":{\"show\":true},\"log\":false});</script>\n```\n\nおめでとう！！！shizukuちゃんの本体をつかめた．最後に，`live2dw`フォルダをJekyllで生成したブログのフォルダに移動，shizukuちゃんの本体を`/_includes/_partials/footer.html`にコピーする．\n\n\n\n*終わり〜〜〜！*\n\n","slug":"2019-07-29-Build-live2d_jpn","published":1,"updated":"2019-08-15T11:23:58.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzcljg29000ajy740hcyghdf","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><h1 id=\"Live2D\"><a href=\"#Live2D\" class=\"headerlink\" title=\"Live2D\"></a>Live2D</h1><p>左下のこの子をどうやって生成したか？この記事で説明する．</p><p><img src=\"https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png\" alt></p><p>2次元のキャラクターに命を吹き込むこの偉大なるプロジェクトは<a href=\"https://github.com/EYHN/hexo-helper-live2d\" target=\"_blank\" rel=\"noopener\">Live2D</a>．しかし，プロジェクトはHexo向けで，作者はJekyllでの実装方法を提供していない，どうしよう？！</p><a id=\"more\"></a><h1 id=\"Jekyllで実装\"><a href=\"#Jekyllで実装\" class=\"headerlink\" title=\"Jekyllで実装\"></a>Jekyllで実装</h1><p>私はlazyな人なので，原理を究明してJekyllにコンパイルすることは〜，さすがにしない！ここで「バカ」な方法で解決する．</p><p>作者がHexoでの実装方法を提供しているから，いっそうHexoでキャラクターをコンパイルして，キャラクターのコードを直接Jekyllに移植すればいいじゃん？JekyllでもHexoでも<strong>静的</strong>サイトジェネレータでしょう．最終的に，コンパイルの結果が出る．その結果から，キャラクターのコードを探し出すのは今回の要務．</p><h2 id=\"Hexoをインストール\"><a href=\"#Hexoをインストール\" class=\"headerlink\" title=\"Hexoをインストール\"></a>Hexoをインストール</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure><p>はい！Hexoのウェブページが出たでしょう．オーケー，問題なし，いったんserverを閉じて，次に行こう．</p><h2 id=\"Live2Dをインストール\"><a href=\"#Live2Dをインストール\" class=\"headerlink\" title=\"Live2Dをインストール\"></a>Live2Dをインストール</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>次に，以下のコードをHexoで生成したブログの<code>_config.xml</code>に追加する：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\"><span class=\"attr\">  tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  debug:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  model:</span></span><br><span class=\"line\"><span class=\"attr\">    use:</span> <span class=\"string\">shizuku</span></span><br><span class=\"line\"><span class=\"attr\">  display:</span></span><br><span class=\"line\"><span class=\"attr\">    position:</span> <span class=\"string\">right</span></span><br><span class=\"line\"><span class=\"attr\">    width:</span> <span class=\"number\">150</span></span><br><span class=\"line\"><span class=\"attr\">    height:</span> <span class=\"number\">300</span></span><br><span class=\"line\"><span class=\"attr\">  mobile:</span></span><br><span class=\"line\"><span class=\"attr\">    show:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure><p>ひとまず，フレームワークは構築できた．Live2Dのファイルを<a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">ダンロード</a>する必要がある．</p><p><code>git clone</code>した後，<code>live2d-widget-model-shizuku</code>下の<code>assets</code>にある内容（<code>assets</code>自体を含まない）を，すべてHexoの<code>blog</code>フォルダ下の<code>live2d_models/shizuku</code>フォルダ（新規に作って）にコピーする．ファイルのツリーはこうなる：</p><ul><li>blog<ul><li>live2d_models<ul><li>shizuku<ul><li>moc, mtn, shizuku.model.json…</li></ul></li></ul></li></ul></li></ul><h2 id=\"コードを抽出\"><a href=\"#コードを抽出\" class=\"headerlink\" title=\"コードを抽出\"></a>コードを抽出</h2><p>もう一回<code>hexo s</code>を実行して，shizukuちゃんでたでしょう．</p><p><img src=\"https://i.loli.net/2019/07/29/5d3dc78ede71a42521.png\" alt></p><p>問題なければ，<code>hexo g</code>でブログをコンパイルする．生成された<code>public</code>の中に，<code>live2dw</code>フォルダがあるはず．その後，<code>public</code>下の<code>index.html</code>を開いて，一番したのこの行を見つける：</p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>L2Dwidget.init(&#123;\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":&#123;\"jsonPath\":\"/live2dw/assets/shizuku.model.json\"&#125;,\"display\":&#123;\"position\":\"right\",\"width\":150,\"height\":300&#125;,\"mobile\":&#123;\"show\":true&#125;,\"log\":false&#125;);<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>おめでとう！！！shizukuちゃんの本体をつかめた．最後に，<code>live2dw</code>フォルダをJekyllで生成したブログのフォルダに移動，shizukuちゃんの本体を<code>/_includes/_partials/footer.html</code>にコピーする．</p><p><em>終わり〜〜〜！</em></p><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><h1 id=\"Live2D\"><a href=\"#Live2D\" class=\"headerlink\" title=\"Live2D\"></a>Live2D</h1><p>左下のこの子をどうやって生成したか？この記事で説明する．</p><p><img src=\"https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png\" alt></p><p>2次元のキャラクターに命を吹き込むこの偉大なるプロジェクトは<a href=\"https://github.com/EYHN/hexo-helper-live2d\" target=\"_blank\" rel=\"noopener\">Live2D</a>．しかし，プロジェクトはHexo向けで，作者はJekyllでの実装方法を提供していない，どうしよう？！</p>","more":"<h1 id=\"Jekyllで実装\"><a href=\"#Jekyllで実装\" class=\"headerlink\" title=\"Jekyllで実装\"></a>Jekyllで実装</h1><p>私はlazyな人なので，原理を究明してJekyllにコンパイルすることは〜，さすがにしない！ここで「バカ」な方法で解決する．</p><p>作者がHexoでの実装方法を提供しているから，いっそうHexoでキャラクターをコンパイルして，キャラクターのコードを直接Jekyllに移植すればいいじゃん？JekyllでもHexoでも<strong>静的</strong>サイトジェネレータでしょう．最終的に，コンパイルの結果が出る．その結果から，キャラクターのコードを探し出すのは今回の要務．</p><h2 id=\"Hexoをインストール\"><a href=\"#Hexoをインストール\" class=\"headerlink\" title=\"Hexoをインストール\"></a>Hexoをインストール</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo init blog</span><br><span class=\"line\">cd blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure><p>はい！Hexoのウェブページが出たでしょう．オーケー，問題なし，いったんserverを閉じて，次に行こう．</p><h2 id=\"Live2Dをインストール\"><a href=\"#Live2Dをインストール\" class=\"headerlink\" title=\"Live2Dをインストール\"></a>Live2Dをインストール</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>次に，以下のコードをHexoで生成したブログの<code>_config.xml</code>に追加する：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">live2d:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  scriptFrom:</span> <span class=\"string\">local</span></span><br><span class=\"line\"><span class=\"attr\">  pluginRootPath:</span> <span class=\"string\">live2dw/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginJsPath:</span> <span class=\"string\">lib/</span></span><br><span class=\"line\"><span class=\"attr\">  pluginModelPath:</span> <span class=\"string\">assets/</span></span><br><span class=\"line\"><span class=\"attr\">  tagMode:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  debug:</span> <span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"attr\">  model:</span></span><br><span class=\"line\"><span class=\"attr\">    use:</span> <span class=\"string\">shizuku</span></span><br><span class=\"line\"><span class=\"attr\">  display:</span></span><br><span class=\"line\"><span class=\"attr\">    position:</span> <span class=\"string\">right</span></span><br><span class=\"line\"><span class=\"attr\">    width:</span> <span class=\"number\">150</span></span><br><span class=\"line\"><span class=\"attr\">    height:</span> <span class=\"number\">300</span></span><br><span class=\"line\"><span class=\"attr\">  mobile:</span></span><br><span class=\"line\"><span class=\"attr\">    show:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure><p>ひとまず，フレームワークは構築できた．Live2Dのファイルを<a href=\"https://github.com/xiazeyu/live2d-widget-models\" target=\"_blank\" rel=\"noopener\">ダンロード</a>する必要がある．</p><p><code>git clone</code>した後，<code>live2d-widget-model-shizuku</code>下の<code>assets</code>にある内容（<code>assets</code>自体を含まない）を，すべてHexoの<code>blog</code>フォルダ下の<code>live2d_models/shizuku</code>フォルダ（新規に作って）にコピーする．ファイルのツリーはこうなる：</p><ul><li>blog<ul><li>live2d_models<ul><li>shizuku<ul><li>moc, mtn, shizuku.model.json…</li></ul></li></ul></li></ul></li></ul><h2 id=\"コードを抽出\"><a href=\"#コードを抽出\" class=\"headerlink\" title=\"コードを抽出\"></a>コードを抽出</h2><p>もう一回<code>hexo s</code>を実行して，shizukuちゃんでたでしょう．</p><p><img src=\"https://i.loli.net/2019/07/29/5d3dc78ede71a42521.png\" alt></p><p>問題なければ，<code>hexo g</code>でブログをコンパイルする．生成された<code>public</code>の中に，<code>live2dw</code>フォルダがあるはず．その後，<code>public</code>下の<code>index.html</code>を開いて，一番したのこの行を見つける：</p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"/live2dw/lib/L2Dwidget.min.js?094cbace49a39548bed64abff5988b05\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span>L2Dwidget.init(&#123;\"pluginRootPath\":\"live2dw/\",\"pluginJsPath\":\"lib/\",\"pluginModelPath\":\"assets/\",\"tagMode\":false,\"debug\":false,\"model\":&#123;\"jsonPath\":\"/live2dw/assets/shizuku.model.json\"&#125;,\"display\":&#123;\"position\":\"right\",\"width\":150,\"height\":300&#125;,\"mobile\":&#123;\"show\":true&#125;,\"log\":false&#125;);<span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>おめでとう！！！shizukuちゃんの本体をつかめた．最後に，<code>live2dw</code>フォルダをJekyllで生成したブログのフォルダに移動，shizukuちゃんの本体を<code>/_includes/_partials/footer.html</code>にコピーする．</p><p><em>終わり〜〜〜！</em></p><!-- rebuild by neat -->"},{"title":"GitHub Pagesでブログを作る","date":"2019-07-25T15:00:00.000Z","_content":"\n{% note warning %} 2019/07/27: 本ブログはもうHexoに引っ越した．Demoがもう見えないけど，このJekyllの記事はまだまだ適用．{% endnote %}\n\n{% note info %}P.S. Hexoはいいぞ :){% endnote %}\n\n> このブログは[NexT](https://github.com/Simpleyyt/jekyll-theme-next) Themeに基づいて作ったもの．[Simpleyyt](https://github.com/Simpleyyt)に感謝...\n\n# 環境の設定\n\nLinuxでの実装過程を示す．（他のOSでの実装方法自分で調べなさい，使うものは同じだから）\n\n1. Ruby\n\n   ```shell\n   apt install ruby ruby-dev\n   ```\n\n2. RubyGems\n\n    [公式サイト](https://rubygems.org/pages/download)からパッケージをダンロードして，解凍した後，`ruby setup.rb`でインストール．\n\n3. NodeJS\n\n   ```shell\n   apt install nodejs\n   ```\n\n4. Bundler\n\n   ```shell\n   gem install bundler\n   ```\n\n5. 以上で何らかのエーラーが出たら，ライブラリが完備していないかもしれない．その時\n\n   ```shell\n   apt install build-essential patch ruby-dev zlib1g-dev \n   ```\n<!-- more -->\n\n# ブログの設定\n\nまず，NexT Themeをパソコンに`git clone`：\n\n```shell\ngit clone https://github.com/Simpleyyt/jekyll-theme-next.git\ncd jekyll-theme-next\n```\n\n依存をインストール：\n\n```shell\nbundle install\n```\n\nJekyllを実行：\n\n```\nbundle exec jekyll server\n```\n\nこの時，ブラウザで[http://localhost:4000](http://localhost:4000)にアクセスしたら，以下の画面が見えるはず，おめでとう！ブログの作成もう完了~\n\n![](https://i.loli.net/2019/07/26/5d3a896e3fb2c56864.png)\n\n\n後は自分らしいのものに加工して，GitHubに載せるだけ．\n\n# Theme設定\n\n## Schemeを選択\n\nSchemeはNexTが提供している特性の一つで，Schemeを通して，NexTは様々な外観テーマを提供している．今，NexTには３種類のSchemeがある：\n\n- Muse\n- Mist\n- Pisces\n\nこのブログの外観テーマはMuseで，他の２つのテーマは自分で変えてみて，好きなものを選べればいい．\n\nSchemeの変更はフォルダにある`_config.yml`をいじればいい，schemeを検索して，対応するセッティングを見える．使用したいScheme前のコメントを消せばOK．\n\n```yaml\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n```\n\n## 言語の設定\n\nNexTは多様な言語をサポートしている．`_config.yml`を編輯することで，言語サポートを指定する．例えば，日本語にしたい場合は，以下のように設定：\n\n```yaml\nlanguage: ja\n```\n\n今NexTが対応している言語は下表に示す：\n\n| 言語         | コード               | 設定例                              |\n| :----------- | :------------------- | :---------------------------------- |\n| English      | `en`                 | `language: en`                      |\n| 简体中文     | `zh-Hans`            | `language: zh-Hans`                 |\n| Français     | `fr-FR`              | `language: fr-FR`                   |\n| Português    | `pt`                 | `language: pt` or `language: pt-BR` |\n| 繁體中文     | `zh-hk` 或者 `zh-tw` | `language: zh-hk`                   |\n| Русский язык | `ru`                 | `language: ru`                      |\n| Deutsch      | `de`                 | `language: de`                      |\n| 日本語       | `ja`                 | `language: ja`                      |\n| Indonesian   | `id`                 | `language: id`                      |\n| Korean       | `ko`                 | `language: ko`                      |\n\n## メニューの設定\n\nメニューは３つの部分から構成されている，１つ目はメニュー項目（名称とリンク），２つ目は表示するテキスト，３つ目はメニュー項目に対応するアイコン．NexTは [Font Awesome](https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/)のアイコンを利用しており，600+のアイコンを提供し，ほとんどの使用シーンをカバーできると同時に，アイコンがRetinaスクリンでのぼやける問題も心配する必要がない．\n\n`_config.yml`を編輯して，メニューを設定しましょう．\n\n1. メニュー項目の設定，フォマットは`項目名:リンク`.\n\n   ```yaml\n   menu:\n     home: /\n     archives: /archives\n     #about: /about\n     #categories: /categories\n     tags: /tags\n     #commonweal: /404.html\n   ```\n\n   Nextにあるデフォルトの項目は以下に示す：\n\n\t| Key        | 設定値                    | 表示するテキスト（日本語） |\n| :--------- | :------------------------ | :------------------------- |\n| home       | `home: /`                 | ホーム                     |\n| archives   | `archives: /archives`     | アーカイブ                 |\n| categories | `categories: /categories` | カテゴリ                   |\n| tags       | `tags: /tags`             | タグ                       |\n| about      | `about: /about`           | About                      |\n\n2. メニュー項目のアイコンを設定，フォマットは`項目名：アイコン名`，アイコン名は[ここ](https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/)から調べられる．`enable`の値を`false`にすると，アイコンは消える．\n\n   ```yaml\n   menu_icons:\n     enable: true\n     # Icon Mapping.\n     home: home\n     about: user\n     categories: th\n     tags: tags\n     archives: archive\n   ```\n\n## サイドバーの設定\n\nデフォルトの場合，サイドバーは文章のページ（見出しがある時）でしか出ない．ポジションは右側．`_config.yml`を編輯することで，サイドバーのポジションと出現タイミングを変えられる．\n\n1. ポジション（`sidebar.position`）\n\n   - left - 左寄り\n   - right - 右寄り\n\n   > P.S. ポジションの変更は Pisces Schemeのみで利用可能．\n\n   ```yaml\n   sidebar:\n     position: left\n   ```\n\n2. サイドバーの出現タイミング（`sidebar.display`）\n\n   - post - デフォルト，文章のページ（見出しがある時）で現れる\n   - always - 全てのページで現れる\n   - hide - 全てのベージで隠れる（クリックで展開できる）\n   - remove - 完全削除\n\n   ```yaml\n   sidebar:\n     display: post\n   ```\n\n   > P.S サイドバーは`use motion: false`（サイトのアニメーションを利用しない）の場合，出現しない．\n\n## プロフィール画像の設定\n\n`_config.yml`をオープン，`avatar`のところを編輯する．画像のリンクはインタネットのリンクでもいいし，サイト内のリンクでもいい：\n\n| リンク            | 値                                                           |\n| :---------------- | :----------------------------------------------------------- |\n| インタネットのurl | `http://example.com/avatar.png`                              |\n| サイト内のリンク  | 画像を `assets/images/` のフォルダに置く，  設定は：`avatar: /assets/images/avatar.png` |\n\nプロフィール画像の設定例：\n\n```yaml\navatar: http://example.com/avatar.png\n```\n\n## 作者のニックネームの設定\n\n`_config.yml`にある`author`をほしいニックネームに設定する．\n\n## サイトの紹介\n\n`_config.yml`にある`description`のところに，サイトの紹介を書く．好きな座右の銘を書いても構わない :)\n\n# サードパーティのサービス\n\nNexTに様々なサードパーティのサービス（コメントとか字数の統計とか）が統合されてある．自分の必要に応じて，`_config.yml`をいじってください．\n\n# Live2Dの追加\n\n私のブログを見た方々は，この左下の子に気づいたでしょう．この子は[live2d](https://www.live2d.com/ja/about/whats_live2d)という技術で作られた子で，サイトに追加する過程がちょっと複雑で，他の記事に書く．\n\n![](https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png)\n\n# GitHubにアップロード\n\nさあ，どうやって自分のブログをインタネットを通して他の人に見せるの？\n\nサーバーに載せればいい．しかし，サーバーはどうやって入手する？自分で作るかクラウドサーバーを買う．どれも時間とお金をかかる面倒くさい作業．幸いなことに，GitHubでGitHub Pagesというサービスを利用することで，誰でも簡単に，而も無料でウェブサイトを作ることができる．\n\n1. [GitHub](https://github.com/)のアカウントを作る\n\n2. リポジトリを新規に作成\n\n   リポジトリの名前は`自分のサイト名.github.io`\n\n   ![](https://i.loli.net/2019/07/26/5d3ab3812489c53253.png)\n\n3. `Upload files`をクリックし，ブログのフォルダをアップロードする\n\n   ![](https://i.loli.net/2019/07/26/5d3ab80930dbb35291.png)\n\n4. `自分のサイト名.github.io`をブラウザに入力すれば，ブログは出てくるよ！今，このリンクをアクセスすれば，世界の誰でもあなたのブログを見ることができる！！！\n","source":"_posts/2019-07-26-BuildBlog_jpn.md","raw":"---\ntitle: 'GitHub Pagesでブログを作る'\ncategories: Web\ndate: 2019-07-26\ntags: [Web, Jekyll, Blog, Japanese]\n---\n\n{% note warning %} 2019/07/27: 本ブログはもうHexoに引っ越した．Demoがもう見えないけど，このJekyllの記事はまだまだ適用．{% endnote %}\n\n{% note info %}P.S. Hexoはいいぞ :){% endnote %}\n\n> このブログは[NexT](https://github.com/Simpleyyt/jekyll-theme-next) Themeに基づいて作ったもの．[Simpleyyt](https://github.com/Simpleyyt)に感謝...\n\n# 環境の設定\n\nLinuxでの実装過程を示す．（他のOSでの実装方法自分で調べなさい，使うものは同じだから）\n\n1. Ruby\n\n   ```shell\n   apt install ruby ruby-dev\n   ```\n\n2. RubyGems\n\n    [公式サイト](https://rubygems.org/pages/download)からパッケージをダンロードして，解凍した後，`ruby setup.rb`でインストール．\n\n3. NodeJS\n\n   ```shell\n   apt install nodejs\n   ```\n\n4. Bundler\n\n   ```shell\n   gem install bundler\n   ```\n\n5. 以上で何らかのエーラーが出たら，ライブラリが完備していないかもしれない．その時\n\n   ```shell\n   apt install build-essential patch ruby-dev zlib1g-dev \n   ```\n<!-- more -->\n\n# ブログの設定\n\nまず，NexT Themeをパソコンに`git clone`：\n\n```shell\ngit clone https://github.com/Simpleyyt/jekyll-theme-next.git\ncd jekyll-theme-next\n```\n\n依存をインストール：\n\n```shell\nbundle install\n```\n\nJekyllを実行：\n\n```\nbundle exec jekyll server\n```\n\nこの時，ブラウザで[http://localhost:4000](http://localhost:4000)にアクセスしたら，以下の画面が見えるはず，おめでとう！ブログの作成もう完了~\n\n![](https://i.loli.net/2019/07/26/5d3a896e3fb2c56864.png)\n\n\n後は自分らしいのものに加工して，GitHubに載せるだけ．\n\n# Theme設定\n\n## Schemeを選択\n\nSchemeはNexTが提供している特性の一つで，Schemeを通して，NexTは様々な外観テーマを提供している．今，NexTには３種類のSchemeがある：\n\n- Muse\n- Mist\n- Pisces\n\nこのブログの外観テーマはMuseで，他の２つのテーマは自分で変えてみて，好きなものを選べればいい．\n\nSchemeの変更はフォルダにある`_config.yml`をいじればいい，schemeを検索して，対応するセッティングを見える．使用したいScheme前のコメントを消せばOK．\n\n```yaml\n#scheme: Muse\n#scheme: Mist\nscheme: Pisces\n```\n\n## 言語の設定\n\nNexTは多様な言語をサポートしている．`_config.yml`を編輯することで，言語サポートを指定する．例えば，日本語にしたい場合は，以下のように設定：\n\n```yaml\nlanguage: ja\n```\n\n今NexTが対応している言語は下表に示す：\n\n| 言語         | コード               | 設定例                              |\n| :----------- | :------------------- | :---------------------------------- |\n| English      | `en`                 | `language: en`                      |\n| 简体中文     | `zh-Hans`            | `language: zh-Hans`                 |\n| Français     | `fr-FR`              | `language: fr-FR`                   |\n| Português    | `pt`                 | `language: pt` or `language: pt-BR` |\n| 繁體中文     | `zh-hk` 或者 `zh-tw` | `language: zh-hk`                   |\n| Русский язык | `ru`                 | `language: ru`                      |\n| Deutsch      | `de`                 | `language: de`                      |\n| 日本語       | `ja`                 | `language: ja`                      |\n| Indonesian   | `id`                 | `language: id`                      |\n| Korean       | `ko`                 | `language: ko`                      |\n\n## メニューの設定\n\nメニューは３つの部分から構成されている，１つ目はメニュー項目（名称とリンク），２つ目は表示するテキスト，３つ目はメニュー項目に対応するアイコン．NexTは [Font Awesome](https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/)のアイコンを利用しており，600+のアイコンを提供し，ほとんどの使用シーンをカバーできると同時に，アイコンがRetinaスクリンでのぼやける問題も心配する必要がない．\n\n`_config.yml`を編輯して，メニューを設定しましょう．\n\n1. メニュー項目の設定，フォマットは`項目名:リンク`.\n\n   ```yaml\n   menu:\n     home: /\n     archives: /archives\n     #about: /about\n     #categories: /categories\n     tags: /tags\n     #commonweal: /404.html\n   ```\n\n   Nextにあるデフォルトの項目は以下に示す：\n\n\t| Key        | 設定値                    | 表示するテキスト（日本語） |\n| :--------- | :------------------------ | :------------------------- |\n| home       | `home: /`                 | ホーム                     |\n| archives   | `archives: /archives`     | アーカイブ                 |\n| categories | `categories: /categories` | カテゴリ                   |\n| tags       | `tags: /tags`             | タグ                       |\n| about      | `about: /about`           | About                      |\n\n2. メニュー項目のアイコンを設定，フォマットは`項目名：アイコン名`，アイコン名は[ここ](https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/)から調べられる．`enable`の値を`false`にすると，アイコンは消える．\n\n   ```yaml\n   menu_icons:\n     enable: true\n     # Icon Mapping.\n     home: home\n     about: user\n     categories: th\n     tags: tags\n     archives: archive\n   ```\n\n## サイドバーの設定\n\nデフォルトの場合，サイドバーは文章のページ（見出しがある時）でしか出ない．ポジションは右側．`_config.yml`を編輯することで，サイドバーのポジションと出現タイミングを変えられる．\n\n1. ポジション（`sidebar.position`）\n\n   - left - 左寄り\n   - right - 右寄り\n\n   > P.S. ポジションの変更は Pisces Schemeのみで利用可能．\n\n   ```yaml\n   sidebar:\n     position: left\n   ```\n\n2. サイドバーの出現タイミング（`sidebar.display`）\n\n   - post - デフォルト，文章のページ（見出しがある時）で現れる\n   - always - 全てのページで現れる\n   - hide - 全てのベージで隠れる（クリックで展開できる）\n   - remove - 完全削除\n\n   ```yaml\n   sidebar:\n     display: post\n   ```\n\n   > P.S サイドバーは`use motion: false`（サイトのアニメーションを利用しない）の場合，出現しない．\n\n## プロフィール画像の設定\n\n`_config.yml`をオープン，`avatar`のところを編輯する．画像のリンクはインタネットのリンクでもいいし，サイト内のリンクでもいい：\n\n| リンク            | 値                                                           |\n| :---------------- | :----------------------------------------------------------- |\n| インタネットのurl | `http://example.com/avatar.png`                              |\n| サイト内のリンク  | 画像を `assets/images/` のフォルダに置く，  設定は：`avatar: /assets/images/avatar.png` |\n\nプロフィール画像の設定例：\n\n```yaml\navatar: http://example.com/avatar.png\n```\n\n## 作者のニックネームの設定\n\n`_config.yml`にある`author`をほしいニックネームに設定する．\n\n## サイトの紹介\n\n`_config.yml`にある`description`のところに，サイトの紹介を書く．好きな座右の銘を書いても構わない :)\n\n# サードパーティのサービス\n\nNexTに様々なサードパーティのサービス（コメントとか字数の統計とか）が統合されてある．自分の必要に応じて，`_config.yml`をいじってください．\n\n# Live2Dの追加\n\n私のブログを見た方々は，この左下の子に気づいたでしょう．この子は[live2d](https://www.live2d.com/ja/about/whats_live2d)という技術で作られた子で，サイトに追加する過程がちょっと複雑で，他の記事に書く．\n\n![](https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png)\n\n# GitHubにアップロード\n\nさあ，どうやって自分のブログをインタネットを通して他の人に見せるの？\n\nサーバーに載せればいい．しかし，サーバーはどうやって入手する？自分で作るかクラウドサーバーを買う．どれも時間とお金をかかる面倒くさい作業．幸いなことに，GitHubでGitHub Pagesというサービスを利用することで，誰でも簡単に，而も無料でウェブサイトを作ることができる．\n\n1. [GitHub](https://github.com/)のアカウントを作る\n\n2. リポジトリを新規に作成\n\n   リポジトリの名前は`自分のサイト名.github.io`\n\n   ![](https://i.loli.net/2019/07/26/5d3ab3812489c53253.png)\n\n3. `Upload files`をクリックし，ブログのフォルダをアップロードする\n\n   ![](https://i.loli.net/2019/07/26/5d3ab80930dbb35291.png)\n\n4. `自分のサイト名.github.io`をブラウザに入力すれば，ブログは出てくるよ！今，このリンクをアクセスすれば，世界の誰でもあなたのブログを見ることができる！！！\n","slug":"2019-07-26-BuildBlog_jpn","published":1,"updated":"2019-08-15T11:23:58.013Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjzcljg2g000ejy74zdtlg7m2","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><div class=\"note warning\"><p>2019/07/27: 本ブログはもうHexoに引っ越した．Demoがもう見えないけど，このJekyllの記事はまだまだ適用．</p></div><div class=\"note info\"><p>P.S. Hexoはいいぞ :)</p></div><blockquote><p>このブログは<a href=\"https://github.com/Simpleyyt/jekyll-theme-next\" target=\"_blank\" rel=\"noopener\">NexT</a> Themeに基づいて作ったもの．<a href=\"https://github.com/Simpleyyt\" target=\"_blank\" rel=\"noopener\">Simpleyyt</a>に感謝…</p></blockquote><h1 id=\"環境の設定\"><a href=\"#環境の設定\" class=\"headerlink\" title=\"環境の設定\"></a>環境の設定</h1><p>Linuxでの実装過程を示す．（他のOSでの実装方法自分で調べなさい，使うものは同じだから）</p><ol><li><p>Ruby</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install ruby ruby-dev</span><br></pre></td></tr></table></figure></li><li><p>RubyGems</p><p><a href=\"https://rubygems.org/pages/download\" target=\"_blank\" rel=\"noopener\">公式サイト</a>からパッケージをダンロードして，解凍した後，<code>ruby setup.rb</code>でインストール．</p></li><li><p>NodeJS</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install nodejs</span><br></pre></td></tr></table></figure></li><li><p>Bundler</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install bundler</span><br></pre></td></tr></table></figure></li><li><p>以上で何らかのエーラーが出たら，ライブラリが完備していないかもしれない．その時</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install build-essential patch ruby-dev zlib1g-dev</span><br></pre></td></tr></table></figure></li></ol><a id=\"more\"></a><h1 id=\"ブログの設定\"><a href=\"#ブログの設定\" class=\"headerlink\" title=\"ブログの設定\"></a>ブログの設定</h1><p>まず，NexT Themeをパソコンに<code>git clone</code>：</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/Simpleyyt/jekyll-theme-next.git</span><br><span class=\"line\">cd jekyll-theme-next</span><br></pre></td></tr></table></figure><p>依存をインストール：</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundle install</span><br></pre></td></tr></table></figure><p>Jekyllを実行：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundle exec jekyll server</span><br></pre></td></tr></table></figure><p>この時，ブラウザで<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>にアクセスしたら，以下の画面が見えるはず，おめでとう！ブログの作成もう完了~</p><p><img src=\"https://i.loli.net/2019/07/26/5d3a896e3fb2c56864.png\" alt></p><p>後は自分らしいのものに加工して，GitHubに載せるだけ．</p><h1 id=\"Theme設定\"><a href=\"#Theme設定\" class=\"headerlink\" title=\"Theme設定\"></a>Theme設定</h1><h2 id=\"Schemeを選択\"><a href=\"#Schemeを選択\" class=\"headerlink\" title=\"Schemeを選択\"></a>Schemeを選択</h2><p>SchemeはNexTが提供している特性の一つで，Schemeを通して，NexTは様々な外観テーマを提供している．今，NexTには３種類のSchemeがある：</p><ul><li>Muse</li><li>Mist</li><li>Pisces</li></ul><p>このブログの外観テーマはMuseで，他の２つのテーマは自分で変えてみて，好きなものを選べればいい．</p><p>Schemeの変更はフォルダにある<code>_config.yml</code>をいじればいい，schemeを検索して，対応するセッティングを見える．使用したいScheme前のコメントを消せばOK．</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Pisces</span></span><br></pre></td></tr></table></figure><h2 id=\"言語の設定\"><a href=\"#言語の設定\" class=\"headerlink\" title=\"言語の設定\"></a>言語の設定</h2><p>NexTは多様な言語をサポートしている．<code>_config.yml</code>を編輯することで，言語サポートを指定する．例えば，日本語にしたい場合は，以下のように設定：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">ja</span></span><br></pre></td></tr></table></figure><p>今NexTが対応している言語は下表に示す：</p><table><thead><tr><th align=\"left\">言語</th><th align=\"left\">コード</th><th align=\"left\">設定例</th></tr></thead><tbody><tr><td align=\"left\">English</td><td align=\"left\"><code>en</code></td><td align=\"left\"><code>language: en</code></td></tr><tr><td align=\"left\">简体中文</td><td align=\"left\"><code>zh-Hans</code></td><td align=\"left\"><code>language: zh-Hans</code></td></tr><tr><td align=\"left\">Français</td><td align=\"left\"><code>fr-FR</code></td><td align=\"left\"><code>language: fr-FR</code></td></tr><tr><td align=\"left\">Português</td><td align=\"left\"><code>pt</code></td><td align=\"left\"><code>language: pt</code> or <code>language: pt-BR</code></td></tr><tr><td align=\"left\">繁體中文</td><td align=\"left\"><code>zh-hk</code> 或者 <code>zh-tw</code></td><td align=\"left\"><code>language: zh-hk</code></td></tr><tr><td align=\"left\">Русский язык</td><td align=\"left\"><code>ru</code></td><td align=\"left\"><code>language: ru</code></td></tr><tr><td align=\"left\">Deutsch</td><td align=\"left\"><code>de</code></td><td align=\"left\"><code>language: de</code></td></tr><tr><td align=\"left\">日本語</td><td align=\"left\"><code>ja</code></td><td align=\"left\"><code>language: ja</code></td></tr><tr><td align=\"left\">Indonesian</td><td align=\"left\"><code>id</code></td><td align=\"left\"><code>language: id</code></td></tr><tr><td align=\"left\">Korean</td><td align=\"left\"><code>ko</code></td><td align=\"left\"><code>language: ko</code></td></tr></tbody></table><h2 id=\"メニューの設定\"><a href=\"#メニューの設定\" class=\"headerlink\" title=\"メニューの設定\"></a>メニューの設定</h2><p>メニューは３つの部分から構成されている，１つ目はメニュー項目（名称とリンク），２つ目は表示するテキスト，３つ目はメニュー項目に対応するアイコン．NexTは <a href=\"https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/\" target=\"_blank\" rel=\"noopener\">Font Awesome</a>のアイコンを利用しており，600+のアイコンを提供し，ほとんどの使用シーンをカバーできると同時に，アイコンがRetinaスクリンでのぼやける問題も心配する必要がない．</p><p><code>_config.yml</code>を編輯して，メニューを設定しましょう．</p><ol><li><p>メニュー項目の設定，フォマットは<code>項目名:リンク</code>.</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">/archives</span></span><br><span class=\"line\">  <span class=\"comment\">#about: /about</span></span><br><span class=\"line\">  <span class=\"comment\">#categories: /categories</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span> <span class=\"string\">/tags</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404.html</span></span><br></pre></td></tr></table></figure><p>Nextにあるデフォルトの項目は以下に示す：</p><table><thead><tr><th align=\"left\">Key</th><th align=\"left\">設定値</th><th align=\"left\">表示するテキスト（日本語）</th></tr></thead><tbody><tr><td align=\"left\">home</td><td align=\"left\"><code>home: /</code></td><td align=\"left\">ホーム</td></tr><tr><td align=\"left\">archives</td><td align=\"left\"><code>archives: /archives</code></td><td align=\"left\">アーカイブ</td></tr><tr><td align=\"left\">categories</td><td align=\"left\"><code>categories: /categories</code></td><td align=\"left\">カテゴリ</td></tr><tr><td align=\"left\">tags</td><td align=\"left\"><code>tags: /tags</code></td><td align=\"left\">タグ</td></tr><tr><td align=\"left\">about</td><td align=\"left\"><code>about: /about</code></td><td align=\"left\">About</td></tr></tbody></table></li><li><p>メニュー項目のアイコンを設定，フォマットは<code>項目名：アイコン名</code>，アイコン名は<a href=\"https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/\" target=\"_blank\" rel=\"noopener\">ここ</a>から調べられる．<code>enable</code>の値を<code>false</code>にすると，アイコンは消える．</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu_icons:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Icon Mapping.</span></span><br><span class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">home</span></span><br><span class=\"line\"><span class=\"attr\">  about:</span> <span class=\"string\">user</span></span><br><span class=\"line\"><span class=\"attr\">  categories:</span> <span class=\"string\">th</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">archive</span></span><br></pre></td></tr></table></figure></li></ol><h2 id=\"サイドバーの設定\"><a href=\"#サイドバーの設定\" class=\"headerlink\" title=\"サイドバーの設定\"></a>サイドバーの設定</h2><p>デフォルトの場合，サイドバーは文章のページ（見出しがある時）でしか出ない．ポジションは右側．<code>_config.yml</code>を編輯することで，サイドバーのポジションと出現タイミングを変えられる．</p><ol><li><p>ポジション（<code>sidebar.position</code>）</p><ul><li>left - 左寄り</li><li>right - 右寄り</li></ul><blockquote><p>P.S. ポジションの変更は Pisces Schemeのみで利用可能．</p></blockquote><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\"><span class=\"attr\">  position:</span> <span class=\"string\">left</span></span><br></pre></td></tr></table></figure></li><li><p>サイドバーの出現タイミング（<code>sidebar.display</code>）</p><ul><li>post - デフォルト，文章のページ（見出しがある時）で現れる</li><li>always - 全てのページで現れる</li><li>hide - 全てのベージで隠れる（クリックで展開できる）</li><li>remove - 完全削除</li></ul><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\"><span class=\"attr\">  display:</span> <span class=\"string\">post</span></span><br></pre></td></tr></table></figure><blockquote><p>P.S サイドバーは<code>use motion: false</code>（サイトのアニメーションを利用しない）の場合，出現しない．</p></blockquote></li></ol><h2 id=\"プロフィール画像の設定\"><a href=\"#プロフィール画像の設定\" class=\"headerlink\" title=\"プロフィール画像の設定\"></a>プロフィール画像の設定</h2><p><code>_config.yml</code>をオープン，<code>avatar</code>のところを編輯する．画像のリンクはインタネットのリンクでもいいし，サイト内のリンクでもいい：</p><table><thead><tr><th align=\"left\">リンク</th><th align=\"left\">値</th></tr></thead><tbody><tr><td align=\"left\">インタネットのurl</td><td align=\"left\"><code>http://example.com/avatar.png</code></td></tr><tr><td align=\"left\">サイト内のリンク</td><td align=\"left\">画像を <code>assets/images/</code> のフォルダに置く， 設定は：<code>avatar: /assets/images/avatar.png</code></td></tr></tbody></table><p>プロフィール画像の設定例：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"attr\">http://example.com/avatar.png</span></span><br></pre></td></tr></table></figure><h2 id=\"作者のニックネームの設定\"><a href=\"#作者のニックネームの設定\" class=\"headerlink\" title=\"作者のニックネームの設定\"></a>作者のニックネームの設定</h2><p><code>_config.yml</code>にある<code>author</code>をほしいニックネームに設定する．</p><h2 id=\"サイトの紹介\"><a href=\"#サイトの紹介\" class=\"headerlink\" title=\"サイトの紹介\"></a>サイトの紹介</h2><p><code>_config.yml</code>にある<code>description</code>のところに，サイトの紹介を書く．好きな座右の銘を書いても構わない :)</p><h1 id=\"サードパーティのサービス\"><a href=\"#サードパーティのサービス\" class=\"headerlink\" title=\"サードパーティのサービス\"></a>サードパーティのサービス</h1><p>NexTに様々なサードパーティのサービス（コメントとか字数の統計とか）が統合されてある．自分の必要に応じて，<code>_config.yml</code>をいじってください．</p><h1 id=\"Live2Dの追加\"><a href=\"#Live2Dの追加\" class=\"headerlink\" title=\"Live2Dの追加\"></a>Live2Dの追加</h1><p>私のブログを見た方々は，この左下の子に気づいたでしょう．この子は<a href=\"https://www.live2d.com/ja/about/whats_live2d\" target=\"_blank\" rel=\"noopener\">live2d</a>という技術で作られた子で，サイトに追加する過程がちょっと複雑で，他の記事に書く．</p><p><img src=\"https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png\" alt></p><h1 id=\"GitHubにアップロード\"><a href=\"#GitHubにアップロード\" class=\"headerlink\" title=\"GitHubにアップロード\"></a>GitHubにアップロード</h1><p>さあ，どうやって自分のブログをインタネットを通して他の人に見せるの？</p><p>サーバーに載せればいい．しかし，サーバーはどうやって入手する？自分で作るかクラウドサーバーを買う．どれも時間とお金をかかる面倒くさい作業．幸いなことに，GitHubでGitHub Pagesというサービスを利用することで，誰でも簡単に，而も無料でウェブサイトを作ることができる．</p><ol><li><p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a>のアカウントを作る</p></li><li><p>リポジトリを新規に作成</p><p>リポジトリの名前は<code>自分のサイト名.github.io</code></p><p><img src=\"https://i.loli.net/2019/07/26/5d3ab3812489c53253.png\" alt></p></li><li><p><code>Upload files</code>をクリックし，ブログのフォルダをアップロードする</p><p><img src=\"https://i.loli.net/2019/07/26/5d3ab80930dbb35291.png\" alt></p></li><li><p><code>自分のサイト名.github.io</code>をブラウザに入力すれば，ブログは出てくるよ！今，このリンクをアクセスすれば，世界の誰でもあなたのブログを見ることができる！！！</p></li></ol><!-- rebuild by neat -->","site":{"data":{"styles":"/* build time:Thu Aug 15 2019 20:24:32 GMT+0900 (JST)*/\n.post-body p a{color:#0366d6;border-bottom:none;text-decoration:underline}.post-body p a:hover{color:#01438f}code{background:#f7f7f7;color:#f5871f}\n/* rebuild by neat */"}},"excerpt":"<!-- build time:Thu Aug 15 2019 20:24:33 GMT+0900 (JST) --><div class=\"note warning\"><p>2019/07/27: 本ブログはもうHexoに引っ越した．Demoがもう見えないけど，このJekyllの記事はまだまだ適用．</p></div><div class=\"note info\"><p>P.S. Hexoはいいぞ :)</p></div><blockquote><p>このブログは<a href=\"https://github.com/Simpleyyt/jekyll-theme-next\" target=\"_blank\" rel=\"noopener\">NexT</a> Themeに基づいて作ったもの．<a href=\"https://github.com/Simpleyyt\" target=\"_blank\" rel=\"noopener\">Simpleyyt</a>に感謝…</p></blockquote><h1 id=\"環境の設定\"><a href=\"#環境の設定\" class=\"headerlink\" title=\"環境の設定\"></a>環境の設定</h1><p>Linuxでの実装過程を示す．（他のOSでの実装方法自分で調べなさい，使うものは同じだから）</p><ol><li><p>Ruby</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install ruby ruby-dev</span><br></pre></td></tr></table></figure></li><li><p>RubyGems</p><p><a href=\"https://rubygems.org/pages/download\" target=\"_blank\" rel=\"noopener\">公式サイト</a>からパッケージをダンロードして，解凍した後，<code>ruby setup.rb</code>でインストール．</p></li><li><p>NodeJS</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install nodejs</span><br></pre></td></tr></table></figure></li><li><p>Bundler</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gem install bundler</span><br></pre></td></tr></table></figure></li><li><p>以上で何らかのエーラーが出たら，ライブラリが完備していないかもしれない．その時</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install build-essential patch ruby-dev zlib1g-dev</span><br></pre></td></tr></table></figure></li></ol>","more":"<h1 id=\"ブログの設定\"><a href=\"#ブログの設定\" class=\"headerlink\" title=\"ブログの設定\"></a>ブログの設定</h1><p>まず，NexT Themeをパソコンに<code>git clone</code>：</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/Simpleyyt/jekyll-theme-next.git</span><br><span class=\"line\">cd jekyll-theme-next</span><br></pre></td></tr></table></figure><p>依存をインストール：</p><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundle install</span><br></pre></td></tr></table></figure><p>Jekyllを実行：</p><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bundle exec jekyll server</span><br></pre></td></tr></table></figure><p>この時，ブラウザで<a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a>にアクセスしたら，以下の画面が見えるはず，おめでとう！ブログの作成もう完了~</p><p><img src=\"https://i.loli.net/2019/07/26/5d3a896e3fb2c56864.png\" alt></p><p>後は自分らしいのものに加工して，GitHubに載せるだけ．</p><h1 id=\"Theme設定\"><a href=\"#Theme設定\" class=\"headerlink\" title=\"Theme設定\"></a>Theme設定</h1><h2 id=\"Schemeを選択\"><a href=\"#Schemeを選択\" class=\"headerlink\" title=\"Schemeを選択\"></a>Schemeを選択</h2><p>SchemeはNexTが提供している特性の一つで，Schemeを通して，NexTは様々な外観テーマを提供している．今，NexTには３種類のSchemeがある：</p><ul><li>Muse</li><li>Mist</li><li>Pisces</li></ul><p>このブログの外観テーマはMuseで，他の２つのテーマは自分で変えてみて，好きなものを選べればいい．</p><p>Schemeの変更はフォルダにある<code>_config.yml</code>をいじればいい，schemeを検索して，対応するセッティングを見える．使用したいScheme前のコメントを消せばOK．</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#scheme: Muse</span></span><br><span class=\"line\"><span class=\"comment\">#scheme: Mist</span></span><br><span class=\"line\"><span class=\"attr\">scheme:</span> <span class=\"string\">Pisces</span></span><br></pre></td></tr></table></figure><h2 id=\"言語の設定\"><a href=\"#言語の設定\" class=\"headerlink\" title=\"言語の設定\"></a>言語の設定</h2><p>NexTは多様な言語をサポートしている．<code>_config.yml</code>を編輯することで，言語サポートを指定する．例えば，日本語にしたい場合は，以下のように設定：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">language:</span> <span class=\"string\">ja</span></span><br></pre></td></tr></table></figure><p>今NexTが対応している言語は下表に示す：</p><table><thead><tr><th align=\"left\">言語</th><th align=\"left\">コード</th><th align=\"left\">設定例</th></tr></thead><tbody><tr><td align=\"left\">English</td><td align=\"left\"><code>en</code></td><td align=\"left\"><code>language: en</code></td></tr><tr><td align=\"left\">简体中文</td><td align=\"left\"><code>zh-Hans</code></td><td align=\"left\"><code>language: zh-Hans</code></td></tr><tr><td align=\"left\">Français</td><td align=\"left\"><code>fr-FR</code></td><td align=\"left\"><code>language: fr-FR</code></td></tr><tr><td align=\"left\">Português</td><td align=\"left\"><code>pt</code></td><td align=\"left\"><code>language: pt</code> or <code>language: pt-BR</code></td></tr><tr><td align=\"left\">繁體中文</td><td align=\"left\"><code>zh-hk</code> 或者 <code>zh-tw</code></td><td align=\"left\"><code>language: zh-hk</code></td></tr><tr><td align=\"left\">Русский язык</td><td align=\"left\"><code>ru</code></td><td align=\"left\"><code>language: ru</code></td></tr><tr><td align=\"left\">Deutsch</td><td align=\"left\"><code>de</code></td><td align=\"left\"><code>language: de</code></td></tr><tr><td align=\"left\">日本語</td><td align=\"left\"><code>ja</code></td><td align=\"left\"><code>language: ja</code></td></tr><tr><td align=\"left\">Indonesian</td><td align=\"left\"><code>id</code></td><td align=\"left\"><code>language: id</code></td></tr><tr><td align=\"left\">Korean</td><td align=\"left\"><code>ko</code></td><td align=\"left\"><code>language: ko</code></td></tr></tbody></table><h2 id=\"メニューの設定\"><a href=\"#メニューの設定\" class=\"headerlink\" title=\"メニューの設定\"></a>メニューの設定</h2><p>メニューは３つの部分から構成されている，１つ目はメニュー項目（名称とリンク），２つ目は表示するテキスト，３つ目はメニュー項目に対応するアイコン．NexTは <a href=\"https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/\" target=\"_blank\" rel=\"noopener\">Font Awesome</a>のアイコンを利用しており，600+のアイコンを提供し，ほとんどの使用シーンをカバーできると同時に，アイコンがRetinaスクリンでのぼやける問題も心配する必要がない．</p><p><code>_config.yml</code>を編輯して，メニューを設定しましょう．</p><ol><li><p>メニュー項目の設定，フォマットは<code>項目名:リンク</code>.</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu:</span></span><br><span class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">/archives</span></span><br><span class=\"line\">  <span class=\"comment\">#about: /about</span></span><br><span class=\"line\">  <span class=\"comment\">#categories: /categories</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span> <span class=\"string\">/tags</span></span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404.html</span></span><br></pre></td></tr></table></figure><p>Nextにあるデフォルトの項目は以下に示す：</p><table><thead><tr><th align=\"left\">Key</th><th align=\"left\">設定値</th><th align=\"left\">表示するテキスト（日本語）</th></tr></thead><tbody><tr><td align=\"left\">home</td><td align=\"left\"><code>home: /</code></td><td align=\"left\">ホーム</td></tr><tr><td align=\"left\">archives</td><td align=\"left\"><code>archives: /archives</code></td><td align=\"left\">アーカイブ</td></tr><tr><td align=\"left\">categories</td><td align=\"left\"><code>categories: /categories</code></td><td align=\"left\">カテゴリ</td></tr><tr><td align=\"left\">tags</td><td align=\"left\"><code>tags: /tags</code></td><td align=\"left\">タグ</td></tr><tr><td align=\"left\">about</td><td align=\"left\"><code>about: /about</code></td><td align=\"left\">About</td></tr></tbody></table></li><li><p>メニュー項目のアイコンを設定，フォマットは<code>項目名：アイコン名</code>，アイコン名は<a href=\"https://aksakalli.github.io/jekyll-doc-theme/docs/font-awesome/\" target=\"_blank\" rel=\"noopener\">ここ</a>から調べられる．<code>enable</code>の値を<code>false</code>にすると，アイコンは消える．</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">menu_icons:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># Icon Mapping.</span></span><br><span class=\"line\"><span class=\"attr\">  home:</span> <span class=\"string\">home</span></span><br><span class=\"line\"><span class=\"attr\">  about:</span> <span class=\"string\">user</span></span><br><span class=\"line\"><span class=\"attr\">  categories:</span> <span class=\"string\">th</span></span><br><span class=\"line\"><span class=\"attr\">  tags:</span> <span class=\"string\">tags</span></span><br><span class=\"line\"><span class=\"attr\">  archives:</span> <span class=\"string\">archive</span></span><br></pre></td></tr></table></figure></li></ol><h2 id=\"サイドバーの設定\"><a href=\"#サイドバーの設定\" class=\"headerlink\" title=\"サイドバーの設定\"></a>サイドバーの設定</h2><p>デフォルトの場合，サイドバーは文章のページ（見出しがある時）でしか出ない．ポジションは右側．<code>_config.yml</code>を編輯することで，サイドバーのポジションと出現タイミングを変えられる．</p><ol><li><p>ポジション（<code>sidebar.position</code>）</p><ul><li>left - 左寄り</li><li>right - 右寄り</li></ul><blockquote><p>P.S. ポジションの変更は Pisces Schemeのみで利用可能．</p></blockquote><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\"><span class=\"attr\">  position:</span> <span class=\"string\">left</span></span><br></pre></td></tr></table></figure></li><li><p>サイドバーの出現タイミング（<code>sidebar.display</code>）</p><ul><li>post - デフォルト，文章のページ（見出しがある時）で現れる</li><li>always - 全てのページで現れる</li><li>hide - 全てのベージで隠れる（クリックで展開できる）</li><li>remove - 完全削除</li></ul><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">sidebar:</span></span><br><span class=\"line\"><span class=\"attr\">  display:</span> <span class=\"string\">post</span></span><br></pre></td></tr></table></figure><blockquote><p>P.S サイドバーは<code>use motion: false</code>（サイトのアニメーションを利用しない）の場合，出現しない．</p></blockquote></li></ol><h2 id=\"プロフィール画像の設定\"><a href=\"#プロフィール画像の設定\" class=\"headerlink\" title=\"プロフィール画像の設定\"></a>プロフィール画像の設定</h2><p><code>_config.yml</code>をオープン，<code>avatar</code>のところを編輯する．画像のリンクはインタネットのリンクでもいいし，サイト内のリンクでもいい：</p><table><thead><tr><th align=\"left\">リンク</th><th align=\"left\">値</th></tr></thead><tbody><tr><td align=\"left\">インタネットのurl</td><td align=\"left\"><code>http://example.com/avatar.png</code></td></tr><tr><td align=\"left\">サイト内のリンク</td><td align=\"left\">画像を <code>assets/images/</code> のフォルダに置く， 設定は：<code>avatar: /assets/images/avatar.png</code></td></tr></tbody></table><p>プロフィール画像の設定例：</p><figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"attr\">http://example.com/avatar.png</span></span><br></pre></td></tr></table></figure><h2 id=\"作者のニックネームの設定\"><a href=\"#作者のニックネームの設定\" class=\"headerlink\" title=\"作者のニックネームの設定\"></a>作者のニックネームの設定</h2><p><code>_config.yml</code>にある<code>author</code>をほしいニックネームに設定する．</p><h2 id=\"サイトの紹介\"><a href=\"#サイトの紹介\" class=\"headerlink\" title=\"サイトの紹介\"></a>サイトの紹介</h2><p><code>_config.yml</code>にある<code>description</code>のところに，サイトの紹介を書く．好きな座右の銘を書いても構わない :)</p><h1 id=\"サードパーティのサービス\"><a href=\"#サードパーティのサービス\" class=\"headerlink\" title=\"サードパーティのサービス\"></a>サードパーティのサービス</h1><p>NexTに様々なサードパーティのサービス（コメントとか字数の統計とか）が統合されてある．自分の必要に応じて，<code>_config.yml</code>をいじってください．</p><h1 id=\"Live2Dの追加\"><a href=\"#Live2Dの追加\" class=\"headerlink\" title=\"Live2Dの追加\"></a>Live2Dの追加</h1><p>私のブログを見た方々は，この左下の子に気づいたでしょう．この子は<a href=\"https://www.live2d.com/ja/about/whats_live2d\" target=\"_blank\" rel=\"noopener\">live2d</a>という技術で作られた子で，サイトに追加する過程がちょっと複雑で，他の記事に書く．</p><p><img src=\"https://i.loli.net/2019/07/26/5d3aac61b8f4469960.png\" alt></p><h1 id=\"GitHubにアップロード\"><a href=\"#GitHubにアップロード\" class=\"headerlink\" title=\"GitHubにアップロード\"></a>GitHubにアップロード</h1><p>さあ，どうやって自分のブログをインタネットを通して他の人に見せるの？</p><p>サーバーに載せればいい．しかし，サーバーはどうやって入手する？自分で作るかクラウドサーバーを買う．どれも時間とお金をかかる面倒くさい作業．幸いなことに，GitHubでGitHub Pagesというサービスを利用することで，誰でも簡単に，而も無料でウェブサイトを作ることができる．</p><ol><li><p><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">GitHub</a>のアカウントを作る</p></li><li><p>リポジトリを新規に作成</p><p>リポジトリの名前は<code>自分のサイト名.github.io</code></p><p><img src=\"https://i.loli.net/2019/07/26/5d3ab3812489c53253.png\" alt></p></li><li><p><code>Upload files</code>をクリックし，ブログのフォルダをアップロードする</p><p><img src=\"https://i.loli.net/2019/07/26/5d3ab80930dbb35291.png\" alt></p></li><li><p><code>自分のサイト名.github.io</code>をブラウザに入力すれば，ブログは出てくるよ！今，このリンクをアクセスすれば，世界の誰でもあなたのブログを見ることができる！！！</p></li></ol><!-- rebuild by neat -->"}],"PostAsset":[],"PostCategory":[{"post_id":"cjzcljg270008jy74rnzdnxaw","category_id":"cjzcljg230004jy749qm6w099","_id":"cjzcljg2i000fjy74uh068r1w"},{"post_id":"cjzcljg1t0000jy74xsekhigl","category_id":"cjzcljg230004jy749qm6w099","_id":"cjzcljg2j000ijy74rxvq5efj"},{"post_id":"cjzcljg200002jy74ngqr4wsw","category_id":"cjzcljg230004jy749qm6w099","_id":"cjzcljg2j000jjy74dyftpp1o"},{"post_id":"cjzcljg250006jy7476zcnu90","category_id":"cjzcljg2i000gjy74m7btdjqm","_id":"cjzcljg2k000njy74veja0gjv"},{"post_id":"cjzcljg29000ajy740hcyghdf","category_id":"cjzcljg2j000kjy74atzbgdvw","_id":"cjzcljg2m000sjy74z4bhu4ci"},{"post_id":"cjzcljg2g000ejy74zdtlg7m2","category_id":"cjzcljg2j000kjy74atzbgdvw","_id":"cjzcljg2m000ujy74kbleebhk"}],"PostTag":[{"post_id":"cjzcljg1t0000jy74xsekhigl","tag_id":"cjzcljg250005jy74vpmk0acw","_id":"cjzcljg2k000mjy74rk5g3p2u"},{"post_id":"cjzcljg1t0000jy74xsekhigl","tag_id":"cjzcljg2e000cjy74to9u5wnv","_id":"cjzcljg2k000ojy7467pweaqr"},{"post_id":"cjzcljg1t0000jy74xsekhigl","tag_id":"cjzcljg2i000hjy7494bf4mfb","_id":"cjzcljg2l000rjy741rl42on6"},{"post_id":"cjzcljg200002jy74ngqr4wsw","tag_id":"cjzcljg250005jy74vpmk0acw","_id":"cjzcljg2n000wjy749vaei2bo"},{"post_id":"cjzcljg200002jy74ngqr4wsw","tag_id":"cjzcljg2e000cjy74to9u5wnv","_id":"cjzcljg2n000xjy7463dv7saz"},{"post_id":"cjzcljg200002jy74ngqr4wsw","tag_id":"cjzcljg2m000tjy74eujga32t","_id":"cjzcljg2n000zjy74rca25trm"},{"post_id":"cjzcljg250006jy7476zcnu90","tag_id":"cjzcljg2m000vjy747b0l70iy","_id":"cjzcljg2n0010jy74c8a5597f"},{"post_id":"cjzcljg270008jy74rnzdnxaw","tag_id":"cjzcljg250005jy74vpmk0acw","_id":"cjzcljg2p0013jy74wap3dsjx"},{"post_id":"cjzcljg270008jy74rnzdnxaw","tag_id":"cjzcljg2e000cjy74to9u5wnv","_id":"cjzcljg2p0014jy74bnd0vzpr"},{"post_id":"cjzcljg270008jy74rnzdnxaw","tag_id":"cjzcljg2m000tjy74eujga32t","_id":"cjzcljg2p0016jy74i42izkpv"},{"post_id":"cjzcljg29000ajy740hcyghdf","tag_id":"cjzcljg2o0012jy74t6bco5cv","_id":"cjzcljg2r001bjy74ltdzeqf4"},{"post_id":"cjzcljg29000ajy740hcyghdf","tag_id":"cjzcljg2p0015jy74qnmvcj5a","_id":"cjzcljg2s001cjy74wkiocojr"},{"post_id":"cjzcljg29000ajy740hcyghdf","tag_id":"cjzcljg2q0017jy74vvc12ray","_id":"cjzcljg2s001ejy74zewh1ped"},{"post_id":"cjzcljg29000ajy740hcyghdf","tag_id":"cjzcljg2q0018jy743w7a0942","_id":"cjzcljg2s001fjy74zzsdgohz"},{"post_id":"cjzcljg29000ajy740hcyghdf","tag_id":"cjzcljg2q0019jy74fyqy6xwn","_id":"cjzcljg2t001hjy74zad9r3r1"},{"post_id":"cjzcljg2g000ejy74zdtlg7m2","tag_id":"cjzcljg2o0012jy74t6bco5cv","_id":"cjzcljg2u001jjy74snzz9axv"},{"post_id":"cjzcljg2g000ejy74zdtlg7m2","tag_id":"cjzcljg2p0015jy74qnmvcj5a","_id":"cjzcljg2u001kjy74y86qsgs0"},{"post_id":"cjzcljg2g000ejy74zdtlg7m2","tag_id":"cjzcljg2q0017jy74vvc12ray","_id":"cjzcljg2u001ljy741ut3y1cb"},{"post_id":"cjzcljg2g000ejy74zdtlg7m2","tag_id":"cjzcljg2q0018jy743w7a0942","_id":"cjzcljg2v001mjy74jsxl1fqg"}],"Tag":[{"name":"Crawler","_id":"cjzcljg250005jy74vpmk0acw"},{"name":"Python","_id":"cjzcljg2e000cjy74to9u5wnv"},{"name":"English","_id":"cjzcljg2i000hjy7494bf4mfb"},{"name":"Chinese","_id":"cjzcljg2m000tjy74eujga32t"},{"name":"Photography","_id":"cjzcljg2m000vjy747b0l70iy"},{"name":"Web","_id":"cjzcljg2o0012jy74t6bco5cv"},{"name":"Jekyll","_id":"cjzcljg2p0015jy74qnmvcj5a"},{"name":"Blog","_id":"cjzcljg2q0017jy74vvc12ray"},{"name":"Japanese","_id":"cjzcljg2q0018jy743w7a0942"},{"name":"Live2D","_id":"cjzcljg2q0019jy74fyqy6xwn"}]}}